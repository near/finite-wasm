(module
  (type $check (;0;) (func (param i32 i32 i32) (result i32)))
  (type (;1;) (func))
  (type (;2;) (func (result i32)))
  (type (;3;) (func (result i64)))
  (type (;4;) (func (result f32)))
  (type (;5;) (func (result f64)))
  (type (;6;) (func (param i32) (result i32)))
  (type (;7;) (func (param i32)))
  (type (;8;) (func (param i32 i32)))
  (type (;9;) (func (param i64)))
  (type (;10;) (func (param i64 i64)))
  (type (;11;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 9)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 11)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 11)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 11)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 11)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 11)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 11)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;7;) (type 10)))
  (import "spectest" "finite_wasm_unstack" (func $finite_wasm_unstack (;8;) (type 10)))
  (table (;0;) 1 1 funcref)
  (memory (;0;) 1)
  (global $a (;0;) (mut i32) i32.const 10)
  (export "type-i32" (func 10))
  (export "type-i64" (func 11))
  (export "type-f32" (func 12))
  (export "type-f64" (func 13))
  (export "type-i32-value" (func 14))
  (export "type-i64-value" (func 15))
  (export "type-f32-value" (func 16))
  (export "type-f64-value" (func 17))
  (export "as-block-first" (func 18))
  (export "as-block-mid" (func 19))
  (export "as-block-last" (func 20))
  (export "as-block-first-value" (func 21))
  (export "as-block-mid-value" (func 22))
  (export "as-block-last-value" (func 23))
  (export "as-loop-first" (func 24))
  (export "as-loop-mid" (func 25))
  (export "as-loop-last" (func 26))
  (export "as-br-value" (func 27))
  (export "as-br_if-cond" (func 28))
  (export "as-br_if-value" (func 29))
  (export "as-br_if-value-cond" (func 30))
  (export "as-br_table-index" (func 31))
  (export "as-br_table-value" (func 32))
  (export "as-br_table-value-index" (func 33))
  (export "as-return-value" (func 34))
  (export "as-if-cond" (func 35))
  (export "as-if-then" (func 36))
  (export "as-if-else" (func 37))
  (export "as-select-first" (func 38))
  (export "as-select-second" (func 39))
  (export "as-select-cond" (func 40))
  (export "as-call-first" (func 42))
  (export "as-call-mid" (func 43))
  (export "as-call-last" (func 44))
  (export "as-call_indirect-func" (func 46))
  (export "as-call_indirect-first" (func 47))
  (export "as-call_indirect-mid" (func 48))
  (export "as-call_indirect-last" (func 49))
  (export "as-local.set-value" (func 50))
  (export "as-local.tee-value" (func 51))
  (export "as-global.set-value" (func 52))
  (export "as-load-address" (func 53))
  (export "as-loadN-address" (func 54))
  (export "as-store-address" (func 55))
  (export "as-store-value" (func 56))
  (export "as-storeN-address" (func 57))
  (export "as-storeN-value" (func 58))
  (export "as-unary-operand" (func 59))
  (export "as-binary-left" (func 60))
  (export "as-binary-right" (func 61))
  (export "as-test-operand" (func 62))
  (export "as-compare-left" (func 63))
  (export "as-compare-right" (func 64))
  (export "as-memory.grow-size" (func 65))
  (export "nested-block-value" (func 66))
  (export "nested-br-value" (func 67))
  (export "nested-br_if-value" (func 68))
  (export "nested-br_if-value-cond" (func 69))
  (export "nested-br_table-value" (func 70))
  (export "nested-br_table-value-index" (func 71))
  (elem (;0;) (table 0) (i32.const 0) func $func)
  (func $dummy (;9;) (type 1))
  (func (;10;) (type 1)
    block ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block ;; label = @2
        i32.const 0
        i32.const 1
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        i32.ctz
        drop
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;11;) (type 1)
    block ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block ;; label = @2
        i64.const 0
        i32.const 1
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        i64.ctz
        drop
      end
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;12;) (type 1)
    block ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block ;; label = @2
        f32.const 0x0p+0 (;=0;)
        i32.const 1
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        f32.neg
        drop
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;13;) (type 1)
    block ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block ;; label = @2
        f64.const 0x0p+0 (;=0;)
        i32.const 1
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        f64.neg
        drop
      end
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;14;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        i32.const 1
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        i32.ctz
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;15;) (type 3) (result i64)
    block (result i64) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i64) ;; label = @2
        i64.const 2
        i32.const 1
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        i64.ctz
      end
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;16;) (type 4) (result f32)
    block (result f32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result f32) ;; label = @2
        f32.const 0x1.8p+1 (;=3;)
        i32.const 1
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        f32.neg
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;17;) (type 5) (result f64)
    block (result f64) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result f64) ;; label = @2
        f64.const 0x1p+2 (;=4;)
        i32.const 1
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        f64.neg
      end
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;18;) (type 6) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      block ;; label = @2
        local.get 0
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        i32.const 2
        i64.const 4
        i64.const 1
        call $finite_wasm_unstack
        return
      end
      i64.const 1
      call $finite_wasm_gas
      i32.const 3
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;19;) (type 6) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      block ;; label = @2
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        local.get 0
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        i32.const 2
        i64.const 4
        i64.const 1
        call $finite_wasm_unstack
        return
      end
      i64.const 1
      call $finite_wasm_gas
      i32.const 3
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;20;) (type 7) (param i32)
    block ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      block ;; label = @2
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        local.get 0
        br_if 0 (;@2;)
      end
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;21;) (type 6) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 10
        local.get 0
        br_if 0 (;@2;)
        i64.const 3
        call $finite_wasm_gas
        drop
        i32.const 11
        i64.const 8
        i64.const 1
        call $finite_wasm_unstack
        return
      end
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;22;) (type 6) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        call $dummy
        i64.const 3
        call $finite_wasm_gas
        i32.const 20
        local.get 0
        br_if 0 (;@2;)
        i64.const 3
        call $finite_wasm_gas
        drop
        i32.const 21
        i64.const 8
        i64.const 1
        call $finite_wasm_unstack
        return
      end
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;23;) (type 6) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 3
        call $finite_wasm_gas
        i32.const 11
        local.get 0
        br_if 0 (;@2;)
      end
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;24;) (type 6) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block ;; label = @2
        loop ;; label = @3
          local.get 0
          br_if 1 (;@2;)
          i64.const 2
          call $finite_wasm_gas
          i32.const 2
          i64.const 4
          i64.const 1
          call $finite_wasm_unstack
          return
        end
      end
      i64.const 1
      call $finite_wasm_gas
      i32.const 3
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;25;) (type 6) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      block ;; label = @2
        loop ;; label = @3
          call $dummy
          i64.const 2
          call $finite_wasm_gas
          local.get 0
          br_if 1 (;@2;)
          i64.const 2
          call $finite_wasm_gas
          i32.const 2
          i64.const 4
          i64.const 1
          call $finite_wasm_unstack
          return
        end
      end
      i64.const 1
      call $finite_wasm_gas
      i32.const 4
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;26;) (type 7) (param i32)
    block ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      loop ;; label = @2
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        local.get 0
        br_if 1 (;@1;)
      end
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;27;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        i32.const 2
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        br 0 (;@2;)
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;28;) (type 1)
    block ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block ;; label = @2
        i32.const 1
        i32.const 1
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        br_if 0 (;@2;)
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;29;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        i32.const 2
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        i32.const 3
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        drop
        i32.const 4
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;30;) (type 6) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 1
      call $finite_wasm_stack
      i64.const 5
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 2
        i32.const 1
        local.get 0
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        drop
        i32.const 4
      end
    end
    i64.const 12
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;31;) (type 1)
    block ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block ;; label = @2
        i32.const 1
        i32.const 2
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        br_table 0 (;@2;) 0 (;@2;) 0 (;@2;)
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;32;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        i32.const 2
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        i32.const 3
        br_table 0 (;@2;) 0 (;@2;) 0 (;@2;)
        i32.const 4
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;33;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 5
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 2
        i32.const 1
        i32.const 3
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        br_table 0 (;@2;) 0 (;@2;)
        i32.const 4
      end
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;34;) (type 3) (result i64)
    block (result i64) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i64) ;; label = @2
        i64.const 1
        i32.const 2
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        i64.const 12
        i64.const 0
        call $finite_wasm_unstack
        return
      end
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;35;) (type 6) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        local.get 0
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        if (result i32) ;; label = @3
          i64.const 1
          call $finite_wasm_gas
          i32.const 2
        else
          i64.const 1
          call $finite_wasm_gas
          i32.const 3
        end
      end
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;36;) (type 8) (param i32 i32)
    block ;; label = @1
      i64.const 4
      i64.const 2
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      block ;; label = @2
        local.get 0
        if ;; label = @3
          i64.const 2
          call $finite_wasm_gas
          local.get 1
          br_if 1 (;@2;)
        else
          i64.const 1
          call $finite_wasm_gas
          call $dummy
        end
      end
    end
    i64.const 4
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;37;) (type 8) (param i32 i32)
    block ;; label = @1
      i64.const 4
      i64.const 2
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      block ;; label = @2
        local.get 0
        if ;; label = @3
          i64.const 1
          call $finite_wasm_gas
          call $dummy
        else
          i64.const 2
          call $finite_wasm_gas
          local.get 1
          br_if 1 (;@2;)
        end
      end
    end
    i64.const 4
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;38;) (type 6) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 1
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 3
        i32.const 10
        br_if 0 (;@2;)
        i64.const 3
        call $finite_wasm_gas
        i32.const 2
        local.get 0
        select
      end
    end
    i64.const 12
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;39;) (type 6) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 1
      call $finite_wasm_stack
      i64.const 5
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        i32.const 3
        i32.const 10
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        local.get 0
        select
      end
    end
    i64.const 12
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;40;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 16
      i64.const 0
      call $finite_wasm_stack
      i64.const 6
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        i32.const 2
        i32.const 3
        i32.const 10
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        select
      end
    end
    i64.const 16
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $f (;41;) (type $check) (param i32 i32 i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 3
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const -1
    end
    i64.const 4
    i64.const 3
    call $finite_wasm_unstack
  )
  (func (;42;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 12
        i32.const 1
        br_if 0 (;@2;)
        i64.const 3
        call $finite_wasm_gas
        i32.const 2
        i32.const 3
        call $f
      end
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;43;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 5
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        i32.const 13
        i32.const 1
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        i32.const 3
        call $f
      end
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;44;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 16
      i64.const 0
      call $finite_wasm_stack
      i64.const 6
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        i32.const 2
        i32.const 14
        i32.const 1
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        call $f
      end
    end
    i64.const 16
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $func (;45;) (type $check) (param i32 i32 i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 3
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 4
    i64.const 3
    call $finite_wasm_unstack
  )
  (func (;46;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 16
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 4
        i32.const 10
        br_if 0 (;@2;)
        i64.const 4
        call $finite_wasm_gas
        i32.const 1
        i32.const 2
        i32.const 0
        call_indirect (type $check)
      end
    end
    i64.const 16
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;47;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 16
      i64.const 0
      call $finite_wasm_stack
      i64.const 5
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        i32.const 4
        i32.const 10
        br_if 0 (;@2;)
        i64.const 3
        call $finite_wasm_gas
        i32.const 2
        i32.const 0
        call_indirect (type $check)
      end
    end
    i64.const 16
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;48;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 16
      i64.const 0
      call $finite_wasm_stack
      i64.const 6
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        i32.const 2
        i32.const 4
        i32.const 10
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        i32.const 0
        call_indirect (type $check)
      end
    end
    i64.const 16
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;49;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 20
      i64.const 0
      call $finite_wasm_stack
      i64.const 7
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        i32.const 2
        i32.const 3
        i32.const 4
        i32.const 10
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        call_indirect (type $check)
      end
    end
    i64.const 20
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;50;) (type 6) (param i32) (result i32)
    (local i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 2
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 17
        local.get 0
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        local.set 0
        i32.const -1
      end
    end
    i64.const 8
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;51;) (type 6) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        local.get 0
        br_if 0 (;@2;)
        i64.const 3
        call $finite_wasm_gas
        local.tee 0
        i32.const -1
        i64.const 8
        i64.const 1
        call $finite_wasm_unstack
        return
      end
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;52;) (type 6) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        local.get 0
        br_if 0 (;@2;)
        i64.const 3
        call $finite_wasm_gas
        global.set $a
        i32.const -1
        i64.const 8
        i64.const 1
        call $finite_wasm_unstack
        return
      end
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;53;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        i32.const 1
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        i32.load
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;54;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 30
        i32.const 1
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        i32.load8_s
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;55;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 30
        i32.const 1
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        i32.const 7
        i32.store
        i64.const 1
        call $finite_wasm_gas
        i32.const -1
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;56;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 5
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 2
        i32.const 31
        i32.const 1
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        i32.store
        i64.const 1
        call $finite_wasm_gas
        i32.const -1
      end
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;57;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 32
        i32.const 1
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        i32.const 7
        i32.store8
        i64.const 1
        call $finite_wasm_gas
        i32.const -1
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;58;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 5
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 2
        i32.const 33
        i32.const 1
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        i32.store16
        i64.const 1
        call $finite_wasm_gas
        i32.const -1
      end
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;59;) (type 5) (result f64)
    block (result f64) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result f64) ;; label = @2
        f64.const 0x1p+0 (;=1;)
        i32.const 1
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        f64.neg
      end
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;60;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        i32.const 1
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        i32.const 10
        i32.add
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;61;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 5
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 10
        i32.const 1
        i32.const 1
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        i32.sub
      end
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;62;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 0
        i32.const 1
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        i32.eqz
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;63;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        i32.const 1
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        i32.const 10
        i32.le_u
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;64;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 5
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 10
        i32.const 1
        i32.const 42
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        i32.ne
      end
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;65;) (type 2) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        i32.const 1
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        memory.grow
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;66;) (type 6) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 16
      i64.const 1
      call $finite_wasm_stack
      i64.const 9
      call $finite_wasm_gas
      i32.const 1
      block (result i32) ;; label = @2
        i32.const 2
        drop
        i32.const 4
        block (result i32) ;; label = @3
          i32.const 8
          local.get 0
          br_if 1 (;@2;)
          i64.const 3
          call $finite_wasm_gas
          drop
          i32.const 16
        end
        i32.add
      end
      i64.const 1
      call $finite_wasm_gas
      i32.add
    end
    i64.const 16
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;67;) (type 6) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 1
      call $finite_wasm_stack
      i64.const 8
      call $finite_wasm_gas
      i32.const 1
      block (result i32) ;; label = @2
        i32.const 2
        drop
        block (result i32) ;; label = @3
          i32.const 8
          local.get 0
          br_if 1 (;@2;)
          i64.const 3
          call $finite_wasm_gas
          drop
          i32.const 4
        end
        br 0 (;@2;)
        i32.const 16
      end
      i64.const 1
      call $finite_wasm_gas
      i32.add
    end
    i64.const 12
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;68;) (type 6) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 1
      call $finite_wasm_stack
      i64.const 8
      call $finite_wasm_gas
      i32.const 1
      block (result i32) ;; label = @2
        i32.const 2
        drop
        block (result i32) ;; label = @3
          i32.const 8
          local.get 0
          br_if 1 (;@2;)
          i64.const 4
          call $finite_wasm_gas
          drop
          i32.const 4
        end
        i32.const 1
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        drop
        i32.const 16
      end
      i64.const 1
      call $finite_wasm_gas
      i32.add
    end
    i64.const 12
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;69;) (type 6) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 16
      i64.const 1
      call $finite_wasm_stack
      i64.const 9
      call $finite_wasm_gas
      i32.const 1
      block (result i32) ;; label = @2
        i32.const 2
        drop
        i32.const 4
        block (result i32) ;; label = @3
          i32.const 8
          local.get 0
          br_if 1 (;@2;)
          i64.const 3
          call $finite_wasm_gas
          drop
          i32.const 1
        end
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        drop
        i32.const 16
      end
      i64.const 1
      call $finite_wasm_gas
      i32.add
    end
    i64.const 16
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;70;) (type 6) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 1
      call $finite_wasm_stack
      i64.const 8
      call $finite_wasm_gas
      i32.const 1
      block (result i32) ;; label = @2
        i32.const 2
        drop
        block (result i32) ;; label = @3
          i32.const 8
          local.get 0
          br_if 1 (;@2;)
          i64.const 4
          call $finite_wasm_gas
          drop
          i32.const 4
        end
        i32.const 1
        br_table 0 (;@2;)
        i32.const 16
      end
      i64.const 1
      call $finite_wasm_gas
      i32.add
    end
    i64.const 12
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;71;) (type 6) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 16
      i64.const 1
      call $finite_wasm_stack
      i64.const 9
      call $finite_wasm_gas
      i32.const 1
      block (result i32) ;; label = @2
        i32.const 2
        drop
        i32.const 4
        block (result i32) ;; label = @3
          i32.const 8
          local.get 0
          br_if 1 (;@2;)
          i64.const 3
          call $finite_wasm_gas
          drop
          i32.const 1
        end
        br_table 0 (;@2;)
        i32.const 16
      end
      i64.const 1
      call $finite_wasm_gas
      i32.add
    end
    i64.const 16
    i64.const 1
    call $finite_wasm_unstack
  )
)

(assert_return (invoke "type-i32"))
(assert_return (invoke "type-i64"))
(assert_return (invoke "type-f32"))
(assert_return (invoke "type-f64"))

(assert_return (invoke "type-i32-value") (i32.const 1))
(assert_return (invoke "type-i64-value") (i64.const 2))
(assert_return (invoke "type-f32-value") (f32.const 3))
(assert_return (invoke "type-f64-value") (f64.const 4))

(assert_return (invoke "as-block-first" (i32.const 0)) (i32.const 2))
(assert_return (invoke "as-block-first" (i32.const 1)) (i32.const 3))
(assert_return (invoke "as-block-mid" (i32.const 0)) (i32.const 2))
(assert_return (invoke "as-block-mid" (i32.const 1)) (i32.const 3))
(assert_return (invoke "as-block-last" (i32.const 0)))
(assert_return (invoke "as-block-last" (i32.const 1)))

(assert_return (invoke "as-block-first-value" (i32.const 0)) (i32.const 11))
(assert_return (invoke "as-block-first-value" (i32.const 1)) (i32.const 10))
(assert_return (invoke "as-block-mid-value" (i32.const 0)) (i32.const 21))
(assert_return (invoke "as-block-mid-value" (i32.const 1)) (i32.const 20))
(assert_return (invoke "as-block-last-value" (i32.const 0)) (i32.const 11))
(assert_return (invoke "as-block-last-value" (i32.const 1)) (i32.const 11))

(assert_return (invoke "as-loop-first" (i32.const 0)) (i32.const 2))
(assert_return (invoke "as-loop-first" (i32.const 1)) (i32.const 3))
(assert_return (invoke "as-loop-mid" (i32.const 0)) (i32.const 2))
(assert_return (invoke "as-loop-mid" (i32.const 1)) (i32.const 4))
(assert_return (invoke "as-loop-last" (i32.const 0)))
(assert_return (invoke "as-loop-last" (i32.const 1)))

(assert_return (invoke "as-br-value") (i32.const 1))

(assert_return (invoke "as-br_if-cond"))
(assert_return (invoke "as-br_if-value") (i32.const 1))
(assert_return (invoke "as-br_if-value-cond" (i32.const 0)) (i32.const 2))
(assert_return (invoke "as-br_if-value-cond" (i32.const 1)) (i32.const 1))

(assert_return (invoke "as-br_table-index"))
(assert_return (invoke "as-br_table-value") (i32.const 1))
(assert_return (invoke "as-br_table-value-index") (i32.const 1))

(assert_return (invoke "as-return-value") (i64.const 1))

(assert_return (invoke "as-if-cond" (i32.const 0)) (i32.const 2))
(assert_return (invoke "as-if-cond" (i32.const 1)) (i32.const 1))
(assert_return (invoke "as-if-then" (i32.const 0) (i32.const 0)))
(assert_return (invoke "as-if-then" (i32.const 4) (i32.const 0)))
(assert_return (invoke "as-if-then" (i32.const 0) (i32.const 1)))
(assert_return (invoke "as-if-then" (i32.const 4) (i32.const 1)))
(assert_return (invoke "as-if-else" (i32.const 0) (i32.const 0)))
(assert_return (invoke "as-if-else" (i32.const 3) (i32.const 0)))
(assert_return (invoke "as-if-else" (i32.const 0) (i32.const 1)))
(assert_return (invoke "as-if-else" (i32.const 3) (i32.const 1)))

(assert_return (invoke "as-select-first" (i32.const 0)) (i32.const 3))
(assert_return (invoke "as-select-first" (i32.const 1)) (i32.const 3))
(assert_return (invoke "as-select-second" (i32.const 0)) (i32.const 3))
(assert_return (invoke "as-select-second" (i32.const 1)) (i32.const 3))
(assert_return (invoke "as-select-cond") (i32.const 3))

(assert_return (invoke "as-call-first") (i32.const 12))
(assert_return (invoke "as-call-mid") (i32.const 13))
(assert_return (invoke "as-call-last") (i32.const 14))

(assert_return (invoke "as-call_indirect-func") (i32.const 4))
(assert_return (invoke "as-call_indirect-first") (i32.const 4))
(assert_return (invoke "as-call_indirect-mid") (i32.const 4))
(assert_return (invoke "as-call_indirect-last") (i32.const 4))

(assert_return (invoke "as-local.set-value" (i32.const 0)) (i32.const -1))
(assert_return (invoke "as-local.set-value" (i32.const 1)) (i32.const 17))

(assert_return (invoke "as-local.tee-value" (i32.const 0)) (i32.const -1))
(assert_return (invoke "as-local.tee-value" (i32.const 1)) (i32.const 1))

(assert_return (invoke "as-global.set-value" (i32.const 0)) (i32.const -1))
(assert_return (invoke "as-global.set-value" (i32.const 1)) (i32.const 1))

(assert_return (invoke "as-load-address") (i32.const 1))
(assert_return (invoke "as-loadN-address") (i32.const 30))

(assert_return (invoke "as-store-address") (i32.const 30))
(assert_return (invoke "as-store-value") (i32.const 31))
(assert_return (invoke "as-storeN-address") (i32.const 32))
(assert_return (invoke "as-storeN-value") (i32.const 33))

(assert_return (invoke "as-unary-operand") (f64.const 1.0))
(assert_return (invoke "as-binary-left") (i32.const 1))
(assert_return (invoke "as-binary-right") (i32.const 1))
(assert_return (invoke "as-test-operand") (i32.const 0))
(assert_return (invoke "as-compare-left") (i32.const 1))
(assert_return (invoke "as-compare-right") (i32.const 1))
(assert_return (invoke "as-memory.grow-size") (i32.const 1))

(assert_return (invoke "nested-block-value" (i32.const 0)) (i32.const 21))
(assert_return (invoke "nested-block-value" (i32.const 1)) (i32.const 9))
(assert_return (invoke "nested-br-value" (i32.const 0)) (i32.const 5))
(assert_return (invoke "nested-br-value" (i32.const 1)) (i32.const 9))
(assert_return (invoke "nested-br_if-value" (i32.const 0)) (i32.const 5))
(assert_return (invoke "nested-br_if-value" (i32.const 1)) (i32.const 9))
(assert_return (invoke "nested-br_if-value-cond" (i32.const 0)) (i32.const 5))
(assert_return (invoke "nested-br_if-value-cond" (i32.const 1)) (i32.const 9))
(assert_return (invoke "nested-br_table-value" (i32.const 0)) (i32.const 5))
(assert_return (invoke "nested-br_table-value" (i32.const 1)) (i32.const 9))
(assert_return (invoke "nested-br_table-value-index" (i32.const 0)) (i32.const 5))
(assert_return (invoke "nested-br_table-value-index" (i32.const 1)) (i32.const 9))

