(module
  (type (;0;) (func (param f32 f32) (result f32)))
  (type (;1;) (func (param f32) (result f32)))
  (type (;2;) (func (param f64 f64) (result f64)))
  (type (;3;) (func (param f64) (result f64)))
  (type (;4;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 4)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 4)))
  (func (;2;) (type 0) (param $x f32) (param $y f32) (result f32)
    i64.const 1000001000008
    call 1
    i64.const 4
    call 0
    local.get $x
    local.get $y
    f32.add
  )
  (func (;3;) (type 0) (param $x f32) (param $y f32) (result f32)
    i64.const 1000001000008
    call 1
    i64.const 4
    call 0
    local.get $x
    local.get $y
    f32.sub
  )
  (func (;4;) (type 0) (param $x f32) (param $y f32) (result f32)
    i64.const 1000001000008
    call 1
    i64.const 4
    call 0
    local.get $x
    local.get $y
    f32.mul
  )
  (func (;5;) (type 0) (param $x f32) (param $y f32) (result f32)
    i64.const 1000001000008
    call 1
    i64.const 4
    call 0
    local.get $x
    local.get $y
    f32.div
  )
  (func (;6;) (type 1) (param $x f32) (result f32)
    i64.const 1000000000004
    call 1
    i64.const 3
    call 0
    local.get $x
    f32.sqrt
  )
  (func (;7;) (type 1) (param $x f32) (result f32)
    i64.const 1000000000004
    call 1
    i64.const 3
    call 0
    local.get $x
    f32.abs
  )
  (func (;8;) (type 1) (param $x f32) (result f32)
    i64.const 1000000000004
    call 1
    i64.const 3
    call 0
    local.get $x
    f32.neg
  )
  (func (;9;) (type 0) (param $x f32) (param $y f32) (result f32)
    i64.const 1000001000008
    call 1
    i64.const 4
    call 0
    local.get $x
    local.get $y
    f32.copysign
  )
  (func (;10;) (type 1) (param $x f32) (result f32)
    i64.const 1000000000004
    call 1
    i64.const 3
    call 0
    local.get $x
    f32.ceil
  )
  (func (;11;) (type 1) (param $x f32) (result f32)
    i64.const 1000000000004
    call 1
    i64.const 3
    call 0
    local.get $x
    f32.floor
  )
  (func (;12;) (type 1) (param $x f32) (result f32)
    i64.const 1000000000004
    call 1
    i64.const 3
    call 0
    local.get $x
    f32.trunc
  )
  (func (;13;) (type 1) (param $x f32) (result f32)
    i64.const 1000000000004
    call 1
    i64.const 3
    call 0
    local.get $x
    f32.nearest
  )
  (func (;14;) (type 0) (param $x f32) (param $y f32) (result f32)
    i64.const 1000001000008
    call 1
    i64.const 4
    call 0
    local.get $x
    local.get $y
    f32.min
  )
  (func (;15;) (type 0) (param $x f32) (param $y f32) (result f32)
    i64.const 1000001000008
    call 1
    i64.const 4
    call 0
    local.get $x
    local.get $y
    f32.max
  )
  (func (;16;) (type 2) (param $x f64) (param $y f64) (result f64)
    i64.const 1000001000016
    call 1
    i64.const 4
    call 0
    local.get $x
    local.get $y
    f64.add
  )
  (func (;17;) (type 2) (param $x f64) (param $y f64) (result f64)
    i64.const 1000001000016
    call 1
    i64.const 4
    call 0
    local.get $x
    local.get $y
    f64.sub
  )
  (func (;18;) (type 2) (param $x f64) (param $y f64) (result f64)
    i64.const 1000001000016
    call 1
    i64.const 4
    call 0
    local.get $x
    local.get $y
    f64.mul
  )
  (func (;19;) (type 2) (param $x f64) (param $y f64) (result f64)
    i64.const 1000001000016
    call 1
    i64.const 4
    call 0
    local.get $x
    local.get $y
    f64.div
  )
  (func (;20;) (type 3) (param $x f64) (result f64)
    i64.const 1000000000008
    call 1
    i64.const 3
    call 0
    local.get $x
    f64.sqrt
  )
  (func (;21;) (type 3) (param $x f64) (result f64)
    i64.const 1000000000008
    call 1
    i64.const 3
    call 0
    local.get $x
    f64.abs
  )
  (func (;22;) (type 3) (param $x f64) (result f64)
    i64.const 1000000000008
    call 1
    i64.const 3
    call 0
    local.get $x
    f64.neg
  )
  (func (;23;) (type 2) (param $x f64) (param $y f64) (result f64)
    i64.const 1000001000016
    call 1
    i64.const 4
    call 0
    local.get $x
    local.get $y
    f64.copysign
  )
  (func (;24;) (type 3) (param $x f64) (result f64)
    i64.const 1000000000008
    call 1
    i64.const 3
    call 0
    local.get $x
    f64.ceil
  )
  (func (;25;) (type 3) (param $x f64) (result f64)
    i64.const 1000000000008
    call 1
    i64.const 3
    call 0
    local.get $x
    f64.floor
  )
  (func (;26;) (type 3) (param $x f64) (result f64)
    i64.const 1000000000008
    call 1
    i64.const 3
    call 0
    local.get $x
    f64.trunc
  )
  (func (;27;) (type 3) (param $x f64) (result f64)
    i64.const 1000000000008
    call 1
    i64.const 3
    call 0
    local.get $x
    f64.nearest
  )
  (func (;28;) (type 2) (param $x f64) (param $y f64) (result f64)
    i64.const 1000001000016
    call 1
    i64.const 4
    call 0
    local.get $x
    local.get $y
    f64.min
  )
  (func (;29;) (type 2) (param $x f64) (param $y f64) (result f64)
    i64.const 1000001000016
    call 1
    i64.const 4
    call 0
    local.get $x
    local.get $y
    f64.max
  )
  (export "f32.add" (func 2))
  (export "f32.sub" (func 3))
  (export "f32.mul" (func 4))
  (export "f32.div" (func 5))
  (export "f32.sqrt" (func 6))
  (export "f32.abs" (func 7))
  (export "f32.neg" (func 8))
  (export "f32.copysign" (func 9))
  (export "f32.ceil" (func 10))
  (export "f32.floor" (func 11))
  (export "f32.trunc" (func 12))
  (export "f32.nearest" (func 13))
  (export "f32.min" (func 14))
  (export "f32.max" (func 15))
  (export "f64.add" (func 16))
  (export "f64.sub" (func 17))
  (export "f64.mul" (func 18))
  (export "f64.div" (func 19))
  (export "f64.sqrt" (func 20))
  (export "f64.abs" (func 21))
  (export "f64.neg" (func 22))
  (export "f64.copysign" (func 23))
  (export "f64.ceil" (func 24))
  (export "f64.floor" (func 25))
  (export "f64.trunc" (func 26))
  (export "f64.nearest" (func 27))
  (export "f64.min" (func 28))
  (export "f64.max" (func 29))
)