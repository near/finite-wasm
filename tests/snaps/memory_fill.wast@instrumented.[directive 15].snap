(module
  (type (;0;) (func (param i32 i32 i32) (result i32)))
  (type (;1;) (func))
  (type (;2;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 2)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (func (;2;) (type 0) (param $from i32) (param $to i32) (param $expected i32) (result i32)
    i64.const 1000002000008
    call 1
    loop $cont ;; label = @1
      i64.const 1
      call 0
      local.get $from
      i64.const 3
      call 0
      local.get $to
      i32.eq
      if ;; label = @2
        i64.const 1
        call 0
        i32.const -1
        i64.const 1
        call 0
        return
        i64.const 1
        call 0
      end
      i64.const 1
      call 0
      local.get $from
      i64.const 1
      call 0
      i32.load8_u
      i64.const 1
      call 0
      local.get $expected
      i64.const 2
      call 0
      i32.eq
      if ;; label = @2
        i64.const 1
        call 0
        local.get $from
        i64.const 4
        call 0
        i32.const 1
        i32.add
        local.set $from
        br 1 (;@1;)
        i64.const 1
        call 0
      end
      i64.const 1
      call 0
    end
    i64.const 2
    call 0
    local.get $from
    return
    i64.const 1
    call 0
    end
    i64.const 1
    call 0
  )
  (func (;3;) (type 1)
    i64.const 1000000000012
    call 1
    i32.const 1
    i64.const 3
    call 0
    i32.const 170
    i32.const 65534
    memory.fill
    i64.const 1
    call 0
    end
    i64.const 1
    call 0
  )
  (memory (;0;) 1 1)
  (export "checkRange" (func 2))
  (export "test" (func 3))
)