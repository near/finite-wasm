(module
  (type (;0;) (func (param i32) (result i32)))
  (type (;1;) (func))
  (type (;2;) (func (result i32)))
  (type (;3;) (func (result i64)))
  (type (;4;) (func (param i64)))
  (type (;5;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 4)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 5)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 5)))
  (export "select-trap-left" (func 3))
  (export "select-trap-right" (func 4))
  (export "select-unreached" (func 5))
  (export "select_unreached_result_1" (func 6))
  (export "select_unreached_result_2" (func 7))
  (export "unreachable-num" (func 8))
  (export "unreachable-ref" (func 9))
  (func (;3;) (type 0) (param $cond i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 0
      i64.const 1
      call 1
      i64.const 1
      call 0
      unreachable
      i32.const 0
      local.get $cond
      select
    end
    i64.const 0
    i64.const 1
    call 2
  )
  (func (;4;) (type 0) (param $cond i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 1
      i64.const 2
      call 0
      i32.const 0
      unreachable
      local.get $cond
      select
    end
    i64.const 4
    i64.const 1
    call 2
  )
  (func (;5;) (type 1)
    i64.const 1
    call 0
    unreachable
    select
    unreachable
    i32.const 0
    select
    unreachable
    i32.const 0
    i32.const 0
    select
    unreachable
    i32.const 0
    i32.const 0
    i32.const 0
    select
    unreachable
    f32.const 0x0p+0 (;=0;)
    i32.const 0
    select
    unreachable
  )
  (func (;6;) (type 2) (result i32)
    i64.const 1
    call 0
    unreachable
    select
    i32.add
  )
  (func (;7;) (type 3) (result i64)
    i64.const 1
    call 0
    unreachable
    i64.const 0
    i32.const 0
    select
    i64.add
  )
  (func (;8;) (type 1)
    i64.const 1
    call 0
    unreachable
    select
    i32.eqz
    drop
  )
  (func (;9;) (type 1)
    i64.const 1
    call 0
    unreachable
    select
    ref.is_null
    drop
  )
)

(assert_trap (invoke "select-trap-left" (i32.const 1)) "unreachable")
(assert_trap (invoke "select-trap-left" (i32.const 0)) "unreachable")
(assert_trap (invoke "select-trap-right" (i32.const 1)) "unreachable")
(assert_trap (invoke "select-trap-right" (i32.const 0)) "unreachable")

;; Validation after unreachable

(module
  (type (;0;) (func))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 2)))
  (export "meet-bottom" (func 3))
  (func (;3;) (type 0)
    block ;; label = @1
      i64.const 8
      i64.const 0
      call 1
      i64.const 3
      call 0
      block (result f64) ;; label = @2
        block (result f32) ;; label = @3
          unreachable
          i32.const 1
          br_table 0 (;@3;) 1 (;@2;) 1 (;@2;)
        end
        i64.const 2
        call 0
        drop
        f64.const 0x0p+0 (;=0;)
      end
      i64.const 1
      call 0
      drop
    end
    i64.const 8
    i64.const 0
    call 2
  )
)

(assert_trap (invoke "meet-bottom") "unreachable")
