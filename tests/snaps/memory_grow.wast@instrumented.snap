(module
  (type (;0;) (func (result i32)))
  (type (;1;) (func))
  (type (;2;) (func (param i32) (result i32)))
  (type (;3;) (func (param i64)))
  (type (;4;) (func (param i64 i64)))
  (type (;5;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 3)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 5)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 5)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 5)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 5)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 5)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 5)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 4)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 4)))
  (memory (;0;) 0)
  (export "load_at_zero" (func 9))
  (export "store_at_zero" (func 10))
  (export "load_at_page_size" (func 11))
  (export "store_at_page_size" (func 12))
  (export "grow" (func 13))
  (export "size" (func 14))
  (func (;9;) (type 0) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call 7
      i64.const 2
      call 0
      i32.const 0
      i32.load
    end
    i64.const 4
    i64.const 0
    call 8
  )
  (func (;10;) (type 1)
    block ;; label = @1
      i64.const 8
      i64.const 0
      call 7
      i64.const 3
      call 0
      i32.const 0
      i32.const 2
      i32.store
    end
    i64.const 8
    i64.const 0
    call 8
  )
  (func (;11;) (type 0) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call 7
      i64.const 2
      call 0
      i32.const 65536
      i32.load
    end
    i64.const 4
    i64.const 0
    call 8
  )
  (func (;12;) (type 1)
    block ;; label = @1
      i64.const 8
      i64.const 0
      call 7
      i64.const 3
      call 0
      i32.const 65536
      i32.const 3
      i32.store
    end
    i64.const 8
    i64.const 0
    call 8
  )
  (func (;13;) (type 2) (param $sz i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 1
      call 0
      local.get $sz
      i64.const 1
      call 0
      memory.grow
    end
    i64.const 4
    i64.const 1
    call 8
  )
  (func (;14;) (type 0) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call 7
      i64.const 1
      call 0
      memory.size
    end
    i64.const 4
    i64.const 0
    call 8
  )
)

(assert_return (invoke "size") (i32.const 0))
(assert_trap (invoke "store_at_zero") "out of bounds memory access")
(assert_trap (invoke "load_at_zero") "out of bounds memory access")
(assert_trap (invoke "store_at_page_size") "out of bounds memory access")
(assert_trap (invoke "load_at_page_size") "out of bounds memory access")
(assert_return (invoke "grow" (i32.const 1)) (i32.const 0))
(assert_return (invoke "size") (i32.const 1))
(assert_return (invoke "load_at_zero") (i32.const 0))
(assert_return (invoke "store_at_zero"))
(assert_return (invoke "load_at_zero") (i32.const 2))
(assert_trap (invoke "store_at_page_size") "out of bounds memory access")
(assert_trap (invoke "load_at_page_size") "out of bounds memory access")
(assert_return (invoke "grow" (i32.const 4)) (i32.const 1))
(assert_return (invoke "size") (i32.const 5))
(assert_return (invoke "load_at_zero") (i32.const 2))
(assert_return (invoke "store_at_zero"))
(assert_return (invoke "load_at_zero") (i32.const 2))
(assert_return (invoke "load_at_page_size") (i32.const 0))
(assert_return (invoke "store_at_page_size"))
(assert_return (invoke "load_at_page_size") (i32.const 3))


(module
  (type (;0;) (func (param i32) (result i32)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (type (;3;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 3)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 3)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 3)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 3)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 3)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 2)))
  (memory (;0;) 0)
  (export "grow" (func 9))
  (func (;9;) (type 0) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 1
      call 0
      local.get 0
      i64.const 1
      call 0
      memory.grow
    end
    i64.const 4
    i64.const 1
    call 8
  )
)

(assert_return (invoke "grow" (i32.const 0)) (i32.const 0))
(assert_return (invoke "grow" (i32.const 1)) (i32.const 0))
(assert_return (invoke "grow" (i32.const 0)) (i32.const 1))
(assert_return (invoke "grow" (i32.const 2)) (i32.const 1))
(assert_return (invoke "grow" (i32.const 800)) (i32.const 3))
(assert_return (invoke "grow" (i32.const 0x10000)) (i32.const -1))
(assert_return (invoke "grow" (i32.const 64736)) (i32.const -1))
(assert_return (invoke "grow" (i32.const 1)) (i32.const 803))

(module
  (type (;0;) (func (param i32) (result i32)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (type (;3;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 3)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 3)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 3)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 3)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 3)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 2)))
  (memory (;0;) 0 10)
  (export "grow" (func 9))
  (func (;9;) (type 0) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 1
      call 0
      local.get 0
      i64.const 1
      call 0
      memory.grow
    end
    i64.const 4
    i64.const 1
    call 8
  )
)

(assert_return (invoke "grow" (i32.const 0)) (i32.const 0))
(assert_return (invoke "grow" (i32.const 1)) (i32.const 0))
(assert_return (invoke "grow" (i32.const 1)) (i32.const 1))
(assert_return (invoke "grow" (i32.const 2)) (i32.const 2))
(assert_return (invoke "grow" (i32.const 6)) (i32.const 4))
(assert_return (invoke "grow" (i32.const 0)) (i32.const 10))
(assert_return (invoke "grow" (i32.const 1)) (i32.const -1))
(assert_return (invoke "grow" (i32.const 0x10000)) (i32.const -1))

;; Test that newly allocated memory (program start and memory.grow) is zeroed

(module
  (type (;0;) (func (param i32) (result i32)))
  (type (;1;) (func (param i32 i32) (result i32)))
  (type (;2;) (func (param i64)))
  (type (;3;) (func (param i64 i64)))
  (type (;4;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 2)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 4)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 4)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 4)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 4)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 4)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 4)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 3)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 3)))
  (memory (;0;) 1)
  (export "grow" (func 9))
  (export "check-memory-zero" (func 10))
  (func (;9;) (type 0) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 1
      call 0
      local.get 0
      i64.const 1
      call 0
      memory.grow
    end
    i64.const 4
    i64.const 1
    call 8
  )
  (func (;10;) (type 1) (param i32 i32) (result i32)
    (local i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 3
      call 7
      i64.const 3
      call 0
      i32.const 1
      local.set 2
      block ;; label = @2
        loop ;; label = @3
          i64.const 3
          call 0
          local.get 0
          i32.load8_u
          i64.const 5
          call 0
          local.set 2
          local.get 2
          i32.const 0
          i32.ne
          br_if 1 (;@2;)
          i64.const 4
          call 0
          local.get 0
          local.get 1
          i32.ge_u
          br_if 1 (;@2;)
          i64.const 8
          call 0
          local.get 0
          i32.const 1
          i32.add
          local.set 0
          local.get 0
          local.get 1
          i32.le_u
          br_if 0 (;@3;)
        end
      end
      i64.const 1
      call 0
      local.get 2
    end
    i64.const 8
    i64.const 3
    call 8
  )
)

(assert_return (invoke "check-memory-zero" (i32.const 0) (i32.const 0xffff)) (i32.const 0))
(assert_return (invoke "grow" (i32.const 1)) (i32.const 1))
(assert_return (invoke "check-memory-zero" (i32.const 0x10000) (i32.const 0x1_ffff)) (i32.const 0))
(assert_return (invoke "grow" (i32.const 1)) (i32.const 2))
(assert_return (invoke "check-memory-zero" (i32.const 0x20000) (i32.const 0x2_ffff)) (i32.const 0))
(assert_return (invoke "grow" (i32.const 1)) (i32.const 3))
(assert_return (invoke "check-memory-zero" (i32.const 0x30000) (i32.const 0x3_ffff)) (i32.const 0))
(assert_return (invoke "grow" (i32.const 1)) (i32.const 4))
(assert_return (invoke "check-memory-zero" (i32.const 0x40000) (i32.const 0x4_ffff)) (i32.const 0))
(assert_return (invoke "grow" (i32.const 1)) (i32.const 5))
(assert_return (invoke "check-memory-zero" (i32.const 0x50000) (i32.const 0x5_ffff)) (i32.const 0))

;; As the argument of control constructs and instructions

(module
  (type $sig (;0;) (func (param i32 i32 i32) (result i32)))
  (type (;1;) (func (result i32)))
  (type (;2;) (func))
  (type (;3;) (func (param i32 i32) (result i32)))
  (type (;4;) (func (param i64)))
  (type (;5;) (func (param i64 i64)))
  (type (;6;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 4)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 6)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 6)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 6)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 6)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 6)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 6)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;7;) (type 5)))
  (import "spectest" "finite_wasm_unstack" (func $finite_wasm_unstack (;8;) (type 5)))
  (table (;0;) 1 1 funcref)
  (memory (;0;) 1)
  (global $g (;0;) (mut i32) i32.const 0)
  (export "as-br-value" (func 9))
  (export "as-br_if-cond" (func 10))
  (export "as-br_if-value" (func 11))
  (export "as-br_if-value-cond" (func 12))
  (export "as-br_table-index" (func 13))
  (export "as-br_table-value" (func 14))
  (export "as-br_table-value-index" (func 15))
  (export "as-return-value" (func 16))
  (export "as-if-cond" (func 17))
  (export "as-if-then" (func 18))
  (export "as-if-else" (func 19))
  (export "as-select-first" (func 20))
  (export "as-select-second" (func 21))
  (export "as-select-cond" (func 22))
  (export "as-call-first" (func 24))
  (export "as-call-mid" (func 25))
  (export "as-call-last" (func 26))
  (export "as-call_indirect-first" (func 27))
  (export "as-call_indirect-mid" (func 28))
  (export "as-call_indirect-last" (func 29))
  (export "as-call_indirect-index" (func 30))
  (export "as-local.set-value" (func 31))
  (export "as-local.tee-value" (func 32))
  (export "as-global.set-value" (func 33))
  (export "as-load-address" (func 34))
  (export "as-loadN-address" (func 35))
  (export "as-store-address" (func 36))
  (export "as-store-value" (func 37))
  (export "as-storeN-address" (func 38))
  (export "as-storeN-value" (func 39))
  (export "as-unary-operand" (func 40))
  (export "as-binary-left" (func 41))
  (export "as-binary-right" (func 42))
  (export "as-test-operand" (func 43))
  (export "as-compare-left" (func 44))
  (export "as-compare-right" (func 45))
  (export "as-memory.grow-size" (func 46))
  (elem (;0;) (table 0) (i32.const 0) func $f)
  (func (;9;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 0
        i64.const 1
        call $finite_wasm_gas
        memory.grow
        i64.const 1
        call $finite_wasm_gas
        br 0 (;@2;)
      end
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;10;) (type 2)
    block ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      block ;; label = @2
        i32.const 0
        i64.const 1
        call $finite_wasm_gas
        memory.grow
        i64.const 1
        call $finite_wasm_gas
        br_if 0 (;@2;)
      end
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;11;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 0
        i64.const 1
        call $finite_wasm_gas
        memory.grow
        i64.const 2
        call $finite_wasm_gas
        i32.const 1
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        drop
        i32.const 7
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;12;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 6
        i32.const 0
        i64.const 1
        call $finite_wasm_gas
        memory.grow
        i64.const 1
        call $finite_wasm_gas
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        drop
        i32.const 7
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;13;) (type 2)
    block ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      block ;; label = @2
        i32.const 0
        i64.const 1
        call $finite_wasm_gas
        memory.grow
        i64.const 1
        call $finite_wasm_gas
        br_table 0 (;@2;) 0 (;@2;) 0 (;@2;)
      end
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;14;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 0
        i64.const 1
        call $finite_wasm_gas
        memory.grow
        i64.const 2
        call $finite_wasm_gas
        i32.const 1
        br_table 0 (;@2;) 0 (;@2;) 0 (;@2;)
        i32.const 7
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;15;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 6
        i32.const 0
        i64.const 1
        call $finite_wasm_gas
        memory.grow
        i64.const 1
        call $finite_wasm_gas
        br_table 0 (;@2;) 0 (;@2;)
        i32.const 7
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;16;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 1
      call $finite_wasm_gas
      i64.const 4
      i64.const 0
      call $finite_wasm_unstack
      return
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;17;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 1
      call $finite_wasm_gas
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i32.const 0
      else
        i64.const 1
        call $finite_wasm_gas
        i32.const 1
      end
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;18;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i32.const 1
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i32.const 0
        i64.const 1
        call $finite_wasm_gas
        memory.grow
      else
        i64.const 1
        call $finite_wasm_gas
        i32.const 0
      end
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;19;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i32.const 0
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i32.const 0
      else
        i64.const 1
        call $finite_wasm_gas
        i32.const 0
        i64.const 1
        call $finite_wasm_gas
        memory.grow
      end
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;20;) (type 3) (param i32 i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 3
      call $finite_wasm_gas
      local.get 0
      local.get 1
      select
    end
    i64.const 12
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;21;) (type 3) (param i32 i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 2
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 2
      call $finite_wasm_gas
      local.get 1
      select
    end
    i64.const 12
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;22;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      i32.const 0
      i32.const 1
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 1
      call $finite_wasm_gas
      select
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $f (;23;) (type $sig) (param i32 i32 i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 3
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const -1
    end
    i64.const 4
    i64.const 3
    call $finite_wasm_unstack
  )
  (func (;24;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 3
      call $finite_wasm_gas
      i32.const 2
      i32.const 3
      call $f
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;25;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i32.const 1
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 2
      call $finite_wasm_gas
      i32.const 3
      call $f
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;26;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      i32.const 1
      i32.const 2
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 1
      call $finite_wasm_gas
      call $f
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;27;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 16
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 4
      call $finite_wasm_gas
      i32.const 2
      i32.const 3
      i32.const 0
      call_indirect (type $sig)
    end
    i64.const 16
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;28;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 16
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i32.const 1
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 3
      call $finite_wasm_gas
      i32.const 3
      i32.const 0
      call_indirect (type $sig)
    end
    i64.const 16
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;29;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 16
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      i32.const 1
      i32.const 2
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 2
      call $finite_wasm_gas
      i32.const 0
      call_indirect (type $sig)
    end
    i64.const 16
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;30;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 16
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      i32.const 1
      i32.const 2
      i32.const 3
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 1
      call $finite_wasm_gas
      call_indirect (type $sig)
    end
    i64.const 16
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;31;) (type 2)
    (local i32)
    block ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 1
      call $finite_wasm_gas
      local.set 0
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;32;) (type 1) (result i32)
    (local i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 1
      call $finite_wasm_gas
      local.tee 0
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;33;) (type 2)
    (local i32)
    block ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 1
      call $finite_wasm_gas
      global.set $g
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;34;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 1
      call $finite_wasm_gas
      i32.load
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;35;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 1
      call $finite_wasm_gas
      i32.load8_s
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;36;) (type 2)
    block ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 2
      call $finite_wasm_gas
      i32.const 7
      i32.store
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;37;) (type 2)
    block ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i32.const 2
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 1
      call $finite_wasm_gas
      i32.store
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;38;) (type 2)
    block ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 2
      call $finite_wasm_gas
      i32.const 7
      i32.store8
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;39;) (type 2)
    block ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i32.const 2
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 1
      call $finite_wasm_gas
      i32.store16
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;40;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 1
      call $finite_wasm_gas
      i32.clz
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;41;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 2
      call $finite_wasm_gas
      i32.const 10
      i32.add
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;42;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i32.const 10
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 1
      call $finite_wasm_gas
      i32.sub
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;43;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 1
      call $finite_wasm_gas
      i32.eqz
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;44;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 2
      call $finite_wasm_gas
      i32.const 10
      i32.le_s
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;45;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i32.const 10
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 1
      call $finite_wasm_gas
      i32.ne
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;46;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
      i64.const 1
      call $finite_wasm_gas
      memory.grow
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
)

(assert_return (invoke "as-br-value") (i32.const 1))

(assert_return (invoke "as-br_if-cond"))
(assert_return (invoke "as-br_if-value") (i32.const 1))
(assert_return (invoke "as-br_if-value-cond") (i32.const 6))

(assert_return (invoke "as-br_table-index"))
(assert_return (invoke "as-br_table-value") (i32.const 1))
(assert_return (invoke "as-br_table-value-index") (i32.const 6))

(assert_return (invoke "as-return-value") (i32.const 1))

(assert_return (invoke "as-if-cond") (i32.const 0))
(assert_return (invoke "as-if-then") (i32.const 1))
(assert_return (invoke "as-if-else") (i32.const 1))

(assert_return (invoke "as-select-first" (i32.const 0) (i32.const 1)) (i32.const 1))
(assert_return (invoke "as-select-second" (i32.const 0) (i32.const 0)) (i32.const 1))
(assert_return (invoke "as-select-cond") (i32.const 0))

(assert_return (invoke "as-call-first") (i32.const -1))
(assert_return (invoke "as-call-mid") (i32.const -1))
(assert_return (invoke "as-call-last") (i32.const -1))

(assert_return (invoke "as-call_indirect-first") (i32.const -1))
(assert_return (invoke "as-call_indirect-mid") (i32.const -1))
(assert_return (invoke "as-call_indirect-last") (i32.const -1))
(assert_trap (invoke "as-call_indirect-index") "undefined element")

(assert_return (invoke "as-local.set-value"))
(assert_return (invoke "as-local.tee-value") (i32.const 1))
(assert_return (invoke "as-global.set-value"))

(assert_return (invoke "as-load-address") (i32.const 0))
(assert_return (invoke "as-loadN-address") (i32.const 0))
(assert_return (invoke "as-store-address"))
(assert_return (invoke "as-store-value"))
(assert_return (invoke "as-storeN-address"))
(assert_return (invoke "as-storeN-value"))

(assert_return (invoke "as-unary-operand") (i32.const 31))

(assert_return (invoke "as-binary-left") (i32.const 11))
(assert_return (invoke "as-binary-right") (i32.const 9))

(assert_return (invoke "as-test-operand") (i32.const 0))

(assert_return (invoke "as-compare-left") (i32.const 1))
(assert_return (invoke "as-compare-right") (i32.const 1))

(assert_return (invoke "as-memory.grow-size") (i32.const 1))


