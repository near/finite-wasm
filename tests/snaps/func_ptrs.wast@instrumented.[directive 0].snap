(module
  (type (;0;) (func))
  (type $S (;1;) (func))
  (type (;2;) (func))
  (type (;3;) (func (result i32)))
  (type (;4;) (func (result i32)))
  (type $T (;5;) (func (param i32) (result i32)))
  (type $U (;6;) (func (param i32)))
  (type (;7;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 7)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;1;) (type 7)))
  (import "spectest" "print_i32" (func $print (;2;) (type $U)))
  (func (;3;) (type 0)
    i64.const 0
    call $print
    end
    i64.const 1
    call $finite_wasm_stack
  )
  (func (;4;) (type $S)
    i64.const 1000000000000
    call $print
    end
    i64.const 1
    call $finite_wasm_stack
  )
  (func (;5;) (type 4) (result i32)
    i64.const 1000000000000
    call $print
    i32.const 13
    i64.const 2
    call $finite_wasm_stack
  )
  (func (;6;) (type $T) (param i32) (result i32)
    i64.const 1000000000004
    call $print
    local.get 0
    i64.const 4
    call $finite_wasm_stack
    i32.const 1
    i32.add
  )
  (func (;7;) (type $T) (param $a i32) (result i32)
    i64.const 1000000000008
    call $print
    local.get $a
    i64.const 4
    call $finite_wasm_stack
    i32.const 2
    i32.sub
  )
  (func (;8;) (type $U) (param i32)
    i64.const 1000000000008
    call $print
    local.get 0
    i64.const 1
    call $finite_wasm_stack
    call $print
    i64.const 1
    call $finite_wasm_stack
    end
    i64.const 1
    call $finite_wasm_stack
  )
  (export "one" (func 5))
  (export "two" (func 6))
  (export "three" (func 7))
  (export "four" (func 8))
)