(module
  (type (;0;) (func (param i64) (result i64)))
  (type (;1;) (func (param i64) (result i64 i64)))
  (type (;2;) (func (param i64 i64) (result i64 i64 i64)))
  (type (;3;) (func (param i64 i64) (result i64)))
  (type (;4;) (func (param i64)))
  (type (;5;) (func (param i64 i64)))
  (type (;6;) (func (param i32 i64 i64) (result i32)))
  (type (;7;) (func (result i64 i64)))
  (type (;8;) (func (result i64 i64 i64)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 4)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 6)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 6)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 6)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 6)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 6)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 6)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;7;) (type 5)))
  (import "spectest" "finite_wasm_unstack" (func $finite_wasm_unstack (;8;) (type 5)))
  (export "fac-rec" (func 9))
  (export "fac-rec-named" (func $fac-rec-named))
  (export "fac-iter" (func 11))
  (export "fac-iter-named" (func 12))
  (export "fac-opt" (func 13))
  (export "fac-ssa" (func 16))
  (func (;9;) (type 0) (param i64) (result i64)
    block (result i64) ;; label = @1
      i64.const 24
      i64.const 1
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      local.get 0
      i64.const 0
      i64.eq
      if (result i64) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i64.const 1
      else
        i64.const 5
        call $finite_wasm_gas
        local.get 0
        local.get 0
        i64.const 1
        i64.sub
        call 9
        i64.const 1
        call $finite_wasm_gas
        i64.mul
      end
    end
    i64.const 24
    i64.const 1
    call $finite_wasm_unstack
  )
  (func $fac-rec-named (;10;) (type 0) (param $n i64) (result i64)
    block (result i64) ;; label = @1
      i64.const 24
      i64.const 1
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      local.get $n
      i64.const 0
      i64.eq
      if (result i64) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i64.const 1
      else
        i64.const 5
        call $finite_wasm_gas
        local.get $n
        local.get $n
        i64.const 1
        i64.sub
        call $fac-rec-named
        i64.const 1
        call $finite_wasm_gas
        i64.mul
      end
    end
    i64.const 24
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;11;) (type 0) (param i64) (result i64)
    (local i64 i64)
    block (result i64) ;; label = @1
      i64.const 16
      i64.const 3
      call $finite_wasm_stack
      i64.const 5
      call $finite_wasm_gas
      local.get 0
      local.set 1
      i64.const 1
      local.set 2
      block ;; label = @2
        loop ;; label = @3
          i64.const 5
          call $finite_wasm_gas
          local.get 1
          i64.const 0
          i64.eq
          if ;; label = @4
            i64.const 1
            call $finite_wasm_gas
            br 2 (;@2;)
          else
            i64.const 8
            call $finite_wasm_gas
            local.get 1
            local.get 2
            i64.mul
            local.set 2
            local.get 1
            i64.const 1
            i64.sub
            local.set 1
          end
          i64.const 1
          call $finite_wasm_gas
          br 0 (;@3;)
        end
      end
      i64.const 1
      call $finite_wasm_gas
      local.get 2
    end
    i64.const 16
    i64.const 3
    call $finite_wasm_unstack
  )
  (func (;12;) (type 0) (param $n i64) (result i64)
    (local $i i64) (local $res i64)
    block $done (result i64)
      i64.const 16
      i64.const 3
      call $finite_wasm_stack
      i64.const 5
      call $finite_wasm_gas
      local.get $n
      local.set $i
      i64.const 1
      local.set $res
      block $loop
        loop ;; label = @3
          i64.const 5
          call $finite_wasm_gas
          local.get $i
          i64.const 0
          i64.eq
          if ;; label = @4
            i64.const 1
            call $finite_wasm_gas
            br $loop
          else
            i64.const 8
            call $finite_wasm_gas
            local.get $i
            local.get $res
            i64.mul
            local.set $res
            local.get $i
            i64.const 1
            i64.sub
            local.set $i
          end
          i64.const 1
          call $finite_wasm_gas
          br 0 (;@3;)
        end
      end
      i64.const 1
      call $finite_wasm_gas
      local.get $res
    end
    i64.const 16
    i64.const 3
    call $finite_wasm_unstack
  )
  (func (;13;) (type 0) (param i64) (result i64)
    (local i64)
    block (result i64) ;; label = @1
      i64.const 16
      i64.const 2
      call $finite_wasm_stack
      i64.const 7
      call $finite_wasm_gas
      i64.const 1
      local.set 1
      block ;; label = @2
        local.get 0
        i64.const 2
        i64.lt_s
        br_if 0 (;@2;)
        loop ;; label = @3
          i64.const 13
          call $finite_wasm_gas
          local.get 1
          local.get 0
          i64.mul
          local.set 1
          local.get 0
          i64.const -1
          i64.add
          local.set 0
          local.get 0
          i64.const 1
          i64.gt_s
          br_if 0 (;@3;)
        end
      end
      i64.const 1
      call $finite_wasm_gas
      local.get 1
    end
    i64.const 16
    i64.const 2
    call $finite_wasm_unstack
  )
  (func $pick0 (;14;) (type 1) (param i64) (result i64 i64)
    block (type 7) (result i64 i64) ;; label = @1
      i64.const 16
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      local.get 0
    end
    i64.const 16
    i64.const 1
    call $finite_wasm_unstack
  )
  (func $pick1 (;15;) (type 2) (param i64 i64) (result i64 i64 i64)
    block (type 8) (result i64 i64 i64) ;; label = @1
      i64.const 24
      i64.const 2
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      local.get 0
      local.get 1
      local.get 0
    end
    i64.const 24
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;16;) (type 0) (param i64) (result i64)
    block $l (result i64)
      i64.const 48
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i64.const 1
      local.get 0
      loop (type 3) (param i64 i64) (result i64) ;; label = @2
        i64.const 2
        call $finite_wasm_gas
        call $pick1
        i64.const 1
        call $finite_wasm_gas
        call $pick1
        i64.const 2
        call $finite_wasm_gas
        i64.mul
        call $pick1
        i64.const 3
        call $finite_wasm_gas
        i64.const 1
        i64.sub
        call $pick0
        i64.const 3
        call $finite_wasm_gas
        i64.const 0
        i64.gt_u
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        drop
        i64.const 48
        i64.const 1
        call $finite_wasm_unstack
        return
      end
    end
    i64.const 48
    i64.const 1
    call $finite_wasm_unstack
  )
)

(assert_return (invoke "fac-rec" (i64.const 25)) (i64.const 7034535277573963776))
(assert_return (invoke "fac-iter" (i64.const 25)) (i64.const 7034535277573963776))
(assert_return (invoke "fac-rec-named" (i64.const 25)) (i64.const 7034535277573963776))
(assert_return (invoke "fac-iter-named" (i64.const 25)) (i64.const 7034535277573963776))
(assert_return (invoke "fac-opt" (i64.const 25)) (i64.const 7034535277573963776))
(assert_return (invoke "fac-ssa" (i64.const 25)) (i64.const 7034535277573963776))

