(module
  (type (;0;) (func (result f64)))
  (type (;1;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (func (;2;) (type 0) (result f64)
    (local $x f64) (local $r f64) (local $q f64) (local $z0 f64) (local $z1 f64)
    i64.const 1000004000024
    call 1
    i64.const 33
    call 0
    f64.const 0x1.388p+7 (;=156.25;)
    local.set $x
    f64.const 0x1.a0aaaaaab064bp+7 (;=208.333333334;)
    local.set $r
    f64.const 0x1.c78e2aae3d096p+0 (;=1.77951304201;)
    local.set $q
    local.get $r
    f64.neg
    local.get $x
    f64.mul
    local.get $x
    local.get $q
    f64.mul
    local.get $r
    f64.sub
    f64.div
    local.set $z0
    local.get $r
    f64.neg
    local.get $x
    f64.mul
    local.get $x
    local.get $q
    f64.mul
    local.get $r
    f64.sub
    f64.div
    local.set $z1
    block ;; label = @1
      local.get $z0
      local.get $z1
      f64.eq
      br_if 0 (;@1;)
      i64.const 1
      call 0
      unreachable
      i64.const 1
      call 0
    end
    i64.const 2
    call 0
    local.get $z1
  )
  (export "calculate" (func 2))
)