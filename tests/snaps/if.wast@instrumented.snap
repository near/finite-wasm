(module
  (type $check (;0;) (func (param i32 i32) (result i32)))
  (type $block-sig-1 (;1;) (func))
  (type $block-sig-2 (;2;) (func (result i32)))
  (type $block-sig-3 (;3;) (func (param i32)))
  (type $block-sig-4 (;4;) (func (param i32 f64 i32) (result i32 f64 i32)))
  (type (;5;) (func (param i32) (result i32)))
  (type (;6;) (func (param i32) (result i32 i32)))
  (type (;7;) (func (result i32 i64 i32)))
  (type (;8;) (func (result i32 i32)))
  (type (;9;) (func (result f32 f32)))
  (type (;10;) (func (param i32) (result i32 i32 i64)))
  (type (;11;) (func (result i32 i32 i64)))
  (type (;12;) (func (param i32 i32) (result i32 i32)))
  (type (;13;) (func (param i64 i64 i32) (result i64 i32)))
  (type (;14;) (func (param i64 i64) (result i64)))
  (type (;15;) (func (param i64) (result i64)))
  (type (;16;) (func (param i64)))
  (type (;17;) (func (param i64 i64)))
  (type (;18;) (func (result i32 i32)))
  (type (;19;) (func (result i32 i32 i64)))
  (type (;20;) (func (result i64 i32)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 16)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;1;) (type 17)))
  (import "spectest" "finite_wasm_unstack" (func $finite_wasm_unstack (;2;) (type 17)))
  (func $dummy (;3;) (type $block-sig-1))
  (func (;4;) (type $block-sig-3) (param i32)
    block ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if ;; label = @2
      end
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if $l ;; label = @2
      end
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if $l ;; label = @2
      end
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if ;; label = @2
      end
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;5;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        nop
      end
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        nop
      else
        i64.const 1
        call $finite_wasm_gas
        nop
      end
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i32.const 7
      else
        i64.const 1
        call $finite_wasm_gas
        i32.const 8
      end
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;6;) (type 6) (param i32) (result i32 i32)
    block (type 18) (result i32 i32) ;; label = @1
      i64.const 20
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        call $dummy
      end
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if ;; label = @2
      else
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        call $dummy
      end
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        i32.const 8
        call $dummy
      else
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        i32.const 9
        call $dummy
      end
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (type 7) (result i32 i64 i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        i32.const 1
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        i64.const 2
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        i32.const 3
        call $dummy
      else
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        i32.const -1
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        i64.const -2
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        i32.const -3
        call $dummy
      end
      i64.const 2
      call $finite_wasm_gas
      drop
      drop
    end
    i64.const 20
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;7;) (type $check) (param i32 i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 2
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (result i32) ;; label = @2
        i64.const 2
        call $finite_wasm_gas
        local.get 1
        if ;; label = @3
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 2
          call $finite_wasm_gas
          block ;; label = @4
          end
          nop
        end
        i64.const 2
        call $finite_wasm_gas
        local.get 1
        if ;; label = @3
        else
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 2
          call $finite_wasm_gas
          block ;; label = @4
          end
          nop
        end
        i64.const 2
        call $finite_wasm_gas
        local.get 1
        if (result i32) ;; label = @3
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 9
        else
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 10
        end
      else
        i64.const 2
        call $finite_wasm_gas
        local.get 1
        if ;; label = @3
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 2
          call $finite_wasm_gas
          block ;; label = @4
          end
          nop
        end
        i64.const 2
        call $finite_wasm_gas
        local.get 1
        if ;; label = @3
        else
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 2
          call $finite_wasm_gas
          block ;; label = @4
          end
          nop
        end
        i64.const 2
        call $finite_wasm_gas
        local.get 1
        if (result i32) ;; label = @3
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 10
        else
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 11
        end
      end
    end
    i64.const 4
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;8;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const 1
      else
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const 0
      end
      i64.const 3
      call $finite_wasm_gas
      i32.const 2
      i32.const 3
      select
    end
    i64.const 12
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;9;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 1
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      i32.const 2
      local.get 0
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const 1
      else
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const 0
      end
      i64.const 2
      call $finite_wasm_gas
      i32.const 3
      select
    end
    i64.const 12
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;10;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 1
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      i32.const 2
      i32.const 3
      local.get 0
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const 1
      else
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const 0
      end
      i64.const 1
      call $finite_wasm_gas
      select
    end
    i64.const 12
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;11;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      loop (result i32) ;; label = @2
        local.get 0
        if (result i32) ;; label = @3
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 1
        else
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 0
        end
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        call $dummy
      end
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;12;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      loop (result i32) ;; label = @2
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        local.get 0
        if (result i32) ;; label = @3
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 1
        else
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 0
        end
        i64.const 1
        call $finite_wasm_gas
        call $dummy
      end
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;13;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      loop (result i32) ;; label = @2
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        local.get 0
        if (result i32) ;; label = @3
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 1
        else
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 0
        end
      end
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;14;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i32.const 1
      else
        i64.const 1
        call $finite_wasm_gas
        i32.const 0
      end
      i64.const 1
      call $finite_wasm_gas
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const 2
      else
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const 3
      end
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;15;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        local.get 0
        if (result i32) ;; label = @3
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 1
        else
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 0
        end
        i64.const 2
        call $finite_wasm_gas
        i32.const 2
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        i32.const 3
        i64.const 8
        i64.const 1
        call $finite_wasm_unstack
        return
      end
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;16;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 2
        local.get 0
        if (result i32) ;; label = @3
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 1
        else
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 0
        end
        i64.const 1
        call $finite_wasm_gas
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        i32.const 3
        i64.const 8
        i64.const 1
        call $finite_wasm_unstack
        return
      end
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;17;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        local.get 0
        if (result i32) ;; label = @3
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 1
        else
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 0
        end
        i64.const 2
        call $finite_wasm_gas
        i32.const 2
        br_table 0 (;@2;) 0 (;@2;)
      end
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;18;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 2
        local.get 0
        if (result i32) ;; label = @3
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 1
        else
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 0
        end
        i64.const 1
        call $finite_wasm_gas
        br_table 0 (;@2;) 0 (;@2;)
      end
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func $func (;19;) (type $check) (param i32 i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 4
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;20;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 1
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        local.get 0
        if (result i32) ;; label = @3
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 1
        else
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 0
        end
        i64.const 3
        call $finite_wasm_gas
        i32.const 2
        i32.const 0
        call_indirect (type $check)
      end
    end
    i64.const 12
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;21;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 1
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 2
        local.get 0
        if (result i32) ;; label = @3
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 1
        else
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 0
        end
        i64.const 2
        call $finite_wasm_gas
        i32.const 0
        call_indirect (type $check)
      end
    end
    i64.const 12
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;22;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 1
      call $finite_wasm_stack
      i64.const 5
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 2
        i32.const 0
        local.get 0
        if (result i32) ;; label = @3
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 1
        else
          i64.const 1
          call $finite_wasm_gas
          call $dummy
          i64.const 1
          call $finite_wasm_gas
          i32.const 0
        end
        i64.const 1
        call $finite_wasm_gas
        call_indirect (type $check)
      end
    end
    i64.const 12
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;23;) (type $block-sig-3) (param i32)
    block ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const 1
      else
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const 0
      end
      i64.const 2
      call $finite_wasm_gas
      i32.const 2
      i32.store
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;24;) (type $block-sig-3) (param i32)
    block ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      i32.const 2
      local.get 0
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const 1
      else
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const 0
      end
      i64.const 1
      call $finite_wasm_gas
      i32.store
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;25;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i32.const 1
      else
        i64.const 1
        call $finite_wasm_gas
        i32.const 0
      end
      i64.const 1
      call $finite_wasm_gas
      memory.grow
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func $f (;26;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;27;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i32.const 1
      else
        i64.const 1
        call $finite_wasm_gas
        i32.const 0
      end
      i64.const 1
      call $finite_wasm_gas
      call $f
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;28;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i32.const 1
      else
        i64.const 1
        call $finite_wasm_gas
        i32.const 0
      end
      i64.const 1
      call $finite_wasm_gas
      i64.const 4
      i64.const 1
      call $finite_wasm_unstack
      return
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;29;) (type $block-sig-3) (param i32)
    block ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i32.const 1
      else
        i64.const 1
        call $finite_wasm_gas
        i32.const 0
      end
      i64.const 1
      call $finite_wasm_gas
      drop
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;30;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        local.get 0
        if (result i32) ;; label = @3
          i64.const 1
          call $finite_wasm_gas
          i32.const 1
        else
          i64.const 1
          call $finite_wasm_gas
          i32.const 0
        end
        i64.const 1
        call $finite_wasm_gas
        br 0 (;@2;)
      end
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;31;) (type 5) (param i32) (result i32)
    (local i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 2
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i32.const 1
      else
        i64.const 1
        call $finite_wasm_gas
        i32.const 0
      end
      i64.const 2
      call $finite_wasm_gas
      local.set 0
      local.get 0
    end
    i64.const 4
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;32;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i32.const 1
      else
        i64.const 1
        call $finite_wasm_gas
        i32.const 0
      end
      i64.const 1
      call $finite_wasm_gas
      local.tee 0
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;33;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i32.const 1
      else
        i64.const 1
        call $finite_wasm_gas
        i32.const 0
      end
      i64.const 2
      call $finite_wasm_gas
      global.set $a
      global.get $a
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;34;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i32.const 11
      else
        i64.const 1
        call $finite_wasm_gas
        i32.const 10
      end
      i64.const 1
      call $finite_wasm_gas
      i32.load
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;35;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const 13
      else
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const -13
      end
      i64.const 1
      call $finite_wasm_gas
      i32.ctz
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;36;) (type $check) (param i32 i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 2
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const 3
      else
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const -3
      end
      i64.const 2
      call $finite_wasm_gas
      local.get 1
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const 4
      else
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const -5
      end
      i64.const 1
      call $finite_wasm_gas
      i32.mul
    end
    i64.const 8
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;37;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const 13
      else
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const 0
      end
      i64.const 1
      call $finite_wasm_gas
      i32.eqz
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;38;) (type $check) (param i32 i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 2
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (result f32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        f32.const 0x1.8p+1 (;=3;)
      else
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        f32.const -0x1.8p+1 (;=-3;)
      end
      i64.const 2
      call $finite_wasm_gas
      local.get 1
      if (result f32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        f32.const 0x1p+2 (;=4;)
      else
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        f32.const -0x1p+2 (;=-4;)
      end
      i64.const 1
      call $finite_wasm_gas
      f32.gt
    end
    i64.const 8
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;39;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (type 8) (result i32 i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        i32.const 3
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const 4
      else
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        i32.const 3
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const -4
      end
      i64.const 1
      call $finite_wasm_gas
      i32.mul
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;40;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (type 9) (result f32 f32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        f32.const 0x1.8p+1 (;=3;)
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        f32.const 0x1.8p+1 (;=3;)
      else
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        f32.const -0x1p+1 (;=-2;)
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        f32.const -0x1.8p+1 (;=-3;)
      end
      i64.const 1
      call $finite_wasm_gas
      f32.gt
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;41;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (type 8) (result i32 i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        i32.const 3
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const 4
      else
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        i32.const -3
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const -4
      end
      i64.const 3
      call $finite_wasm_gas
      i32.const 5
      i32.add
      i32.mul
    end
    i64.const 12
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;42;) (type $block-sig-2) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i32.const 1
      if ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        br 0 (;@2;)
        unreachable
      end
      i64.const 2
      call $finite_wasm_gas
      i32.const 1
      if ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        br 0 (;@2;)
        unreachable
      else
        i64.const 1
        call $finite_wasm_gas
        unreachable
      end
      i64.const 2
      call $finite_wasm_gas
      i32.const 0
      if ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        unreachable
      else
        i64.const 1
        call $finite_wasm_gas
        br 0 (;@2;)
        unreachable
      end
      i64.const 2
      call $finite_wasm_gas
      i32.const 1
      if ;; label = @2
        i64.const 2
        call $finite_wasm_gas
        i32.const 1
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        unreachable
      end
      i64.const 2
      call $finite_wasm_gas
      i32.const 1
      if ;; label = @2
        i64.const 2
        call $finite_wasm_gas
        i32.const 1
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        unreachable
      else
        i64.const 1
        call $finite_wasm_gas
        unreachable
      end
      i64.const 2
      call $finite_wasm_gas
      i32.const 0
      if ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        unreachable
      else
        i64.const 2
        call $finite_wasm_gas
        i32.const 1
        br_if 0 (;@2;)
        i64.const 1
        call $finite_wasm_gas
        unreachable
      end
      i64.const 2
      call $finite_wasm_gas
      i32.const 1
      if ;; label = @2
        i64.const 2
        call $finite_wasm_gas
        i32.const 0
        br_table 0 (;@2;)
        unreachable
      end
      i64.const 2
      call $finite_wasm_gas
      i32.const 1
      if ;; label = @2
        i64.const 2
        call $finite_wasm_gas
        i32.const 0
        br_table 0 (;@2;)
        unreachable
      else
        i64.const 1
        call $finite_wasm_gas
        unreachable
      end
      i64.const 2
      call $finite_wasm_gas
      i32.const 0
      if ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        unreachable
      else
        i64.const 2
        call $finite_wasm_gas
        i32.const 0
        br_table 0 (;@2;)
        unreachable
      end
      i64.const 1
      call $finite_wasm_gas
      i32.const 19
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;43;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (result i32) ;; label = @2
        i64.const 2
        call $finite_wasm_gas
        i32.const 18
        br 0 (;@2;)
        i32.const 19
      else
        i64.const 2
        call $finite_wasm_gas
        i32.const 21
        br 0 (;@2;)
        i32.const 20
      end
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;44;) (type 10) (param i32) (result i32 i32 i64)
    block (type 19) (result i32 i32 i64) ;; label = @1
      i64.const 16
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      if (type 11) (result i32 i32 i64) ;; label = @2
        i64.const 4
        call $finite_wasm_gas
        i32.const 18
        i32.const -18
        i64.const 18
        br 0 (;@2;)
        i32.const 19
        i32.const -19
        i64.const 19
      else
        i64.const 4
        call $finite_wasm_gas
        i32.const -18
        i32.const 18
        i64.const -18
        br 0 (;@2;)
        i32.const -19
        i32.const 19
        i64.const -19
      end
    end
    i64.const 16
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;45;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      i32.const 1
      local.get 0
      if (type 5) (param i32) (result i32) ;; label = @2
        i64.const 2
        call $finite_wasm_gas
        i32.const 2
        i32.add
      else
        i64.const 2
        call $finite_wasm_gas
        i32.const -2
        i32.add
      end
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;46;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 1
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      i32.const 1
      i32.const 2
      local.get 0
      if (type $check) (param i32 i32) (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i32.add
      else
        i64.const 1
        call $finite_wasm_gas
        i32.sub
      end
    end
    i64.const 12
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;47;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 1
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      i32.const 1
      i32.const 2
      local.get 0
      if (type 12) (param i32 i32) (result i32 i32) ;; label = @2
      end
      i64.const 1
      call $finite_wasm_gas
      i32.add
    end
    i64.const 12
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;48;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      i32.const 1
      local.get 0
      if (type 5) (param i32) (result i32) ;; label = @2
        i64.const 3
        call $finite_wasm_gas
        i32.const 2
        i32.add
        br 0 (;@2;)
      else
        i64.const 3
        call $finite_wasm_gas
        i32.const -2
        i32.add
        br 0 (;@2;)
      end
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;49;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 1
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      i32.const 1
      i32.const 2
      local.get 0
      if (type $check) (param i32 i32) (result i32) ;; label = @2
        i64.const 2
        call $finite_wasm_gas
        i32.add
        br 0 (;@2;)
      else
        i64.const 2
        call $finite_wasm_gas
        i32.sub
        br 0 (;@2;)
      end
    end
    i64.const 12
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;50;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 1
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      i32.const 1
      i32.const 2
      local.get 0
      if (type 12) (param i32 i32) (result i32 i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        br 0 (;@2;)
      end
      i64.const 1
      call $finite_wasm_gas
      i32.add
    end
    i64.const 12
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;51;) (type 5) (param i32) (result i32)
    (local i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 2
      call $finite_wasm_stack
      i64.const 5
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        local.set 1
        local.get 0
      end
      if ;; label = @2
        i64.const 13
        call $finite_wasm_gas
        local.get 1
        i32.const 3
        i32.mul
        local.set 1
        local.get 1
        i32.const 5
        i32.sub
        local.set 1
        local.get 1
        i32.const 7
        i32.mul
        local.set 1
        br 0 (;@2;)
        local.get 1
        i32.const 100
        i32.mul
        local.set 1
      else
        i64.const 13
        call $finite_wasm_gas
        local.get 1
        i32.const 5
        i32.mul
        local.set 1
        local.get 1
        i32.const 7
        i32.sub
        local.set 1
        local.get 1
        i32.const 3
        i32.mul
        local.set 1
        br 0 (;@2;)
        local.get 1
        i32.const 1000
        i32.mul
        local.set 1
      end
      i64.const 1
      call $finite_wasm_gas
      local.get 1
    end
    i64.const 8
    i64.const 2
    call $finite_wasm_unstack
  )
  (func $add64_u_with_carry (;52;) (type 13) (param $i i64) (param $j i64) (param $c i32) (result i64 i32)
    (local $k i64)
    block (type 20) (result i64 i32) ;; label = @1
      i64.const 24
      i64.const 4
      call $finite_wasm_stack
      i64.const 12
      call $finite_wasm_gas
      local.get $i
      local.get $j
      i64.add
      local.get $c
      i64.extend_i32_u
      i64.add
      local.set $k
      local.get $k
      local.get $k
      local.get $i
      i64.lt_u
      i64.const 24
      i64.const 4
      call $finite_wasm_unstack
      return
    end
    i64.const 24
    i64.const 4
    call $finite_wasm_unstack
  )
  (func $add64_u_saturated (;53;) (type 14) (param i64 i64) (result i64)
    block (result i64) ;; label = @1
      i64.const 20
      i64.const 2
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      local.get 0
      local.get 1
      i32.const 0
      call $add64_u_with_carry
      i64.const 1
      call $finite_wasm_gas
      if (type 15) (param i64) (result i64) ;; label = @2
        i64.const 2
        call $finite_wasm_gas
        drop
        i64.const -1
      end
    end
    i64.const 20
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;54;) (type $block-sig-1)
    block ;; label = @1
      i64.const 20
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i32.const 1
      if (type $block-sig-1) ;; label = @2
      end
      i64.const 2
      call $finite_wasm_gas
      i32.const 1
      if (type $block-sig-2) (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i32.const 0
      else
        i64.const 1
        call $finite_wasm_gas
        i32.const 2
      end
      i64.const 2
      call $finite_wasm_gas
      i32.const 1
      if (type $block-sig-3) (param i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        drop
      else
        i64.const 1
        call $finite_wasm_gas
        drop
      end
      i64.const 5
      call $finite_wasm_gas
      i32.const 0
      f64.const 0x0p+0 (;=0;)
      i32.const 0
      i32.const 1
      if (type $block-sig-4) (param i32 f64 i32) (result i32 f64 i32) ;; label = @2
      end
      i64.const 5
      call $finite_wasm_gas
      drop
      drop
      drop
      i32.const 1
      if (type $block-sig-2) (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i32.const 0
      else
        i64.const 1
        call $finite_wasm_gas
        i32.const 2
      end
      i64.const 2
      call $finite_wasm_gas
      i32.const 1
      if (type $block-sig-3) (param i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        drop
      else
        i64.const 1
        call $finite_wasm_gas
        drop
      end
      i64.const 5
      call $finite_wasm_gas
      i32.const 0
      f64.const 0x0p+0 (;=0;)
      i32.const 0
      i32.const 1
      if (type $block-sig-4) (param i32 f64 i32) (result i32 f64 i32) ;; label = @2
      end
      i64.const 3
      call $finite_wasm_gas
      drop
      drop
      drop
    end
    i64.const 20
    i64.const 0
    call $finite_wasm_unstack
  )
  (table (;0;) 1 1 funcref)
  (memory (;0;) 1)
  (global $a (;0;) (mut i32) i32.const 10)
  (export "empty" (func 4))
  (export "singular" (func 5))
  (export "multi" (func 6))
  (export "nested" (func 7))
  (export "as-select-first" (func 8))
  (export "as-select-mid" (func 9))
  (export "as-select-last" (func 10))
  (export "as-loop-first" (func 11))
  (export "as-loop-mid" (func 12))
  (export "as-loop-last" (func 13))
  (export "as-if-condition" (func 14))
  (export "as-br_if-first" (func 15))
  (export "as-br_if-last" (func 16))
  (export "as-br_table-first" (func 17))
  (export "as-br_table-last" (func 18))
  (export "as-call_indirect-first" (func 20))
  (export "as-call_indirect-mid" (func 21))
  (export "as-call_indirect-last" (func 22))
  (export "as-store-first" (func 23))
  (export "as-store-last" (func 24))
  (export "as-memory.grow-value" (func 25))
  (export "as-call-value" (func 27))
  (export "as-return-value" (func 28))
  (export "as-drop-operand" (func 29))
  (export "as-br-value" (func 30))
  (export "as-local.set-value" (func 31))
  (export "as-local.tee-value" (func 32))
  (export "as-global.set-value" (func 33))
  (export "as-load-operand" (func 34))
  (export "as-unary-operand" (func 35))
  (export "as-binary-operand" (func 36))
  (export "as-test-operand" (func 37))
  (export "as-compare-operand" (func 38))
  (export "as-binary-operands" (func 39))
  (export "as-compare-operands" (func 40))
  (export "as-mixed-operands" (func 41))
  (export "break-bare" (func 42))
  (export "break-value" (func 43))
  (export "break-multi-value" (func 44))
  (export "param" (func 45))
  (export "params" (func 46))
  (export "params-id" (func 47))
  (export "param-break" (func 48))
  (export "params-break" (func 49))
  (export "params-id-break" (func 50))
  (export "effects" (func 51))
  (export "add64_u_with_carry" (func $add64_u_with_carry))
  (export "add64_u_saturated" (func $add64_u_saturated))
  (export "type-use" (func 54))
  (elem (;0;) (i32.const 0) func $func)
)
(assert_return (invoke "empty" (i32.const 0)))
(assert_return (invoke "empty" (i32.const 1)))
(assert_return (invoke "empty" (i32.const 100)))
(assert_return (invoke "empty" (i32.const -2)))

(assert_return (invoke "singular" (i32.const 0)) (i32.const 8))
(assert_return (invoke "singular" (i32.const 1)) (i32.const 7))
(assert_return (invoke "singular" (i32.const 10)) (i32.const 7))
(assert_return (invoke "singular" (i32.const -10)) (i32.const 7))

(assert_return (invoke "multi" (i32.const 0)) (i32.const 9) (i32.const -1))
(assert_return (invoke "multi" (i32.const 1)) (i32.const 8) (i32.const 1))
(assert_return (invoke "multi" (i32.const 13)) (i32.const 8) (i32.const 1))
(assert_return (invoke "multi" (i32.const -5)) (i32.const 8) (i32.const 1))

(assert_return (invoke "nested" (i32.const 0) (i32.const 0)) (i32.const 11))
(assert_return (invoke "nested" (i32.const 1) (i32.const 0)) (i32.const 10))
(assert_return (invoke "nested" (i32.const 0) (i32.const 1)) (i32.const 10))
(assert_return (invoke "nested" (i32.const 3) (i32.const 2)) (i32.const 9))
(assert_return (invoke "nested" (i32.const 0) (i32.const -100)) (i32.const 10))
(assert_return (invoke "nested" (i32.const 10) (i32.const 10)) (i32.const 9))
(assert_return (invoke "nested" (i32.const 0) (i32.const -1)) (i32.const 10))
(assert_return (invoke "nested" (i32.const -111) (i32.const -2)) (i32.const 9))

(assert_return (invoke "as-select-first" (i32.const 0)) (i32.const 0))
(assert_return (invoke "as-select-first" (i32.const 1)) (i32.const 1))
(assert_return (invoke "as-select-mid" (i32.const 0)) (i32.const 2))
(assert_return (invoke "as-select-mid" (i32.const 1)) (i32.const 2))
(assert_return (invoke "as-select-last" (i32.const 0)) (i32.const 3))
(assert_return (invoke "as-select-last" (i32.const 1)) (i32.const 2))

(assert_return (invoke "as-loop-first" (i32.const 0)) (i32.const 0))
(assert_return (invoke "as-loop-first" (i32.const 1)) (i32.const 1))
(assert_return (invoke "as-loop-mid" (i32.const 0)) (i32.const 0))
(assert_return (invoke "as-loop-mid" (i32.const 1)) (i32.const 1))
(assert_return (invoke "as-loop-last" (i32.const 0)) (i32.const 0))
(assert_return (invoke "as-loop-last" (i32.const 1)) (i32.const 1))

(assert_return (invoke "as-if-condition" (i32.const 0)) (i32.const 3))
(assert_return (invoke "as-if-condition" (i32.const 1)) (i32.const 2))

(assert_return (invoke "as-br_if-first" (i32.const 0)) (i32.const 0))
(assert_return (invoke "as-br_if-first" (i32.const 1)) (i32.const 1))
(assert_return (invoke "as-br_if-last" (i32.const 0)) (i32.const 3))
(assert_return (invoke "as-br_if-last" (i32.const 1)) (i32.const 2))

(assert_return (invoke "as-br_table-first" (i32.const 0)) (i32.const 0))
(assert_return (invoke "as-br_table-first" (i32.const 1)) (i32.const 1))
(assert_return (invoke "as-br_table-last" (i32.const 0)) (i32.const 2))
(assert_return (invoke "as-br_table-last" (i32.const 1)) (i32.const 2))

(assert_return (invoke "as-call_indirect-first" (i32.const 0)) (i32.const 0))
(assert_return (invoke "as-call_indirect-first" (i32.const 1)) (i32.const 1))
(assert_return (invoke "as-call_indirect-mid" (i32.const 0)) (i32.const 2))
(assert_return (invoke "as-call_indirect-mid" (i32.const 1)) (i32.const 2))
(assert_return (invoke "as-call_indirect-last" (i32.const 0)) (i32.const 2))
(assert_trap (invoke "as-call_indirect-last" (i32.const 1)) "undefined element")

(assert_return (invoke "as-store-first" (i32.const 0)))
(assert_return (invoke "as-store-first" (i32.const 1)))
(assert_return (invoke "as-store-last" (i32.const 0)))
(assert_return (invoke "as-store-last" (i32.const 1)))

(assert_return (invoke "as-memory.grow-value" (i32.const 0)) (i32.const 1))
(assert_return (invoke "as-memory.grow-value" (i32.const 1)) (i32.const 1))

(assert_return (invoke "as-call-value" (i32.const 0)) (i32.const 0))
(assert_return (invoke "as-call-value" (i32.const 1)) (i32.const 1))

(assert_return (invoke "as-return-value" (i32.const 0)) (i32.const 0))
(assert_return (invoke "as-return-value" (i32.const 1)) (i32.const 1))

(assert_return (invoke "as-drop-operand" (i32.const 0)))
(assert_return (invoke "as-drop-operand" (i32.const 1)))

(assert_return (invoke "as-br-value" (i32.const 0)) (i32.const 0))
(assert_return (invoke "as-br-value" (i32.const 1)) (i32.const 1))

(assert_return (invoke "as-local.set-value" (i32.const 0)) (i32.const 0))
(assert_return (invoke "as-local.set-value" (i32.const 1)) (i32.const 1))

(assert_return (invoke "as-local.tee-value" (i32.const 0)) (i32.const 0))
(assert_return (invoke "as-local.tee-value" (i32.const 1)) (i32.const 1))

(assert_return (invoke "as-global.set-value" (i32.const 0)) (i32.const 0))
(assert_return (invoke "as-global.set-value" (i32.const 1)) (i32.const 1))

(assert_return (invoke "as-load-operand" (i32.const 0)) (i32.const 0))
(assert_return (invoke "as-load-operand" (i32.const 1)) (i32.const 0))

(assert_return (invoke "as-unary-operand" (i32.const 0)) (i32.const 0))
(assert_return (invoke "as-unary-operand" (i32.const 1)) (i32.const 0))
(assert_return (invoke "as-unary-operand" (i32.const -1)) (i32.const 0))

(assert_return (invoke "as-binary-operand" (i32.const 0) (i32.const 0)) (i32.const 15))
(assert_return (invoke "as-binary-operand" (i32.const 0) (i32.const 1)) (i32.const -12))
(assert_return (invoke "as-binary-operand" (i32.const 1) (i32.const 0)) (i32.const -15))
(assert_return (invoke "as-binary-operand" (i32.const 1) (i32.const 1)) (i32.const 12))

(assert_return (invoke "as-test-operand" (i32.const 0)) (i32.const 1))
(assert_return (invoke "as-test-operand" (i32.const 1)) (i32.const 0))

(assert_return (invoke "as-compare-operand" (i32.const 0) (i32.const 0)) (i32.const 1))
(assert_return (invoke "as-compare-operand" (i32.const 0) (i32.const 1)) (i32.const 0))
(assert_return (invoke "as-compare-operand" (i32.const 1) (i32.const 0)) (i32.const 1))
(assert_return (invoke "as-compare-operand" (i32.const 1) (i32.const 1)) (i32.const 0))

(assert_return (invoke "as-binary-operands" (i32.const 0)) (i32.const -12))
(assert_return (invoke "as-binary-operands" (i32.const 1)) (i32.const 12))

(assert_return (invoke "as-compare-operands" (i32.const 0)) (i32.const 1))
(assert_return (invoke "as-compare-operands" (i32.const 1)) (i32.const 0))

(assert_return (invoke "as-mixed-operands" (i32.const 0)) (i32.const -3))
(assert_return (invoke "as-mixed-operands" (i32.const 1)) (i32.const 27))

(assert_return (invoke "break-bare") (i32.const 19))
(assert_return (invoke "break-value" (i32.const 1)) (i32.const 18))
(assert_return (invoke "break-value" (i32.const 0)) (i32.const 21))
(assert_return (invoke "break-multi-value" (i32.const 0))
  (i32.const -18) (i32.const 18) (i64.const -18)
)
(assert_return (invoke "break-multi-value" (i32.const 1))
  (i32.const 18) (i32.const -18) (i64.const 18)
)

(assert_return (invoke "param" (i32.const 0)) (i32.const -1))
(assert_return (invoke "param" (i32.const 1)) (i32.const 3))
(assert_return (invoke "params" (i32.const 0)) (i32.const -1))
(assert_return (invoke "params" (i32.const 1)) (i32.const 3))
(assert_return (invoke "params-id" (i32.const 0)) (i32.const 3))
(assert_return (invoke "params-id" (i32.const 1)) (i32.const 3))
(assert_return (invoke "param-break" (i32.const 0)) (i32.const -1))
(assert_return (invoke "param-break" (i32.const 1)) (i32.const 3))
(assert_return (invoke "params-break" (i32.const 0)) (i32.const -1))
(assert_return (invoke "params-break" (i32.const 1)) (i32.const 3))
(assert_return (invoke "params-id-break" (i32.const 0)) (i32.const 3))
(assert_return (invoke "params-id-break" (i32.const 1)) (i32.const 3))

(assert_return (invoke "effects" (i32.const 1)) (i32.const -14))
(assert_return (invoke "effects" (i32.const 0)) (i32.const -6))

(assert_return
  (invoke "add64_u_with_carry" (i64.const 0) (i64.const 0) (i32.const 0))
  (i64.const 0) (i32.const 0)
)
(assert_return
  (invoke "add64_u_with_carry" (i64.const 100) (i64.const 124) (i32.const 0))
  (i64.const 224) (i32.const 0)
)
(assert_return
  (invoke "add64_u_with_carry" (i64.const -1) (i64.const 0) (i32.const 0))
  (i64.const -1) (i32.const 0)
)
(assert_return
  (invoke "add64_u_with_carry" (i64.const -1) (i64.const 1) (i32.const 0))
  (i64.const 0) (i32.const 1)
)
(assert_return
  (invoke "add64_u_with_carry" (i64.const -1) (i64.const -1) (i32.const 0))
  (i64.const -2) (i32.const 1)
)
(assert_return
  (invoke "add64_u_with_carry" (i64.const -1) (i64.const 0) (i32.const 1))
  (i64.const 0) (i32.const 1)
)
(assert_return
  (invoke "add64_u_with_carry" (i64.const -1) (i64.const 1) (i32.const 1))
  (i64.const 1) (i32.const 1)
)
(assert_return
  (invoke "add64_u_with_carry" (i64.const 0x8000000000000000) (i64.const 0x8000000000000000) (i32.const 0))
  (i64.const 0) (i32.const 1)
)

(assert_return
  (invoke "add64_u_saturated" (i64.const 0) (i64.const 0)) (i64.const 0)
)
(assert_return
  (invoke "add64_u_saturated" (i64.const 1230) (i64.const 23)) (i64.const 1253)
)
(assert_return
  (invoke "add64_u_saturated" (i64.const -1) (i64.const 0)) (i64.const -1)
)
(assert_return
  (invoke "add64_u_saturated" (i64.const -1) (i64.const 1)) (i64.const -1)
)
(assert_return
  (invoke "add64_u_saturated" (i64.const -1) (i64.const -1)) (i64.const -1)
)
(assert_return
  (invoke "add64_u_saturated" (i64.const 0x8000000000000000) (i64.const 0x8000000000000000)) (i64.const -1)
)

(assert_return (invoke "type-use"))

