(module
  (type (;0;) (func (param v128 v128) (result v128)))
  (type (;1;) (func (param v128) (result v128)))
  (type (;2;) (func (result v128)))
  (type (;3;) (func (param i64)))
  (type (;4;) (func (param i64 i64)))
  (type (;5;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 3)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 5)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 5)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 5)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 5)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 5)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 5)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 4)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 4)))
  (export "i8x16.min_s" (func 9))
  (export "i8x16.min_u" (func 10))
  (export "i8x16.max_s" (func 11))
  (export "i8x16.max_u" (func 12))
  (export "i8x16.avgr_u" (func 13))
  (export "i8x16.abs" (func 14))
  (export "i8x16.popcnt" (func 15))
  (export "i8x16.min_s_with_const_0" (func 16))
  (export "i8x16.min_s_with_const_1" (func 17))
  (export "i8x16.min_u_with_const_2" (func 18))
  (export "i8x16.min_u_with_const_3" (func 19))
  (export "i8x16.max_s_with_const_4" (func 20))
  (export "i8x16.max_s_with_const_5" (func 21))
  (export "i8x16.max_u_with_const_6" (func 22))
  (export "i8x16.max_u_with_const_7" (func 23))
  (export "i8x16.avgr_u_with_const_8" (func 24))
  (export "i8x16.avgr_u_with_const_9" (func 25))
  (export "i8x16.abs_with_const_10" (func 26))
  (export "i8x16.popcnt_with_const_11" (func 27))
  (export "i8x16.min_s_with_const_12" (func 28))
  (export "i8x16.min_s_with_const_13" (func 29))
  (export "i8x16.min_u_with_const_14" (func 30))
  (export "i8x16.min_u_with_const_15" (func 31))
  (export "i8x16.max_s_with_const_16" (func 32))
  (export "i8x16.max_s_with_const_17" (func 33))
  (export "i8x16.max_u_with_const_18" (func 34))
  (export "i8x16.max_u_with_const_19" (func 35))
  (export "i8x16.avgr_u_with_const_20" (func 36))
  (export "i8x16.avgr_u_with_const_21" (func 37))
  (func (;9;) (type 0) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 3
      call 0
      local.get 0
      local.get 1
      i8x16.min_s
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;10;) (type 0) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 3
      call 0
      local.get 0
      local.get 1
      i8x16.min_u
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;11;) (type 0) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 3
      call 0
      local.get 0
      local.get 1
      i8x16.max_s
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;12;) (type 0) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 3
      call 0
      local.get 0
      local.get 1
      i8x16.max_u
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;13;) (type 0) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 3
      call 0
      local.get 0
      local.get 1
      i8x16.avgr_u
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;14;) (type 1) (param v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 16
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get 0
      i8x16.abs
    end
    i64.const 16
    i64.const 1
    call 8
  )
  (func (;15;) (type 1) (param v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 16
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get 0
      i8x16.popcnt
    end
    i64.const 16
    i64.const 1
    call 8
  )
  (func (;16;) (type 2) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 0
      call 7
      i64.const 3
      call 0
      v128.const i32x4 0x80808080 0x7f7f7f7f 0x40404040 0xffffffff
      v128.const i32x4 0xffffffff 0x40404040 0x7f7f7f7f 0x80808080
      i8x16.min_s
    end
    i64.const 32
    i64.const 0
    call 8
  )
  (func (;17;) (type 2) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 0
      call 7
      i64.const 3
      call 0
      v128.const i32x4 0x00000000 0x01010101 0x02020202 0x03030303
      v128.const i32x4 0x03030303 0x02020202 0x01010101 0x00000000
      i8x16.min_s
    end
    i64.const 32
    i64.const 0
    call 8
  )
  (func (;18;) (type 2) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 0
      call 7
      i64.const 3
      call 0
      v128.const i32x4 0x80808080 0x7f7f7f7f 0x40404040 0xffffffff
      v128.const i32x4 0xffffffff 0x40404040 0x7f7f7f7f 0x80808080
      i8x16.min_u
    end
    i64.const 32
    i64.const 0
    call 8
  )
  (func (;19;) (type 2) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 0
      call 7
      i64.const 3
      call 0
      v128.const i32x4 0x00000000 0x01010101 0x02020202 0x03030303
      v128.const i32x4 0x03030303 0x02020202 0x01010101 0x00000000
      i8x16.min_u
    end
    i64.const 32
    i64.const 0
    call 8
  )
  (func (;20;) (type 2) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 0
      call 7
      i64.const 3
      call 0
      v128.const i32x4 0x80808080 0x7f7f7f7f 0x40404040 0xffffffff
      v128.const i32x4 0xffffffff 0x40404040 0x7f7f7f7f 0x80808080
      i8x16.max_s
    end
    i64.const 32
    i64.const 0
    call 8
  )
  (func (;21;) (type 2) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 0
      call 7
      i64.const 3
      call 0
      v128.const i32x4 0x00000000 0x01010101 0x02020202 0x03030303
      v128.const i32x4 0x03030303 0x02020202 0x01010101 0x00000000
      i8x16.max_s
    end
    i64.const 32
    i64.const 0
    call 8
  )
  (func (;22;) (type 2) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 0
      call 7
      i64.const 3
      call 0
      v128.const i32x4 0x80808080 0x7f7f7f7f 0x40404040 0xffffffff
      v128.const i32x4 0xffffffff 0x40404040 0x7f7f7f7f 0x80808080
      i8x16.max_u
    end
    i64.const 32
    i64.const 0
    call 8
  )
  (func (;23;) (type 2) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 0
      call 7
      i64.const 3
      call 0
      v128.const i32x4 0x00000000 0x01010101 0x02020202 0x03030303
      v128.const i32x4 0x03030303 0x02020202 0x01010101 0x00000000
      i8x16.max_u
    end
    i64.const 32
    i64.const 0
    call 8
  )
  (func (;24;) (type 2) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 0
      call 7
      i64.const 3
      call 0
      v128.const i32x4 0x80808080 0x7f7f7f7f 0x40404040 0xffffffff
      v128.const i32x4 0xffffffff 0x40404040 0x7f7f7f7f 0x80808080
      i8x16.avgr_u
    end
    i64.const 32
    i64.const 0
    call 8
  )
  (func (;25;) (type 2) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 0
      call 7
      i64.const 3
      call 0
      v128.const i32x4 0x00000000 0x01010101 0x02020202 0x03030303
      v128.const i32x4 0x03030303 0x02020202 0x01010101 0x00000000
      i8x16.avgr_u
    end
    i64.const 32
    i64.const 0
    call 8
  )
  (func (;26;) (type 2) (result v128)
    block (result v128) ;; label = @1
      i64.const 16
      i64.const 0
      call 7
      i64.const 2
      call 0
      v128.const i32x4 0x80808080 0x7f7f7f7f 0x40404040 0xffffffff
      i8x16.abs
    end
    i64.const 16
    i64.const 0
    call 8
  )
  (func (;27;) (type 2) (result v128)
    block (result v128) ;; label = @1
      i64.const 16
      i64.const 0
      call 7
      i64.const 2
      call 0
      v128.const i32x4 0x80808080 0x7f7f7f7f 0x40404040 0xffffffff
      i8x16.popcnt
    end
    i64.const 16
    i64.const 0
    call 8
  )
  (func (;28;) (type 1) (param v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 1
      call 7
      i64.const 3
      call 0
      local.get 0
      v128.const i32x4 0x80808080 0x7f7f7f7f 0x40404040 0xffffffff
      i8x16.min_s
    end
    i64.const 32
    i64.const 1
    call 8
  )
  (func (;29;) (type 1) (param v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 1
      call 7
      i64.const 3
      call 0
      local.get 0
      v128.const i32x4 0x00000000 0x01010101 0x02020202 0x03030303
      i8x16.min_s
    end
    i64.const 32
    i64.const 1
    call 8
  )
  (func (;30;) (type 1) (param v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 1
      call 7
      i64.const 3
      call 0
      local.get 0
      v128.const i32x4 0x80808080 0x7f7f7f7f 0x40404040 0xffffffff
      i8x16.min_u
    end
    i64.const 32
    i64.const 1
    call 8
  )
  (func (;31;) (type 1) (param v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 1
      call 7
      i64.const 3
      call 0
      local.get 0
      v128.const i32x4 0x00000000 0x01010101 0x02020202 0x03030303
      i8x16.min_u
    end
    i64.const 32
    i64.const 1
    call 8
  )
  (func (;32;) (type 1) (param v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 1
      call 7
      i64.const 3
      call 0
      local.get 0
      v128.const i32x4 0x80808080 0x7f7f7f7f 0x40404040 0xffffffff
      i8x16.max_s
    end
    i64.const 32
    i64.const 1
    call 8
  )
  (func (;33;) (type 1) (param v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 1
      call 7
      i64.const 3
      call 0
      local.get 0
      v128.const i32x4 0x00000000 0x01010101 0x02020202 0x03030303
      i8x16.max_s
    end
    i64.const 32
    i64.const 1
    call 8
  )
  (func (;34;) (type 1) (param v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 1
      call 7
      i64.const 3
      call 0
      local.get 0
      v128.const i32x4 0x80808080 0x7f7f7f7f 0x40404040 0xffffffff
      i8x16.max_u
    end
    i64.const 32
    i64.const 1
    call 8
  )
  (func (;35;) (type 1) (param v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 1
      call 7
      i64.const 3
      call 0
      local.get 0
      v128.const i32x4 0x00000000 0x01010101 0x02020202 0x03030303
      i8x16.max_u
    end
    i64.const 32
    i64.const 1
    call 8
  )
  (func (;36;) (type 1) (param v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 1
      call 7
      i64.const 3
      call 0
      local.get 0
      v128.const i32x4 0x80808080 0x7f7f7f7f 0x40404040 0xffffffff
      i8x16.avgr_u
    end
    i64.const 32
    i64.const 1
    call 8
  )
  (func (;37;) (type 1) (param v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 1
      call 7
      i64.const 3
      call 0
      local.get 0
      v128.const i32x4 0x00000000 0x01010101 0x02020202 0x03030303
      i8x16.avgr_u
    end
    i64.const 32
    i64.const 1
    call 8
  )
)

(assert_return (invoke "i8x16.min_s" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                     (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
                                     (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.min_s" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                     (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
                                     (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
(assert_return (invoke "i8x16.min_s" (v128.const i8x16 0 0 0 0 0 0 0 0 -1 -1 -1 -1 -1 -1 -1 -1)
                                     (v128.const i8x16 0 0 0 0 -1 -1 -1 -1 0 0 0 0 -1 -1 -1 -1))
                                     (v128.const i8x16 0 0 0 0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
(assert_return (invoke "i8x16.min_s" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                     (v128.const i8x16 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff))
                                     (v128.const i8x16 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff))
(assert_return (invoke "i8x16.min_s" (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                     (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
                                     (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.min_s" (v128.const i8x16 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255)
                                     (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
                                     (v128.const i8x16 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255))
(assert_return (invoke "i8x16.min_s" (v128.const i8x16 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255)
                                     (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128))
                                     (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128))
(assert_return (invoke "i8x16.min_s" (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128)
                                     (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128))
                                     (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128))
(assert_return (invoke "i8x16.min_s" (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80)
                                     (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128))
                                     (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80))
(assert_return (invoke "i8x16.min_s" (v128.const i8x16 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123)
                                     (v128.const i8x16 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3))
                                     (v128.const i8x16 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123))
(assert_return (invoke "i8x16.min_s" (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80)
                                     (v128.const i8x16 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0))
                                     (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80))
(assert_return (invoke "i8x16.min_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                     (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
                                     (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.min_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                     (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
                                     (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.min_u" (v128.const i8x16 0 0 0 0 0 0 0 0 -1 -1 -1 -1 -1 -1 -1 -1)
                                     (v128.const i8x16 0 0 0 0 -1 -1 -1 -1 0 0 0 0 -1 -1 -1 -1))
                                     (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 -1 -1 -1 -1))
(assert_return (invoke "i8x16.min_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                     (v128.const i8x16 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff))
                                     (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.min_u" (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                     (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
                                     (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.min_u" (v128.const i8x16 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255)
                                     (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
                                     (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.min_u" (v128.const i8x16 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255)
                                     (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128))
                                     (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128))
(assert_return (invoke "i8x16.min_u" (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128)
                                     (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128))
                                     (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128))
(assert_return (invoke "i8x16.min_u" (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80)
                                     (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128))
                                     (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80))
(assert_return (invoke "i8x16.min_u" (v128.const i8x16 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123)
                                     (v128.const i8x16 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3))
                                     (v128.const i8x16 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123))
(assert_return (invoke "i8x16.min_u" (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80)
                                     (v128.const i8x16 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0))
                                     (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80))
(assert_return (invoke "i8x16.max_s" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                     (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
                                     (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.max_s" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                     (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
                                     (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.max_s" (v128.const i8x16 0 0 0 0 0 0 0 0 -1 -1 -1 -1 -1 -1 -1 -1)
                                     (v128.const i8x16 0 0 0 0 -1 -1 -1 -1 0 0 0 0 -1 -1 -1 -1))
                                     (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 -1 -1 -1 -1))
(assert_return (invoke "i8x16.max_s" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                     (v128.const i8x16 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff))
                                     (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.max_s" (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                     (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
                                     (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.max_s" (v128.const i8x16 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255)
                                     (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
                                     (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.max_s" (v128.const i8x16 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255)
                                     (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128))
                                     (v128.const i8x16 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255))
(assert_return (invoke "i8x16.max_s" (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128)
                                     (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128))
                                     (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128))
(assert_return (invoke "i8x16.max_s" (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80)
                                     (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128))
                                     (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80))
(assert_return (invoke "i8x16.max_s" (v128.const i8x16 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123)
                                     (v128.const i8x16 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3))
                                     (v128.const i8x16 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123))
(assert_return (invoke "i8x16.max_s" (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80)
                                     (v128.const i8x16 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0))
                                     (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80))
(assert_return (invoke "i8x16.max_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                     (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
                                     (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.max_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                     (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
                                     (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
(assert_return (invoke "i8x16.max_u" (v128.const i8x16 0 0 0 0 0 0 0 0 -1 -1 -1 -1 -1 -1 -1 -1)
                                     (v128.const i8x16 0 0 0 0 -1 -1 -1 -1 0 0 0 0 -1 -1 -1 -1))
                                     (v128.const i8x16 0 0 0 0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
(assert_return (invoke "i8x16.max_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                     (v128.const i8x16 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff))
                                     (v128.const i8x16 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff))
(assert_return (invoke "i8x16.max_u" (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                     (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
                                     (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.max_u" (v128.const i8x16 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255)
                                     (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
                                     (v128.const i8x16 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255))
(assert_return (invoke "i8x16.max_u" (v128.const i8x16 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255)
                                     (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128))
                                     (v128.const i8x16 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255))
(assert_return (invoke "i8x16.max_u" (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128)
                                     (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128))
                                     (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128))
(assert_return (invoke "i8x16.max_u" (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80)
                                     (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128))
                                     (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80))
(assert_return (invoke "i8x16.max_u" (v128.const i8x16 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123)
                                     (v128.const i8x16 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3))
                                     (v128.const i8x16 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123))
(assert_return (invoke "i8x16.max_u" (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80)
                                     (v128.const i8x16 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0))
                                     (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80))
(assert_return (invoke "i8x16.avgr_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                      (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
                                      (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.avgr_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                      (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
                                      (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128))
(assert_return (invoke "i8x16.avgr_u" (v128.const i8x16 0 0 0 0 0 0 0 0 -1 -1 -1 -1 -1 -1 -1 -1)
                                      (v128.const i8x16 0 0 0 0 -1 -1 -1 -1 0 0 0 0 -1 -1 -1 -1))
                                      (v128.const i8x16 0 0 0 0 128 128 128 128 128 128 128 128 255 255 255 255))
(assert_return (invoke "i8x16.avgr_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                      (v128.const i8x16 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff))
                                      (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80))
(assert_return (invoke "i8x16.avgr_u" (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                      (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
                                      (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.avgr_u" (v128.const i8x16 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255)
                                      (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
                                      (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128))
(assert_return (invoke "i8x16.avgr_u" (v128.const i8x16 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255)
                                      (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128))
                                      (v128.const i8x16 192 192 192 192 192 192 192 192 192 192 192 192 192 192 192 192))
(assert_return (invoke "i8x16.avgr_u" (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128)
                                      (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128))
                                      (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128))
(assert_return (invoke "i8x16.avgr_u" (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80)
                                      (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128))
                                      (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80))
(assert_return (invoke "i8x16.avgr_u" (v128.const i8x16 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123)
                                      (v128.const i8x16 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3))
                                      (v128.const i8x16 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123))
(assert_return (invoke "i8x16.avgr_u" (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80)
                                      (v128.const i8x16 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0))
                                      (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80))
(assert_return (invoke "i8x16.abs" (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
                                   (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.abs" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
                                   (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.abs" (v128.const i8x16 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255))
                                   (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.abs" (v128.const i8x16 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff))
                                   (v128.const i8x16 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1))
(assert_return (invoke "i8x16.abs" (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128))
                                   (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128))
(assert_return (invoke "i8x16.abs" (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128))
                                   (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128))
(assert_return (invoke "i8x16.abs" (v128.const i8x16 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80))
                                   (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80))
(assert_return (invoke "i8x16.abs" (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80))
                                   (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80))
(assert_return (invoke "i8x16.abs" (v128.const i8x16 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3))
                                   (v128.const i8x16 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3))
(assert_return (invoke "i8x16.abs" (v128.const i8x16 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3))
                                   (v128.const i8x16 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123))
(assert_return (invoke "i8x16.abs" (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80))
                                   (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80))
(assert_return (invoke "i8x16.abs" (v128.const i8x16 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80))
                                   (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80))
(assert_return (invoke "i8x16.abs" (v128.const i8x16 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0))
                                   (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80))
(assert_return (invoke "i8x16.abs" (v128.const i8x16 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0))
                                   (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80))
(assert_return (invoke "i8x16.popcnt" (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
                                      (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.popcnt" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
                                      (v128.const i8x16 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8))
(assert_return (invoke "i8x16.popcnt" (v128.const i8x16 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255))
                                      (v128.const i8x16 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8))
(assert_return (invoke "i8x16.popcnt" (v128.const i8x16 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff 0xff))
                                      (v128.const i8x16 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8))
(assert_return (invoke "i8x16.popcnt" (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128))
                                      (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.popcnt" (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128))
                                      (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.popcnt" (v128.const i8x16 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80))
                                      (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.popcnt" (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80))
                                      (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.popcnt" (v128.const i8x16 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3 01_2_3))
                                      (v128.const i8x16 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6))
(assert_return (invoke "i8x16.popcnt" (v128.const i8x16 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3 -01_2_3))
                                      (v128.const i8x16 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3))
(assert_return (invoke "i8x16.popcnt" (v128.const i8x16 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80 0x80))
                                      (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.popcnt" (v128.const i8x16 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80 -0x80))
                                      (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.popcnt" (v128.const i8x16 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0 0x0_8_0))
                                      (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.popcnt" (v128.const i8x16 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0 -0x0_8_0))
                                      (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))

;; Const vs const
(assert_return (invoke "i8x16.min_s_with_const_0") (v128.const i8x16 -128 -128 -128 -128 64 64 64 64 64 64 64 64 -128 -128 -128 -128))
(assert_return (invoke "i8x16.min_s_with_const_1") (v128.const i8x16 0 0 0 0 1 1 1 1 1 1 1 1 0 0 0 0))
(assert_return (invoke "i8x16.min_u_with_const_2") (v128.const i8x16 -128 -128 -128 -128 64 64 64 64 64 64 64 64 -128 -128 -128 -128))
(assert_return (invoke "i8x16.min_u_with_const_3") (v128.const i8x16 0 0 0 0 1 1 1 1 1 1 1 1 0 0 0 0))
(assert_return (invoke "i8x16.max_s_with_const_4") (v128.const i8x16 255 255 255 255 127 127 127 127 127 127 127 127 255 255 255 255))
(assert_return (invoke "i8x16.max_s_with_const_5") (v128.const i8x16 3 3 3 3 2 2 2 2 2 2 2 2 3 3 3 3))
(assert_return (invoke "i8x16.max_u_with_const_6") (v128.const i8x16 255 255 255 255 127 127 127 127 127 127 127 127 255 255 255 255))
(assert_return (invoke "i8x16.max_u_with_const_7") (v128.const i8x16 3 3 3 3 2 2 2 2 2 2 2 2 3 3 3 3))
(assert_return (invoke "i8x16.avgr_u_with_const_8") (v128.const i8x16 192 192 192 192 96 96 96 96 96 96 96 96 192 192 192 192))
(assert_return (invoke "i8x16.avgr_u_with_const_9") (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
(assert_return (invoke "i8x16.abs_with_const_10") (v128.const i8x16 128 128 128 128 127 127 127 127 64 64 64 64 1 1 1 1))
(assert_return (invoke "i8x16.popcnt_with_const_11") (v128.const i8x16 1 1 1 1 7 7 7 7 1 1 1 1 8 8 8 8))

;; Param vs const
(assert_return (invoke "i8x16.min_s_with_const_12" (v128.const i8x16 255 255 255 255 64 64 64 64 127 127 127 127 -128 -128 -128 -128))
                                                   (v128.const i8x16 -128 -128 -128 -128 64 64 64 64 64 64 64 64 -128 -128 -128 -128))
(assert_return (invoke "i8x16.min_s_with_const_13" (v128.const i8x16 3 3 3 3 2 2 2 2 1 1 1 1 0 0 0 0))
                                                   (v128.const i8x16 0 0 0 0 1 1 1 1 1 1 1 1 0 0 0 0))
(assert_return (invoke "i8x16.min_u_with_const_14" (v128.const i8x16 255 255 255 255 64 64 64 64 127 127 127 127 -128 -128 -128 -128))
                                                   (v128.const i8x16 -128 -128 -128 -128 64 64 64 64 64 64 64 64 -128 -128 -128 -128))
(assert_return (invoke "i8x16.min_u_with_const_15" (v128.const i8x16 3 3 3 3 2 2 2 2 1 1 1 1 0 0 0 0))
                                                   (v128.const i8x16 0 0 0 0 1 1 1 1 1 1 1 1 0 0 0 0))
(assert_return (invoke "i8x16.max_s_with_const_16" (v128.const i8x16 255 255 255 255 64 64 64 64 127 127 127 127 -128 -128 -128 -128))
                                                   (v128.const i8x16 255 255 255 255 127 127 127 127 127 127 127 127 255 255 255 255))
(assert_return (invoke "i8x16.max_s_with_const_17" (v128.const i8x16 3 3 3 3 2 2 2 2 1 1 1 1 0 0 0 0))
                                                   (v128.const i8x16 3 3 3 3 2 2 2 2 2 2 2 2 3 3 3 3))
(assert_return (invoke "i8x16.max_u_with_const_18" (v128.const i8x16 255 255 255 255 64 64 64 64 127 127 127 127 -128 -128 -128 -128))
                                                   (v128.const i8x16 255 255 255 255 127 127 127 127 127 127 127 127 255 255 255 255))
(assert_return (invoke "i8x16.max_u_with_const_19" (v128.const i8x16 3 3 3 3 2 2 2 2 1 1 1 1 0 0 0 0))
                                                   (v128.const i8x16 3 3 3 3 2 2 2 2 2 2 2 2 3 3 3 3))
(assert_return (invoke "i8x16.avgr_u_with_const_20" (v128.const i8x16 255 255 255 255 64 64 64 64 127 127 127 127 -128 -128 -128 -128))
                                                    (v128.const i8x16 192 192 192 192 96 96 96 96 96 96 96 96 192 192 192 192))
(assert_return (invoke "i8x16.avgr_u_with_const_21" (v128.const i8x16 3 3 3 3 2 2 2 2 1 1 1 1 0 0 0 0))
                                                    (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))

;; Test different lanes go through different if-then clauses
(assert_return (invoke "i8x16.min_s" (v128.const i8x16 -128 -128 -128 -128 127 127 127 127 64 64 64 64 255 255 255 255)
                                     (v128.const i8x16 255 255 255 255 64 64 64 64 127 127 127 127 -128 -128 -128 -128))
                                     (v128.const i8x16 -128 -128 -128 -128 64 64 64 64 64 64 64 64 -128 -128 -128 -128))
(assert_return (invoke "i8x16.min_s" (v128.const i8x16 0 0 0 0 1 1 1 1 2 2 2 2 128 128 128 128)
                                     (v128.const i8x16 0 0 0 0 2 2 2 2 1 1 1 1 128 128 128 128))
                                     (v128.const i8x16 0 0 0 0 1 1 1 1 1 1 1 1 128 128 128 128))
(assert_return (invoke "i8x16.min_u" (v128.const i8x16 -128 -128 -128 -128 127 127 127 127 64 64 64 64 255 255 255 255)
                                     (v128.const i8x16 255 255 255 255 64 64 64 64 127 127 127 127 -128 -128 -128 -128))
                                     (v128.const i8x16 -128 -128 -128 -128 64 64 64 64 64 64 64 64 -128 -128 -128 -128))
(assert_return (invoke "i8x16.min_u" (v128.const i8x16 0 0 0 0 1 1 1 1 2 2 2 2 128 128 128 128)
                                     (v128.const i8x16 0 0 0 0 2 2 2 2 1 1 1 1 128 128 128 128))
                                     (v128.const i8x16 0 0 0 0 1 1 1 1 1 1 1 1 128 128 128 128))
(assert_return (invoke "i8x16.max_s" (v128.const i8x16 -128 -128 -128 -128 127 127 127 127 64 64 64 64 255 255 255 255)
                                     (v128.const i8x16 255 255 255 255 64 64 64 64 127 127 127 127 -128 -128 -128 -128))
                                     (v128.const i8x16 255 255 255 255 127 127 127 127 127 127 127 127 255 255 255 255))
(assert_return (invoke "i8x16.max_s" (v128.const i8x16 0 0 0 0 1 1 1 1 2 2 2 2 128 128 128 128)
                                     (v128.const i8x16 0 0 0 0 2 2 2 2 1 1 1 1 128 128 128 128))
                                     (v128.const i8x16 0 0 0 0 2 2 2 2 2 2 2 2 128 128 128 128))
(assert_return (invoke "i8x16.max_u" (v128.const i8x16 -128 -128 -128 -128 127 127 127 127 64 64 64 64 255 255 255 255)
                                     (v128.const i8x16 255 255 255 255 64 64 64 64 127 127 127 127 -128 -128 -128 -128))
                                     (v128.const i8x16 255 255 255 255 127 127 127 127 127 127 127 127 255 255 255 255))
(assert_return (invoke "i8x16.max_u" (v128.const i8x16 0 0 0 0 1 1 1 1 2 2 2 2 128 128 128 128)
                                     (v128.const i8x16 0 0 0 0 2 2 2 2 1 1 1 1 128 128 128 128))
                                     (v128.const i8x16 0 0 0 0 2 2 2 2 2 2 2 2 128 128 128 128))
(assert_return (invoke "i8x16.avgr_u" (v128.const i8x16 -128 -128 -128 -128 127 127 127 127 64 64 64 64 255 255 255 255)
                                      (v128.const i8x16 255 255 255 255 64 64 64 64 127 127 127 127 -128 -128 -128 -128))
                                      (v128.const i8x16 192 192 192 192 96 96 96 96 96 96 96 96 192 192 192 192))
(assert_return (invoke "i8x16.avgr_u" (v128.const i8x16 0 0 0 0 1 1 1 1 2 2 2 2 128 128 128 128)
                                      (v128.const i8x16 0 0 0 0 2 2 2 2 1 1 1 1 128 128 128 128))
                                      (v128.const i8x16 0 0 0 0 2 2 2 2 2 2 2 2 128 128 128 128))
(assert_return (invoke "i8x16.abs" (v128.const i8x16 -128 -128 -128 -128 127 127 127 127 64 64 64 64 255 255 255 255))
                                   (v128.const i8x16 128 128 128 128 127 127 127 127 64 64 64 64 1 1 1 1))
(assert_return (invoke "i8x16.popcnt" (v128.const i8x16 -128 -128 -128 -128 127 127 127 127 64 64 64 64 255 255 255 255))
                                      (v128.const i8x16 1 1 1 1 7 7 7 7 1 1 1 1 8 8 8 8))

;; Test opposite signs of zero
(assert_return (invoke "i8x16.min_s" (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 +0 +0 +0 +0 +0 +0 +0 +0)
                                     (v128.const i8x16 +0 +0 +0 +0 0 0 0 0 -0 -0 -0 -0 0 0 0 0))
                                     (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 +0 +0 +0 +0 +0 +0 +0 +0))
(assert_return (invoke "i8x16.min_s" (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0)
                                     (v128.const i8x16 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0))
                                     (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0))
(assert_return (invoke "i8x16.min_u" (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 +0 +0 +0 +0 +0 +0 +0 +0)
                                     (v128.const i8x16 +0 +0 +0 +0 0 0 0 0 -0 -0 -0 -0 0 0 0 0))
                                     (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 +0 +0 +0 +0 +0 +0 +0 +0))
(assert_return (invoke "i8x16.min_u" (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0)
                                     (v128.const i8x16 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0))
                                     (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0))
(assert_return (invoke "i8x16.max_s" (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 +0 +0 +0 +0 +0 +0 +0 +0)
                                     (v128.const i8x16 +0 +0 +0 +0 0 0 0 0 -0 -0 -0 -0 0 0 0 0))
                                     (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 +0 +0 +0 +0 +0 +0 +0 +0))
(assert_return (invoke "i8x16.max_s" (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0)
                                     (v128.const i8x16 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0))
                                     (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0))
(assert_return (invoke "i8x16.max_u" (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 +0 +0 +0 +0 +0 +0 +0 +0)
                                     (v128.const i8x16 +0 +0 +0 +0 0 0 0 0 -0 -0 -0 -0 0 0 0 0))
                                     (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 +0 +0 +0 +0 +0 +0 +0 +0))
(assert_return (invoke "i8x16.max_u" (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0)
                                     (v128.const i8x16 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0))
                                     (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0))
(assert_return (invoke "i8x16.avgr_u" (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 +0 +0 +0 +0 +0 +0 +0 +0)
                                      (v128.const i8x16 +0 +0 +0 +0 0 0 0 0 -0 -0 -0 -0 0 0 0 0))
                                      (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.avgr_u" (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0)
                                      (v128.const i8x16 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0))
                                      (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.abs" (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 +0 +0 +0 +0 +0 +0 +0 +0))
                                   (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 +0 +0 +0 +0 +0 +0 +0 +0))
(assert_return (invoke "i8x16.abs" (v128.const i8x16 +0 +0 +0 +0 0 0 0 0 -0 -0 -0 -0 0 0 0 0))
                                   (v128.const i8x16 +0 +0 +0 +0 0 0 0 0 -0 -0 -0 -0 0 0 0 0))
(assert_return (invoke "i8x16.abs" (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0))
                                   (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0))
(assert_return (invoke "i8x16.abs" (v128.const i8x16 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0))
                                   (v128.const i8x16 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0))
(assert_return (invoke "i8x16.popcnt" (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 +0 +0 +0 +0 +0 +0 +0 +0))
                                      (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.popcnt" (v128.const i8x16 +0 +0 +0 +0 0 0 0 0 -0 -0 -0 -0 0 0 0 0))
                                      (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.popcnt" (v128.const i8x16 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0 -0))
                                      (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.popcnt" (v128.const i8x16 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0 +0))
                                      (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))

;; Unknown operators
(module
  (type (;0;) (func (param v128 v128 v128) (result v128)))
  (type (;1;) (func (param v128 v128) (result v128)))
  (type (;2;) (func (param v128) (result v128)))
  (type (;3;) (func (param i64)))
  (type (;4;) (func (param i64 i64)))
  (type (;5;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 3)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 5)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 5)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 5)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 5)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 5)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 5)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 4)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 4)))
  (export "i8x16.min_s-i8x16.avgr_u" (func 9))
  (export "i8x16.min_s-i8x16.max_u" (func 10))
  (export "i8x16.min_s-i8x16.max_s" (func 11))
  (export "i8x16.min_s-i8x16.min_u" (func 12))
  (export "i8x16.min_s-i8x16.min_s" (func 13))
  (export "i8x16.min_s-i8x16.abs" (func 14))
  (export "i8x16.abs-i8x16.min_s" (func 15))
  (export "i8x16.min_s-i8x16.popcnt" (func 16))
  (export "i8x16.popcnt-i8x16.min_s" (func 17))
  (export "i8x16.min_u-i8x16.avgr_u" (func 18))
  (export "i8x16.min_u-i8x16.max_u" (func 19))
  (export "i8x16.min_u-i8x16.max_s" (func 20))
  (export "i8x16.min_u-i8x16.min_u" (func 21))
  (export "i8x16.min_u-i8x16.min_s" (func 22))
  (export "i8x16.min_u-i8x16.abs" (func 23))
  (export "i8x16.abs-i8x16.min_u" (func 24))
  (export "i8x16.min_u-i8x16.popcnt" (func 25))
  (export "i8x16.popcnt-i8x16.min_u" (func 26))
  (export "i8x16.max_s-i8x16.avgr_u" (func 27))
  (export "i8x16.max_s-i8x16.max_u" (func 28))
  (export "i8x16.max_s-i8x16.max_s" (func 29))
  (export "i8x16.max_s-i8x16.min_u" (func 30))
  (export "i8x16.max_s-i8x16.min_s" (func 31))
  (export "i8x16.max_s-i8x16.abs" (func 32))
  (export "i8x16.abs-i8x16.max_s" (func 33))
  (export "i8x16.max_s-i8x16.popcnt" (func 34))
  (export "i8x16.popcnt-i8x16.max_s" (func 35))
  (export "i8x16.max_u-i8x16.avgr_u" (func 36))
  (export "i8x16.max_u-i8x16.max_u" (func 37))
  (export "i8x16.max_u-i8x16.max_s" (func 38))
  (export "i8x16.max_u-i8x16.min_u" (func 39))
  (export "i8x16.max_u-i8x16.min_s" (func 40))
  (export "i8x16.max_u-i8x16.abs" (func 41))
  (export "i8x16.abs-i8x16.max_u" (func 42))
  (export "i8x16.max_u-i8x16.popcnt" (func 43))
  (export "i8x16.popcnt-i8x16.max_u" (func 44))
  (export "i8x16.avgr_u-i8x16.avgr_u" (func 45))
  (export "i8x16.avgr_u-i8x16.max_u" (func 46))
  (export "i8x16.avgr_u-i8x16.max_s" (func 47))
  (export "i8x16.avgr_u-i8x16.min_u" (func 48))
  (export "i8x16.avgr_u-i8x16.min_s" (func 49))
  (export "i8x16.avgr_u-i8x16.abs" (func 50))
  (export "i8x16.abs-i8x16.avgr_u" (func 51))
  (export "i8x16.avgr_u-i8x16.popcnt" (func 52))
  (export "i8x16.popcnt-i8x16.avgr_u" (func 53))
  (export "i8x16.abs-i8x16.popcnt" (func 54))
  (export "i8x16.abs-i8x16.abs" (func 55))
  (export "i8x16.popcnt-i8x16.popcnt" (func 56))
  (export "i8x16.popcnt-i8x16.abs" (func 57))
  (func (;9;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.avgr_u
      local.get 2
      i8x16.min_s
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;10;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.max_u
      local.get 2
      i8x16.min_s
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;11;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.max_s
      local.get 2
      i8x16.min_s
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;12;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.min_u
      local.get 2
      i8x16.min_s
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;13;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.min_s
      local.get 2
      i8x16.min_s
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;14;) (type 1) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 4
      call 0
      local.get 0
      i8x16.abs
      local.get 1
      i8x16.min_s
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;15;) (type 1) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 4
      call 0
      local.get 0
      local.get 1
      i8x16.min_s
      i8x16.abs
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;16;) (type 1) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 4
      call 0
      local.get 0
      i8x16.popcnt
      local.get 1
      i8x16.min_s
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;17;) (type 1) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 4
      call 0
      local.get 0
      local.get 1
      i8x16.min_s
      i8x16.popcnt
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;18;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.avgr_u
      local.get 2
      i8x16.min_u
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;19;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.max_u
      local.get 2
      i8x16.min_u
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;20;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.max_s
      local.get 2
      i8x16.min_u
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;21;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.min_u
      local.get 2
      i8x16.min_u
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;22;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.min_s
      local.get 2
      i8x16.min_u
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;23;) (type 1) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 4
      call 0
      local.get 0
      i8x16.abs
      local.get 1
      i8x16.min_u
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;24;) (type 1) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 4
      call 0
      local.get 0
      local.get 1
      i8x16.min_u
      i8x16.abs
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;25;) (type 1) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 4
      call 0
      local.get 0
      i8x16.popcnt
      local.get 1
      i8x16.min_u
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;26;) (type 1) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 4
      call 0
      local.get 0
      local.get 1
      i8x16.min_u
      i8x16.popcnt
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;27;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.avgr_u
      local.get 2
      i8x16.max_s
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;28;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.max_u
      local.get 2
      i8x16.max_s
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;29;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.max_s
      local.get 2
      i8x16.max_s
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;30;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.min_u
      local.get 2
      i8x16.max_s
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;31;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.min_s
      local.get 2
      i8x16.max_s
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;32;) (type 1) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 4
      call 0
      local.get 0
      i8x16.abs
      local.get 1
      i8x16.max_s
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;33;) (type 1) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 4
      call 0
      local.get 0
      local.get 1
      i8x16.max_s
      i8x16.abs
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;34;) (type 1) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 4
      call 0
      local.get 0
      i8x16.popcnt
      local.get 1
      i8x16.max_s
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;35;) (type 1) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 4
      call 0
      local.get 0
      local.get 1
      i8x16.max_s
      i8x16.popcnt
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;36;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.avgr_u
      local.get 2
      i8x16.max_u
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;37;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.max_u
      local.get 2
      i8x16.max_u
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;38;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.max_s
      local.get 2
      i8x16.max_u
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;39;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.min_u
      local.get 2
      i8x16.max_u
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;40;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.min_s
      local.get 2
      i8x16.max_u
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;41;) (type 1) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 4
      call 0
      local.get 0
      i8x16.abs
      local.get 1
      i8x16.max_u
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;42;) (type 1) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 4
      call 0
      local.get 0
      local.get 1
      i8x16.max_u
      i8x16.abs
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;43;) (type 1) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 4
      call 0
      local.get 0
      i8x16.popcnt
      local.get 1
      i8x16.max_u
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;44;) (type 1) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 4
      call 0
      local.get 0
      local.get 1
      i8x16.max_u
      i8x16.popcnt
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;45;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.avgr_u
      local.get 2
      i8x16.avgr_u
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;46;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.max_u
      local.get 2
      i8x16.avgr_u
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;47;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.max_s
      local.get 2
      i8x16.avgr_u
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;48;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.min_u
      local.get 2
      i8x16.avgr_u
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;49;) (type 0) (param v128 v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 3
      call 7
      i64.const 5
      call 0
      local.get 0
      local.get 1
      i8x16.min_s
      local.get 2
      i8x16.avgr_u
    end
    i64.const 32
    i64.const 3
    call 8
  )
  (func (;50;) (type 1) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 4
      call 0
      local.get 0
      i8x16.abs
      local.get 1
      i8x16.avgr_u
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;51;) (type 1) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 4
      call 0
      local.get 0
      local.get 1
      i8x16.avgr_u
      i8x16.abs
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;52;) (type 1) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 4
      call 0
      local.get 0
      i8x16.popcnt
      local.get 1
      i8x16.avgr_u
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;53;) (type 1) (param v128 v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 2
      call 7
      i64.const 4
      call 0
      local.get 0
      local.get 1
      i8x16.avgr_u
      i8x16.popcnt
    end
    i64.const 32
    i64.const 2
    call 8
  )
  (func (;54;) (type 2) (param v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 16
      i64.const 1
      call 7
      i64.const 3
      call 0
      local.get 0
      i8x16.popcnt
      i8x16.abs
    end
    i64.const 16
    i64.const 1
    call 8
  )
  (func (;55;) (type 2) (param v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 16
      i64.const 1
      call 7
      i64.const 3
      call 0
      local.get 0
      i8x16.abs
      i8x16.abs
    end
    i64.const 16
    i64.const 1
    call 8
  )
  (func (;56;) (type 2) (param v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 16
      i64.const 1
      call 7
      i64.const 3
      call 0
      local.get 0
      i8x16.popcnt
      i8x16.popcnt
    end
    i64.const 16
    i64.const 1
    call 8
  )
  (func (;57;) (type 2) (param v128) (result v128)
    block (result v128) ;; label = @1
      i64.const 16
      i64.const 1
      call 7
      i64.const 3
      call 0
      local.get 0
      i8x16.abs
      i8x16.popcnt
    end
    i64.const 16
    i64.const 1
    call 8
  )
)

(assert_return (invoke "i8x16.min_s-i8x16.avgr_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                  (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                  (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                  (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.min_s-i8x16.max_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                 (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                 (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.min_s-i8x16.max_s" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                 (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                 (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.min_s-i8x16.min_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                 (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                 (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.min_s-i8x16.min_s" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                 (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                 (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.min_s-i8x16.abs" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1)
                                               (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
                                               (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.abs-i8x16.min_s" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                               (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
                                               (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.min_s-i8x16.popcnt" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1)
                                                  (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
                                                  (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.popcnt-i8x16.min_s" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                  (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
                                                  (v128.const i8x16 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8))
(assert_return (invoke "i8x16.min_u-i8x16.avgr_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                  (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                  (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                  (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.min_u-i8x16.max_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                 (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                 (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.min_u-i8x16.max_s" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                 (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                 (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.min_u-i8x16.min_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                 (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                 (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.min_u-i8x16.min_s" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                 (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                 (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.min_u-i8x16.abs" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1)
                                               (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
                                               (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.abs-i8x16.min_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                               (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
                                               (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.min_u-i8x16.popcnt" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1)
                                                  (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
                                                  (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.popcnt-i8x16.min_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                  (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
                                                  (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.max_s-i8x16.avgr_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                  (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                  (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                  (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
(assert_return (invoke "i8x16.max_s-i8x16.max_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                 (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
(assert_return (invoke "i8x16.max_s-i8x16.max_s" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                 (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
(assert_return (invoke "i8x16.max_s-i8x16.min_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                 (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
(assert_return (invoke "i8x16.max_s-i8x16.min_s" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                 (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
(assert_return (invoke "i8x16.max_s-i8x16.abs" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1)
                                               (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
                                               (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.abs-i8x16.max_s" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                               (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
                                               (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.max_s-i8x16.popcnt" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1)
                                                  (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
                                                  (v128.const i8x16 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8))
(assert_return (invoke "i8x16.popcnt-i8x16.max_s" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                  (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
                                                  (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(assert_return (invoke "i8x16.max_u-i8x16.avgr_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                  (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                  (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                  (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
(assert_return (invoke "i8x16.max_u-i8x16.max_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                 (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
(assert_return (invoke "i8x16.max_u-i8x16.max_s" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                 (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
(assert_return (invoke "i8x16.max_u-i8x16.min_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                 (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
(assert_return (invoke "i8x16.max_u-i8x16.min_s" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                 (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                 (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
(assert_return (invoke "i8x16.max_u-i8x16.abs" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1)
                                               (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
                                               (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.abs-i8x16.max_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                               (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
                                               (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.max_u-i8x16.popcnt" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1)
                                                  (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
                                                  (v128.const i8x16 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8))
(assert_return (invoke "i8x16.popcnt-i8x16.max_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                  (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
                                                  (v128.const i8x16 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8))
(assert_return (invoke "i8x16.avgr_u-i8x16.avgr_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                   (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                   (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                   (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
(assert_return (invoke "i8x16.avgr_u-i8x16.max_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                  (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                  (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                  (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
(assert_return (invoke "i8x16.avgr_u-i8x16.max_s" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                  (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                  (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                  (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
(assert_return (invoke "i8x16.avgr_u-i8x16.min_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                  (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                  (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                  (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.avgr_u-i8x16.min_s" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                  (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
                                                  (v128.const i8x16 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2))
                                                  (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.avgr_u-i8x16.abs" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1)
                                                (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
                                                (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.abs-i8x16.avgr_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
                                                (v128.const i8x16 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128 128))
(assert_return (invoke "i8x16.avgr_u-i8x16.popcnt" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1)
                                                   (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
                                                   (v128.const i8x16 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4))
(assert_return (invoke "i8x16.popcnt-i8x16.avgr_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
                                                   (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
                                                   (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.abs-i8x16.popcnt" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
                                                (v128.const i8x16 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8))
(assert_return (invoke "i8x16.abs-i8x16.abs" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
                                             (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.popcnt-i8x16.popcnt" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
                                                   (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(assert_return (invoke "i8x16.popcnt-i8x16.abs" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
                                                (v128.const i8x16 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
