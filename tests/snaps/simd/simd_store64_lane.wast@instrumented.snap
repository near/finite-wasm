(module
  (type (;0;) (func (param i32 v128) (result i64)))
  (type (;1;) (func (param v128) (result i64)))
  (type (;2;) (func (param i64)))
  (type (;3;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 2)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 3)))
  (func (;2;) (type 0) (param $address i32) (param $x v128) (result i64)
    (local $ret i64)
    i64.const 20
    i64.const 2
    call 1
    i64.const 3
    call 0
    local.get $address
    local.get $x
    v128.store64_lane 0
    i64.const 2
    call 0
    local.get $address
    i64.load
    i64.const 4
    call 0
    local.set $ret
    local.get $address
    global.get $zero
    v128.store
    i64.const 2
    call 0
    local.get $ret
  )
  (func (;3;) (type 0) (param $address i32) (param $x v128) (result i64)
    (local $ret i64)
    i64.const 20
    i64.const 2
    call 1
    i64.const 3
    call 0
    local.get $address
    local.get $x
    v128.store64_lane 1
    i64.const 2
    call 0
    local.get $address
    i64.load
    i64.const 4
    call 0
    local.set $ret
    local.get $address
    global.get $zero
    v128.store
    i64.const 2
    call 0
    local.get $ret
  )
  (func (;4;) (type 1) (param $x v128) (result i64)
    (local $ret i64)
    i64.const 20
    i64.const 1
    call 1
    i64.const 3
    call 0
    i32.const 0
    local.get $x
    v128.store64_lane 0
    i64.const 2
    call 0
    i32.const 0
    i64.load
    i64.const 4
    call 0
    local.set $ret
    i32.const 0
    global.get $zero
    v128.store
    i64.const 2
    call 0
    local.get $ret
  )
  (func (;5;) (type 1) (param $x v128) (result i64)
    (local $ret i64)
    i64.const 20
    i64.const 1
    call 1
    i64.const 3
    call 0
    i32.const 0
    local.get $x
    v128.store64_lane offset=1 1
    i64.const 2
    call 0
    i32.const 0
    i64.load offset=1
    i64.const 4
    call 0
    local.set $ret
    i32.const 0
    global.get $zero
    v128.store offset=1
    i64.const 2
    call 0
    local.get $ret
  )
  (func (;6;) (type 0) (param $address i32) (param $x v128) (result i64)
    (local $ret i64)
    i64.const 20
    i64.const 2
    call 1
    i64.const 3
    call 0
    local.get $address
    local.get $x
    v128.store64_lane align=1 0
    i64.const 2
    call 0
    local.get $address
    i64.load
    i64.const 4
    call 0
    local.set $ret
    i32.const 0
    global.get $zero
    v128.store
    i64.const 2
    call 0
    local.get $ret
  )
  (func (;7;) (type 0) (param $address i32) (param $x v128) (result i64)
    (local $ret i64)
    i64.const 20
    i64.const 2
    call 1
    i64.const 3
    call 0
    local.get $address
    local.get $x
    v128.store64_lane align=2 0
    i64.const 2
    call 0
    local.get $address
    i64.load
    i64.const 4
    call 0
    local.set $ret
    i32.const 0
    global.get $zero
    v128.store
    i64.const 2
    call 0
    local.get $ret
  )
  (func (;8;) (type 0) (param $address i32) (param $x v128) (result i64)
    (local $ret i64)
    i64.const 20
    i64.const 2
    call 1
    i64.const 3
    call 0
    local.get $address
    local.get $x
    v128.store64_lane align=4 0
    i64.const 2
    call 0
    local.get $address
    i64.load
    i64.const 4
    call 0
    local.set $ret
    i32.const 0
    global.get $zero
    v128.store
    i64.const 2
    call 0
    local.get $ret
  )
  (func (;9;) (type 0) (param $address i32) (param $x v128) (result i64)
    (local $ret i64)
    i64.const 20
    i64.const 2
    call 1
    i64.const 3
    call 0
    local.get $address
    local.get $x
    v128.store64_lane 0
    i64.const 2
    call 0
    local.get $address
    i64.load
    i64.const 4
    call 0
    local.set $ret
    i32.const 0
    global.get $zero
    v128.store
    i64.const 2
    call 0
    local.get $ret
  )
  (func (;10;) (type 0) (param $address i32) (param $x v128) (result i64)
    (local $ret i64)
    i64.const 20
    i64.const 2
    call 1
    i64.const 3
    call 0
    local.get $address
    local.get $x
    v128.store64_lane align=1 1
    i64.const 2
    call 0
    local.get $address
    i64.load
    i64.const 4
    call 0
    local.set $ret
    i32.const 0
    global.get $zero
    v128.store offset=1
    i64.const 2
    call 0
    local.get $ret
  )
  (func (;11;) (type 0) (param $address i32) (param $x v128) (result i64)
    (local $ret i64)
    i64.const 20
    i64.const 2
    call 1
    i64.const 3
    call 0
    local.get $address
    local.get $x
    v128.store64_lane align=2 1
    i64.const 2
    call 0
    local.get $address
    i64.load
    i64.const 4
    call 0
    local.set $ret
    i32.const 0
    global.get $zero
    v128.store offset=1
    i64.const 2
    call 0
    local.get $ret
  )
  (func (;12;) (type 0) (param $address i32) (param $x v128) (result i64)
    (local $ret i64)
    i64.const 20
    i64.const 2
    call 1
    i64.const 3
    call 0
    local.get $address
    local.get $x
    v128.store64_lane align=4 1
    i64.const 2
    call 0
    local.get $address
    i64.load
    i64.const 4
    call 0
    local.set $ret
    i32.const 0
    global.get $zero
    v128.store offset=1
    i64.const 2
    call 0
    local.get $ret
  )
  (func (;13;) (type 0) (param $address i32) (param $x v128) (result i64)
    (local $ret i64)
    i64.const 20
    i64.const 2
    call 1
    i64.const 3
    call 0
    local.get $address
    local.get $x
    v128.store64_lane 1
    i64.const 2
    call 0
    local.get $address
    i64.load
    i64.const 4
    call 0
    local.set $ret
    i32.const 0
    global.get $zero
    v128.store offset=1
    i64.const 2
    call 0
    local.get $ret
  )
  (memory (;0;) 1)
  (global $zero (;0;) (mut v128) v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)
  (export "v128.store64_lane_0" (func 2))
  (export "v128.store64_lane_1" (func 3))
  (export "v128.store64_lane_0_offset_0" (func 4))
  (export "v128.store64_lane_1_offset_1" (func 5))
  (export "v128.store64_lane_0_align_1" (func 6))
  (export "v128.store64_lane_0_align_2" (func 7))
  (export "v128.store64_lane_0_align_4" (func 8))
  (export "v128.store64_lane_0_align_8" (func 9))
  (export "v128.store64_lane_1_align_1" (func 10))
  (export "v128.store64_lane_1_align_2" (func 11))
  (export "v128.store64_lane_1_align_4" (func 12))
  (export "v128.store64_lane_1_align_8" (func 13))
)
(assert_return (invoke "v128.store64_lane_0" (i32.const 0)
                                             (v128.const i64x2 506097522914230528 0))
                                             (i64.const 506097522914230528))
(assert_return (invoke "v128.store64_lane_1" (i32.const 1)
                                             (v128.const i64x2 0 578437695752307201))
                                             (i64.const 578437695752307201))
(assert_return (invoke "v128.store64_lane_0_offset_0" (v128.const i64x2 506097522914230528 0))
                                                      (i64.const 506097522914230528))
(assert_return (invoke "v128.store64_lane_1_offset_1" (v128.const i64x2 0 578437695752307201))
                                                      (i64.const 578437695752307201))
(assert_return (invoke "v128.store64_lane_0_align_1" (i32.const 0)
                                                     (v128.const i64x2 506097522914230528 0))
                                                     (i64.const 506097522914230528))
(assert_return (invoke "v128.store64_lane_0_align_2" (i32.const 0)
                                                     (v128.const i64x2 506097522914230528 0))
                                                     (i64.const 506097522914230528))
(assert_return (invoke "v128.store64_lane_0_align_4" (i32.const 0)
                                                     (v128.const i64x2 506097522914230528 0))
                                                     (i64.const 506097522914230528))
(assert_return (invoke "v128.store64_lane_0_align_8" (i32.const 0)
                                                     (v128.const i64x2 506097522914230528 0))
                                                     (i64.const 506097522914230528))
(assert_return (invoke "v128.store64_lane_1_align_1" (i32.const 1)
                                                     (v128.const i64x2 0 578437695752307201))
                                                     (i64.const 578437695752307201))
(assert_return (invoke "v128.store64_lane_1_align_2" (i32.const 1)
                                                     (v128.const i64x2 0 578437695752307201))
                                                     (i64.const 578437695752307201))
(assert_return (invoke "v128.store64_lane_1_align_4" (i32.const 1)
                                                     (v128.const i64x2 0 578437695752307201))
                                                     (i64.const 578437695752307201))
(assert_return (invoke "v128.store64_lane_1_align_8" (i32.const 1)
                                                     (v128.const i64x2 0 578437695752307201))
                                                     (i64.const 578437695752307201))

;; type check
