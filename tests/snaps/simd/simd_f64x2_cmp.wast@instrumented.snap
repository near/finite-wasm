(module
  (type (;0;) (func (param v128 v128) (result v128)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (func (;2;) (type 0) (param v128 v128) (result v128)
    i64.const 32
    i64.const 1
    call 1
    i64.const 4
    call 0
    local.get 0
    local.get 1
    f64x2.eq
  )
  (func (;3;) (type 0) (param v128 v128) (result v128)
    i64.const 32
    i64.const 1
    call 1
    i64.const 4
    call 0
    local.get 0
    local.get 1
    f64x2.ne
  )
  (func (;4;) (type 0) (param v128 v128) (result v128)
    i64.const 32
    i64.const 1
    call 1
    i64.const 4
    call 0
    local.get 0
    local.get 1
    f64x2.lt
  )
  (func (;5;) (type 0) (param v128 v128) (result v128)
    i64.const 32
    i64.const 1
    call 1
    i64.const 4
    call 0
    local.get 0
    local.get 1
    f64x2.le
  )
  (func (;6;) (type 0) (param v128 v128) (result v128)
    i64.const 32
    i64.const 1
    call 1
    i64.const 4
    call 0
    local.get 0
    local.get 1
    f64x2.gt
  )
  (func (;7;) (type 0) (param v128 v128) (result v128)
    i64.const 32
    i64.const 1
    call 1
    i64.const 4
    call 0
    local.get 0
    local.get 1
    f64x2.ge
  )
  (export "f64x2.eq" (func 2))
  (export "f64x2.ne" (func 3))
  (export "f64x2.lt" (func 4))
  (export "f64x2.le" (func 5))
  (export "f64x2.gt" (func 6))
  (export "f64x2.ge" (func 7))
)
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -inf -inf)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p+0 0x1p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1 0x1p-1)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x0p+0 0x0p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 inf inf)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 0123456789.e038 0123456789.e038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789)
                                  (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan nan)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan -nan)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1074 0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -inf -inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p+0 0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x0p+0 -0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1 -0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1 0x1p-1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x0p+0 0x0p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 inf inf))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -0x1p+0 -0x1p+0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 0x1p-1022 0x1p-1022))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 nan nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -nan -nan))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                  (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0 0)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0 0)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0 0)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 0 0)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 1 1)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 1 1)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 1 1)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 1 1)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.eq" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0 0)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0 0)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0 0)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 0 0)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 1 1)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 1 1)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 1 1)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 1 1)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ne" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0 0)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0 0)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0 0)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 0 0)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 1 1)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 1 1)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 1 1)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 1 1)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.lt" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0 0)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0 0)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0 0)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 0 0)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 1 1)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 1 1)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 1 1)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 1 1)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.le" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.le" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0 0)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0 0)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0 0)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 0 0)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 1 1)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 1 1)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 1 1)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 1 1)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.gt" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 -1 -1)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0 0)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0 0)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0 0)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 0 0)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 1 1)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 1 1)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 1 1)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 1 1)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 0 0))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 -1 -1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 0 0))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 1 1))
                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "f64x2.ge" (v128.const f64x2 2.0 2.0)
                                  (v128.const f64x2 2.0 2.0))
                                  (v128.const i64x2 -1 -1))


;; unknown operators
(module
  (type (;0;) (func))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (func (;2;) (type 0)
    i64.const 32
    i64.const 0
    call 1
    i64.const 5
    call 0
    block ;; label = @1
      block (result v128) ;; label = @2
        block (result v128) ;; label = @3
          i32.const 0
          v128.load
          i64.const 4
          call 0
        end
        block (result v128) ;; label = @3
          i32.const 1
          v128.load
          i64.const 6
          call 0
        end
        f64x2.eq
      end
      drop
    end
  )
  (func (;3;) (type 0)
    i64.const 32
    i64.const 0
    call 1
    i64.const 5
    call 0
    block ;; label = @1
      block (result v128) ;; label = @2
        block (result v128) ;; label = @3
          i32.const 0
          v128.load
          i64.const 4
          call 0
        end
        block (result v128) ;; label = @3
          i32.const 1
          v128.load
          i64.const 6
          call 0
        end
        f64x2.ne
      end
      drop
    end
  )
  (func (;4;) (type 0)
    i64.const 32
    i64.const 0
    call 1
    i64.const 5
    call 0
    block ;; label = @1
      block (result v128) ;; label = @2
        block (result v128) ;; label = @3
          i32.const 0
          v128.load
          i64.const 4
          call 0
        end
        block (result v128) ;; label = @3
          i32.const 1
          v128.load
          i64.const 6
          call 0
        end
        f64x2.lt
      end
      drop
    end
  )
  (func (;5;) (type 0)
    i64.const 32
    i64.const 0
    call 1
    i64.const 5
    call 0
    block ;; label = @1
      block (result v128) ;; label = @2
        block (result v128) ;; label = @3
          i32.const 0
          v128.load
          i64.const 4
          call 0
        end
        block (result v128) ;; label = @3
          i32.const 1
          v128.load
          i64.const 6
          call 0
        end
        f64x2.le
      end
      drop
    end
  )
  (func (;6;) (type 0)
    i64.const 32
    i64.const 0
    call 1
    i64.const 5
    call 0
    block ;; label = @1
      block (result v128) ;; label = @2
        block (result v128) ;; label = @3
          i32.const 0
          v128.load
          i64.const 4
          call 0
        end
        block (result v128) ;; label = @3
          i32.const 1
          v128.load
          i64.const 6
          call 0
        end
        f64x2.gt
      end
      drop
    end
  )
  (func (;7;) (type 0)
    i64.const 32
    i64.const 0
    call 1
    i64.const 5
    call 0
    block ;; label = @1
      block (result v128) ;; label = @2
        block (result v128) ;; label = @3
          i32.const 0
          v128.load
          i64.const 4
          call 0
        end
        block (result v128) ;; label = @3
          i32.const 1
          v128.load
          i64.const 6
          call 0
        end
        f64x2.ge
      end
      drop
    end
  )
  (func (;8;) (type 0)
    i64.const 64
    i64.const 0
    call 1
    i64.const 2
    call 0
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f64x2.eq
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 4
    call 0
    f64x2.eq
    f64x2.eq
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f64x2.eq
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 5
    call 0
    f64x2.eq
    f64x2.eq
    f64x2.eq
    drop
  )
  (func (;9;) (type 0)
    i64.const 64
    i64.const 0
    call 1
    i64.const 2
    call 0
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f64x2.ne
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 4
    call 0
    f64x2.ne
    f64x2.ne
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f64x2.ne
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 5
    call 0
    f64x2.ne
    f64x2.ne
    f64x2.ne
    drop
  )
  (func (;10;) (type 0)
    i64.const 64
    i64.const 0
    call 1
    i64.const 2
    call 0
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f64x2.lt
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 4
    call 0
    f64x2.lt
    f64x2.lt
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f64x2.lt
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 5
    call 0
    f64x2.lt
    f64x2.lt
    f64x2.lt
    drop
  )
  (func (;11;) (type 0)
    i64.const 64
    i64.const 0
    call 1
    i64.const 2
    call 0
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f64x2.le
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 4
    call 0
    f64x2.le
    f64x2.le
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f64x2.le
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 5
    call 0
    f64x2.le
    f64x2.le
    f64x2.le
    drop
  )
  (func (;12;) (type 0)
    i64.const 64
    i64.const 0
    call 1
    i64.const 2
    call 0
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f64x2.gt
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 4
    call 0
    f64x2.gt
    f64x2.gt
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f64x2.gt
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 5
    call 0
    f64x2.gt
    f64x2.gt
    f64x2.gt
    drop
  )
  (func (;13;) (type 0)
    i64.const 64
    i64.const 0
    call 1
    i64.const 2
    call 0
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f64x2.ge
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 4
    call 0
    f64x2.ge
    f64x2.ge
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f64x2.ge
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 5
    call 0
    f64x2.ge
    f64x2.ge
    f64x2.ge
    drop
  )
  (func (;14;) (type 0)
    i64.const 64
    i64.const 0
    call 1
    i64.const 2
    call 0
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f64x2.lt
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 4
    call 0
    f64x2.le
    f64x2.ne
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f64x2.ge
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 5
    call 0
    f64x2.eq
    f64x2.gt
    f64x2.eq
    drop
  )
  (memory (;0;) 1)
  (export "f64x2.eq-in-block" (func 2))
  (export "f64x2.ne-in-block" (func 3))
  (export "f64x2.lt-in-block" (func 4))
  (export "f64x2.le-in-block" (func 5))
  (export "f64x2.gt-in-block" (func 6))
  (export "f64x2.ge-in-block" (func 7))
  (export "nested-f64x2.eq" (func 8))
  (export "nested-f64x2.ne" (func 9))
  (export "nested-f64x2.lt" (func 10))
  (export "nested-f64x2.le" (func 11))
  (export "nested-f64x2.gt" (func 12))
  (export "nested-f64x2.ge" (func 13))
  (export "as-param" (func 14))
)
(assert_return (invoke "f64x2.eq-in-block"))
(assert_return (invoke "f64x2.ne-in-block"))
(assert_return (invoke "f64x2.lt-in-block"))
(assert_return (invoke "f64x2.le-in-block"))
(assert_return (invoke "f64x2.gt-in-block"))
(assert_return (invoke "f64x2.ge-in-block"))
(assert_return (invoke "nested-f64x2.eq"))
(assert_return (invoke "nested-f64x2.ne"))
(assert_return (invoke "nested-f64x2.lt"))
(assert_return (invoke "nested-f64x2.le"))
(assert_return (invoke "nested-f64x2.gt"))
(assert_return (invoke "nested-f64x2.ge"))
(assert_return (invoke "as-param"))
