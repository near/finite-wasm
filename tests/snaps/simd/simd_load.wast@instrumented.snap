(module
  (type (;0;) (func (result v128)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (type (;3;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 3)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 3)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 3)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 3)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 3)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 2)))
  (memory (;0;) 1)
  (export "v128.load" (func 9))
  (func (;9;) (type 0) (result v128)
    block (result v128) ;; label = @1
      i64.const 16
      i64.const 0
      call 7
      i64.const 2
      call 0
      i32.const 0
      v128.load
    end
    i64.const 16
    i64.const 0
    call 8
  )
  (data (;0;) (i32.const 0) "\00\01\02\03\04\05\06\07\08\09\0a\0b\0c\0d\0e\0f\00\01\02\03")
)

(assert_return (invoke "v128.load") (v128.const i8x16 0x00 0x01 0x02 0x03 0x04 0x05 0x06 0x07 0x08 0x09 0x0a 0x0b 0x0c 0x0d 0x0e 0x0f))
(assert_return (invoke "v128.load") (v128.const i16x8 0x0100 0x0302 0x0504 0x0706 0x0908 0x0b0a 0x0d0c 0x0f0e))
(assert_return (invoke "v128.load") (v128.const i32x4 0x03020100 0x07060504 0x0b0a0908 0x0f0e0d0c))


;; v128.load operater as the argument of other SIMD instructions

(module
  (type (;0;) (func (result i32)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (type (;3;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 3)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 3)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 3)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 3)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 3)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 2)))
  (memory (;0;) 1)
  (export "as-i8x16_extract_lane_s-value/0" (func 9))
  (func (;9;) (type 0) (result i32)
    block (result i32) ;; label = @1
      i64.const 16
      i64.const 0
      call 7
      i64.const 2
      call 0
      i32.const 0
      v128.load
      i64.const 1
      call 0
      i8x16.extract_lane_s 0
    end
    i64.const 16
    i64.const 0
    call 8
  )
  (data (;0;) (i32.const 0) "\00\01\02\03\04\05\06\07\08\09\0a\0b\0c\0d\0e\0f\00\01\02\03")
)

(assert_return (invoke "as-i8x16_extract_lane_s-value/0") (i32.const 0x00))

(module
  (type (;0;) (func (result v128)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (type (;3;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 3)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 3)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 3)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 3)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 3)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 2)))
  (memory (;0;) 1)
  (export "as-i8x16.eq-operand" (func 9))
  (func (;9;) (type 0) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 0
      call 7
      i64.const 2
      call 0
      i32.const 0
      v128.load
      i64.const 2
      call 0
      i32.const 0
      v128.load offset=16
      i64.const 1
      call 0
      i8x16.eq
    end
    i64.const 32
    i64.const 0
    call 8
  )
  (data (;0;) (i32.const 0) "\00\01\02\03\04\05\06\07\08\09\0a\0b\0c\0d\0e\0f\00\01\02\03")
)

(assert_return (invoke "as-i8x16.eq-operand") (v128.const i32x4 0xffffffff 0x00000000 0x00000000 0x00000000))

(module
  (type (;0;) (func (result v128)))
  (type (;1;) (func (result i32)))
  (type (;2;) (func (param i64)))
  (type (;3;) (func (param i64 i64)))
  (type (;4;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 2)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 4)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 4)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 4)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 4)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 4)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 4)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 3)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 3)))
  (memory (;0;) 1)
  (export "as-v128.not-operand" (func 9))
  (export "as-i8x16.all_true-operand" (func 10))
  (func (;9;) (type 0) (result v128)
    block (result v128) ;; label = @1
      i64.const 16
      i64.const 0
      call 7
      i64.const 2
      call 0
      i32.const 0
      v128.load
      i64.const 1
      call 0
      v128.not
    end
    i64.const 16
    i64.const 0
    call 8
  )
  (func (;10;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 16
      i64.const 0
      call 7
      i64.const 2
      call 0
      i32.const 0
      v128.load
      i64.const 1
      call 0
      i8x16.all_true
    end
    i64.const 16
    i64.const 0
    call 8
  )
  (data (;0;) (i32.const 0) "\00\01\02\03\04\05\06\07\08\09\0a\0b\0c\0d\0e\0f\00\01\02\03")
)

(assert_return (invoke "as-v128.not-operand") (v128.const i32x4 0xfcfdfeff 0xf8f9fafb 0xf4f5f6f7 0xf0f1f2f3))
(assert_return (invoke "as-i8x16.all_true-operand") (i32.const 0))

(module
  (type (;0;) (func (result v128)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (type (;3;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 3)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 3)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 3)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 3)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 3)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 2)))
  (memory (;0;) 1)
  (export "as-v128.bitselect-operand" (func 9))
  (func (;9;) (type 0) (result v128)
    block (result v128) ;; label = @1
      i64.const 48
      i64.const 0
      call 7
      i64.const 2
      call 0
      i32.const 0
      v128.load
      i64.const 2
      call 0
      i32.const 16
      v128.load
      i64.const 2
      call 0
      i32.const 32
      v128.load
      i64.const 1
      call 0
      v128.bitselect
    end
    i64.const 48
    i64.const 0
    call 8
  )
  (data (;0;) (i32.const 0) "\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa")
  (data (;1;) (i32.const 16) "\bb\bb\bb\bb\bb\bb\bb\bb\bb\bb\bb\bb\bb\bb\bb\bb")
  (data (;2;) (i32.const 32) "\f0\f0\f0\f0\ff\ff\ff\ff\00\00\00\00\ff\00\ff\00")
)

(assert_return (invoke "as-v128.bitselect-operand") (v128.const i32x4 0xabababab 0xaaaaaaaa 0xbbbbbbbb 0xbbaabbaa))

(module
  (type (;0;) (func (result v128)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (type (;3;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 3)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 3)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 3)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 3)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 3)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 2)))
  (memory (;0;) 1)
  (export "as-i8x16.shl-operand" (func 9))
  (func (;9;) (type 0) (result v128)
    block (result v128) ;; label = @1
      i64.const 20
      i64.const 0
      call 7
      i64.const 2
      call 0
      i32.const 0
      v128.load
      i64.const 2
      call 0
      i32.const 1
      i8x16.shl
    end
    i64.const 20
    i64.const 0
    call 8
  )
  (data (;0;) (i32.const 0) "\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa")
)

(assert_return (invoke "as-i8x16.shl-operand") (v128.const i32x4 0x54545454 0x54545454 0x54545454 0x54545454)) ;; 1010 1000 << 1010 1010

(module
  (type (;0;) (func (result v128)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (type (;3;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 3)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 3)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 3)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 3)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 3)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 2)))
  (memory (;0;) 1)
  (export "as-add/sub-operand" (func 9))
  (func (;9;) (type 0) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 0
      call 7
      i64.const 2
      call 0
      i32.const 0
      v128.load
      i64.const 2
      call 0
      i32.const 16
      v128.load
      i64.const 3
      call 0
      i8x16.add
      i32.const 16
      v128.load
      i64.const 1
      call 0
      i8x16.sub
    end
    i64.const 32
    i64.const 0
    call 8
  )
  (data (;0;) (i32.const 0) "\02\00\00\00\02\00\00\00\02\00\00\00\02\00\00\00")
  (data (;1;) (i32.const 16) "\03\00\00\00\03\00\00\00\03\00\00\00\03\00\00\00")
)

(assert_return (invoke "as-add/sub-operand") (v128.const i32x4 2 2 2 2))

(module
  (type (;0;) (func (result v128)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (type (;3;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 3)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 3)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 3)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 3)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 3)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 2)))
  (memory (;0;) 1)
  (export "as-f32x4.mul-operand" (func 9))
  (func (;9;) (type 0) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 0
      call 7
      i64.const 2
      call 0
      i32.const 0
      v128.load
      i64.const 2
      call 0
      i32.const 16
      v128.load
      i64.const 1
      call 0
      f32x4.mul
    end
    i64.const 32
    i64.const 0
    call 8
  )
  (data (;0;) (i32.const 0) "\00\00\00C\00\00\80?ff\e6?\00\00\80\bf")
  (data (;1;) (i32.const 16) "\00\00\00@\00\00\00@\00\00\00@\00\00\00@")
)

(assert_return (invoke "as-f32x4.mul-operand") (v128.const f32x4 256 2 3.6 -2))

(module
  (type (;0;) (func (result v128)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (type (;3;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 3)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 3)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 3)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 3)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 3)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 2)))
  (memory (;0;) 1)
  (export "as-f32x4.abs-operand" (func 9))
  (func (;9;) (type 0) (result v128)
    block (result v128) ;; label = @1
      i64.const 16
      i64.const 0
      call 7
      i64.const 2
      call 0
      i32.const 0
      v128.load
      i64.const 1
      call 0
      f32x4.abs
    end
    i64.const 16
    i64.const 0
    call 8
  )
  (data (;0;) (i32.const 0) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
)

(assert_return (invoke "as-f32x4.abs-operand") (v128.const i32x4 0x7fffffff 0x7fffffff 0x7fffffff 0x7fffffff)) ;; 1111 -> 0111

(module
  (type (;0;) (func (result v128)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (type (;3;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 3)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 3)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 3)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 3)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 3)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 2)))
  (memory (;0;) 1)
  (export "as-f32x4.min-operand" (func 9))
  (func (;9;) (type 0) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 0
      call 7
      i64.const 2
      call 0
      i32.const 0
      v128.load
      i64.const 2
      call 0
      i32.const 1
      v128.load offset=16
      i64.const 1
      call 0
      f32x4.min
    end
    i64.const 32
    i64.const 0
    call 8
  )
  (data (;0;) (i32.const 0) "\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa")
  (data (;1;) (i32.const 16) "\02\00\00\00\02\00\00\00\02\00\00\00\02\00\00\00")
)

(assert_return (invoke "as-f32x4.min-operand") (v128.const i32x4 0xaaaaaaaa 0xaaaaaaaa 0xaaaaaaaa 0xaaaaaaaa)) ;; signed 1010 < 0010

(module
  (type (;0;) (func (result v128)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (type (;3;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 3)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 3)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 3)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 3)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 3)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 2)))
  (memory (;0;) 1)
  (export "as-i32x4.trunc_sat_f32x4_s-operand" (func 9))
  (func (;9;) (type 0) (result v128)
    block (result v128) ;; label = @1
      i64.const 16
      i64.const 0
      call 7
      i64.const 2
      call 0
      i32.const 0
      v128.load
      i64.const 1
      call 0
      i32x4.trunc_sat_f32x4_s
    end
    i64.const 16
    i64.const 0
    call 8
  )
  (data (;0;) (i32.const 0) "\00\00\00C\00\00\80?ff\e6?\00\00\80\bf")
)

(assert_return (invoke "as-i32x4.trunc_sat_f32x4_s-operand") (v128.const i32x4 128 1 1 -1)) ;; 128 1.0 1.8 -1 -> 128 1 1 -1

(module
  (type (;0;) (func (result v128)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (type (;3;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 3)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 3)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 3)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 3)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 3)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 2)))
  (memory (;0;) 1)
  (export "as-f32x4.convert_i32x4_u-operand" (func 9))
  (func (;9;) (type 0) (result v128)
    block (result v128) ;; label = @1
      i64.const 16
      i64.const 0
      call 7
      i64.const 2
      call 0
      i32.const 0
      v128.load
      i64.const 1
      call 0
      f32x4.convert_i32x4_u
    end
    i64.const 16
    i64.const 0
    call 8
  )
  (data (;0;) (i32.const 0) "\02\00\00\00\02\00\00\00\02\00\00\00\02\00\00\00")
)

(assert_return (invoke "as-f32x4.convert_i32x4_u-operand") (v128.const f32x4 2 2 2 2))

(module
  (type (;0;) (func (result v128)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (type (;3;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 3)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 3)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 3)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 3)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 3)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 2)))
  (memory (;0;) 1)
  (export "as-i8x16.swizzle-operand" (func 9))
  (func (;9;) (type 0) (result v128)
    block (result v128) ;; label = @1
      i64.const 32
      i64.const 0
      call 7
      i64.const 2
      call 0
      i32.const 0
      v128.load
      i64.const 2
      call 0
      i32.const 1
      v128.load offset=15
      i64.const 1
      call 0
      i8x16.swizzle
    end
    i64.const 32
    i64.const 0
    call 8
  )
  (data (;0;) (i32.const 0) "defghijklmnopqrs")
  (data (;1;) (i32.const 16) "\0f\0e\0d\0c\0b\0a\09\08\07\06\05\04\03\02\01\00")
)

(assert_return(invoke "as-i8x16.swizzle-operand") (v128.const i8x16 115 114 113 112 111 110 109 108 107 106 105 104 103 102 101 100))

(module
  (type (;0;) (func (result v128)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (type (;3;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 3)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 3)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 3)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 3)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 3)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 2)))
  (memory (;0;) 1)
  (export "as-br-value" (func 9))
  (func (;9;) (type 0) (result v128)
    block (result v128) ;; label = @1
      i64.const 16
      i64.const 0
      call 7
      i64.const 3
      call 0
      block (result v128) ;; label = @2
        i32.const 0
        v128.load
        i64.const 1
        call 0
        br 0 (;@2;)
      end
    end
    i64.const 16
    i64.const 0
    call 8
  )
  (data (;0;) (i32.const 0) "\00\01\02\03\04\05\06\07\08\09\0a\0b\0c\0d\0e\0f\00\01\02\03")
)

(assert_return (invoke "as-br-value") (v128.const i32x4 0x03020100 0x07060504 0x0b0a0908 0x0f0e0d0c))


;; Unknown operator(e.g. v128.load8, v128.load16, v128.load32)

