(module
  (type (;0;) (func (param v128) (result v128)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (func (;2;) (type 0) (param v128) (result v128)
    i64.const 16
    i64.const 0
    call 1
    i64.const 3
    call 0
    local.get 0
    i16x8.extend_high_i8x16_s
  )
  (func (;3;) (type 0) (param v128) (result v128)
    i64.const 16
    i64.const 0
    call 1
    i64.const 3
    call 0
    local.get 0
    i16x8.extend_high_i8x16_u
  )
  (func (;4;) (type 0) (param v128) (result v128)
    i64.const 16
    i64.const 0
    call 1
    i64.const 3
    call 0
    local.get 0
    i16x8.extend_low_i8x16_s
  )
  (func (;5;) (type 0) (param v128) (result v128)
    i64.const 16
    i64.const 0
    call 1
    i64.const 3
    call 0
    local.get 0
    i16x8.extend_low_i8x16_u
  )
  (func (;6;) (type 0) (param v128) (result v128)
    i64.const 16
    i64.const 0
    call 1
    i64.const 3
    call 0
    local.get 0
    i32x4.extend_high_i16x8_s
  )
  (func (;7;) (type 0) (param v128) (result v128)
    i64.const 16
    i64.const 0
    call 1
    i64.const 3
    call 0
    local.get 0
    i32x4.extend_high_i16x8_u
  )
  (func (;8;) (type 0) (param v128) (result v128)
    i64.const 16
    i64.const 0
    call 1
    i64.const 3
    call 0
    local.get 0
    i32x4.extend_low_i16x8_s
  )
  (func (;9;) (type 0) (param v128) (result v128)
    i64.const 16
    i64.const 0
    call 1
    i64.const 3
    call 0
    local.get 0
    i32x4.extend_low_i16x8_u
  )
  (func (;10;) (type 0) (param v128) (result v128)
    i64.const 16
    i64.const 0
    call 1
    i64.const 3
    call 0
    local.get 0
    i64x2.extend_high_i32x4_s
  )
  (func (;11;) (type 0) (param v128) (result v128)
    i64.const 16
    i64.const 0
    call 1
    i64.const 3
    call 0
    local.get 0
    i64x2.extend_high_i32x4_u
  )
  (func (;12;) (type 0) (param v128) (result v128)
    i64.const 16
    i64.const 0
    call 1
    i64.const 3
    call 0
    local.get 0
    i64x2.extend_low_i32x4_s
  )
  (func (;13;) (type 0) (param v128) (result v128)
    i64.const 16
    i64.const 0
    call 1
    i64.const 3
    call 0
    local.get 0
    i64x2.extend_low_i32x4_u
  )
  (export "i16x8.extend_high_i8x16_s" (func 2))
  (export "i16x8.extend_high_i8x16_u" (func 3))
  (export "i16x8.extend_low_i8x16_s" (func 4))
  (export "i16x8.extend_low_i8x16_u" (func 5))
  (export "i32x4.extend_high_i16x8_s" (func 6))
  (export "i32x4.extend_high_i16x8_u" (func 7))
  (export "i32x4.extend_low_i16x8_s" (func 8))
  (export "i32x4.extend_low_i16x8_u" (func 9))
  (export "i64x2.extend_high_i32x4_s" (func 10))
  (export "i64x2.extend_high_i32x4_u" (func 11))
  (export "i64x2.extend_low_i32x4_s" (func 12))
  (export "i64x2.extend_low_i32x4_u" (func 13))
)
(assert_return (invoke "i16x8.extend_high_i8x16_s" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
                                                   (v128.const i16x8 0 0 0 0 0 0 0 0))
(assert_return (invoke "i16x8.extend_high_i8x16_s" (v128.const i8x16 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1))
                                                   (v128.const i16x8 1 1 1 1 1 1 1 1))
(assert_return (invoke "i16x8.extend_high_i8x16_s" (v128.const i8x16 0 0 0 0 0 0 0 0 -1 -1 -1 -1 -1 -1 -1 -1))
                                                   (v128.const i16x8 -1 -1 -1 -1 -1 -1 -1 -1))
(assert_return (invoke "i16x8.extend_high_i8x16_s" (v128.const i8x16 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0))
                                                   (v128.const i16x8 0 0 0 0 0 0 0 0))
(assert_return (invoke "i16x8.extend_high_i8x16_s" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0))
                                                   (v128.const i16x8 0 0 0 0 0 0 0 0))
(assert_return (invoke "i16x8.extend_high_i8x16_s" (v128.const i8x16 1 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 -1))
                                                   (v128.const i16x8 -1 -1 -1 -1 -1 -1 -1 -1))
(assert_return (invoke "i16x8.extend_high_i8x16_s" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 1 1 1 1))
                                                   (v128.const i16x8 1 1 1 1 1 1 1 1))
(assert_return (invoke "i16x8.extend_high_i8x16_s" (v128.const i8x16 126 126 126 126 126 126 126 126 127 127 127 127 127 127 127 127))
                                                   (v128.const i16x8 127 127 127 127 127 127 127 127))
(assert_return (invoke "i16x8.extend_high_i8x16_s" (v128.const i8x16 127 127 127 127 127 127 127 127 126 126 126 126 126 126 126 126))
                                                   (v128.const i16x8 126 126 126 126 126 126 126 126))
(assert_return (invoke "i16x8.extend_high_i8x16_s" (v128.const i8x16 127 127 127 127 127 127 127 127 127 127 127 127 127 127 127 127))
                                                   (v128.const i16x8 127 127 127 127 127 127 127 127))
(assert_return (invoke "i16x8.extend_high_i8x16_s" (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128))
                                                   (v128.const i16x8 -128 -128 -128 -128 -128 -128 -128 -128))
(assert_return (invoke "i16x8.extend_high_i8x16_s" (v128.const i8x16 127 127 127 127 127 127 127 127 -128 -128 -128 -128 -128 -128 -128 -128))
                                                   (v128.const i16x8 -128 -128 -128 -128 -128 -128 -128 -128))
(assert_return (invoke "i16x8.extend_high_i8x16_s" (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 127 127 127 127 127 127 127 127))
                                                   (v128.const i16x8 127 127 127 127 127 127 127 127))
(assert_return (invoke "i16x8.extend_high_i8x16_s" (v128.const i8x16 127 127 127 127 127 127 127 127 -1 -1 -1 -1 -1 -1 -1 -1))
                                                   (v128.const i16x8 -1 -1 -1 -1 -1 -1 -1 -1))
(assert_return (invoke "i16x8.extend_high_i8x16_s" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 127 127 127 127 127 127 127 127))
                                                   (v128.const i16x8 127 127 127 127 127 127 127 127))
(assert_return (invoke "i16x8.extend_high_i8x16_s" (v128.const i8x16 -127 -127 -127 -127 -127 -127 -127 -127 -128 -128 -128 -128 -128 -128 -128 -128))
                                                   (v128.const i16x8 -128 -128 -128 -128 -128 -128 -128 -128))
(assert_return (invoke "i16x8.extend_high_i8x16_s" (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -127 -127 -127 -127 -127 -127 -127 -127))
                                                   (v128.const i16x8 -127 -127 -127 -127 -127 -127 -127 -127))
(assert_return (invoke "i16x8.extend_high_i8x16_s" (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -1 -1 -1 -1 -1 -1 -1 -1))
                                                   (v128.const i16x8 -1 -1 -1 -1 -1 -1 -1 -1))
(assert_return (invoke "i16x8.extend_high_i8x16_s" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -128 -128 -128 -128 -128 -128 -128 -128))
                                                   (v128.const i16x8 -128 -128 -128 -128 -128 -128 -128 -128))

(assert_return (invoke "i16x8.extend_high_i8x16_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
                                                   (v128.const i16x8 0 0 0 0 0 0 0 0))
(assert_return (invoke "i16x8.extend_high_i8x16_u" (v128.const i8x16 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1))
                                                   (v128.const i16x8 1 1 1 1 1 1 1 1))
(assert_return (invoke "i16x8.extend_high_i8x16_u" (v128.const i8x16 0 0 0 0 0 0 0 0 -1 -1 -1 -1 -1 -1 -1 -1))
                                                   (v128.const i16x8 255 255 255 255 255 255 255 255))
(assert_return (invoke "i16x8.extend_high_i8x16_u" (v128.const i8x16 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0))
                                                   (v128.const i16x8 0 0 0 0 0 0 0 0))
(assert_return (invoke "i16x8.extend_high_i8x16_u" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0))
                                                   (v128.const i16x8 0 0 0 0 0 0 0 0))
(assert_return (invoke "i16x8.extend_high_i8x16_u" (v128.const i8x16 1 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 -1))
                                                   (v128.const i16x8 255 255 255 255 255 255 255 255))
(assert_return (invoke "i16x8.extend_high_i8x16_u" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 1 1 1 1))
                                                   (v128.const i16x8 1 1 1 1 1 1 1 1))
(assert_return (invoke "i16x8.extend_high_i8x16_u" (v128.const i8x16 126 126 126 126 126 126 126 126 127 127 127 127 127 127 127 127))
                                                   (v128.const i16x8 127 127 127 127 127 127 127 127))
(assert_return (invoke "i16x8.extend_high_i8x16_u" (v128.const i8x16 127 127 127 127 127 127 127 127 126 126 126 126 126 126 126 126))
                                                   (v128.const i16x8 126 126 126 126 126 126 126 126))
(assert_return (invoke "i16x8.extend_high_i8x16_u" (v128.const i8x16 127 127 127 127 127 127 127 127 127 127 127 127 127 127 127 127))
                                                   (v128.const i16x8 127 127 127 127 127 127 127 127))
(assert_return (invoke "i16x8.extend_high_i8x16_u" (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128))
                                                   (v128.const i16x8 128 128 128 128 128 128 128 128))
(assert_return (invoke "i16x8.extend_high_i8x16_u" (v128.const i8x16 127 127 127 127 127 127 127 127 -128 -128 -128 -128 -128 -128 -128 -128))
                                                   (v128.const i16x8 128 128 128 128 128 128 128 128))
(assert_return (invoke "i16x8.extend_high_i8x16_u" (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 127 127 127 127 127 127 127 127))
                                                   (v128.const i16x8 127 127 127 127 127 127 127 127))
(assert_return (invoke "i16x8.extend_high_i8x16_u" (v128.const i8x16 127 127 127 127 127 127 127 127 -1 -1 -1 -1 -1 -1 -1 -1))
                                                   (v128.const i16x8 255 255 255 255 255 255 255 255))
(assert_return (invoke "i16x8.extend_high_i8x16_u" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 127 127 127 127 127 127 127 127))
                                                   (v128.const i16x8 127 127 127 127 127 127 127 127))
(assert_return (invoke "i16x8.extend_high_i8x16_u" (v128.const i8x16 -127 -127 -127 -127 -127 -127 -127 -127 -128 -128 -128 -128 -128 -128 -128 -128))
                                                   (v128.const i16x8 128 128 128 128 128 128 128 128))
(assert_return (invoke "i16x8.extend_high_i8x16_u" (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -127 -127 -127 -127 -127 -127 -127 -127))
                                                   (v128.const i16x8 129 129 129 129 129 129 129 129))
(assert_return (invoke "i16x8.extend_high_i8x16_u" (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -1 -1 -1 -1 -1 -1 -1 -1))
                                                   (v128.const i16x8 255 255 255 255 255 255 255 255))
(assert_return (invoke "i16x8.extend_high_i8x16_u" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -128 -128 -128 -128 -128 -128 -128 -128))
                                                   (v128.const i16x8 128 128 128 128 128 128 128 128))

(assert_return (invoke "i16x8.extend_low_i8x16_s" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
                                                  (v128.const i16x8 0 0 0 0 0 0 0 0))
(assert_return (invoke "i16x8.extend_low_i8x16_s" (v128.const i8x16 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1))
                                                  (v128.const i16x8 0 0 0 0 0 0 0 0))
(assert_return (invoke "i16x8.extend_low_i8x16_s" (v128.const i8x16 0 0 0 0 0 0 0 0 -1 -1 -1 -1 -1 -1 -1 -1))
                                                  (v128.const i16x8 0 0 0 0 0 0 0 0))
(assert_return (invoke "i16x8.extend_low_i8x16_s" (v128.const i8x16 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0))
                                                  (v128.const i16x8 1 1 1 1 1 1 1 1))
(assert_return (invoke "i16x8.extend_low_i8x16_s" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0))
                                                  (v128.const i16x8 -1 -1 -1 -1 -1 -1 -1 -1))
(assert_return (invoke "i16x8.extend_low_i8x16_s" (v128.const i8x16 1 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 -1))
                                                  (v128.const i16x8 1 1 1 1 1 1 1 1))
(assert_return (invoke "i16x8.extend_low_i8x16_s" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 1 1 1 1))
                                                  (v128.const i16x8 -1 -1 -1 -1 -1 -1 -1 -1))
(assert_return (invoke "i16x8.extend_low_i8x16_s" (v128.const i8x16 126 126 126 126 126 126 126 126 127 127 127 127 127 127 127 127))
                                                  (v128.const i16x8 126 126 126 126 126 126 126 126))
(assert_return (invoke "i16x8.extend_low_i8x16_s" (v128.const i8x16 127 127 127 127 127 127 127 127 126 126 126 126 126 126 126 126))
                                                  (v128.const i16x8 127 127 127 127 127 127 127 127))
(assert_return (invoke "i16x8.extend_low_i8x16_s" (v128.const i8x16 127 127 127 127 127 127 127 127 127 127 127 127 127 127 127 127))
                                                  (v128.const i16x8 127 127 127 127 127 127 127 127))
(assert_return (invoke "i16x8.extend_low_i8x16_s" (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128))
                                                  (v128.const i16x8 -128 -128 -128 -128 -128 -128 -128 -128))
(assert_return (invoke "i16x8.extend_low_i8x16_s" (v128.const i8x16 127 127 127 127 127 127 127 127 -128 -128 -128 -128 -128 -128 -128 -128))
                                                  (v128.const i16x8 127 127 127 127 127 127 127 127))
(assert_return (invoke "i16x8.extend_low_i8x16_s" (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 127 127 127 127 127 127 127 127))
                                                  (v128.const i16x8 -128 -128 -128 -128 -128 -128 -128 -128))
(assert_return (invoke "i16x8.extend_low_i8x16_s" (v128.const i8x16 127 127 127 127 127 127 127 127 -1 -1 -1 -1 -1 -1 -1 -1))
                                                  (v128.const i16x8 127 127 127 127 127 127 127 127))
(assert_return (invoke "i16x8.extend_low_i8x16_s" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 127 127 127 127 127 127 127 127))
                                                  (v128.const i16x8 -1 -1 -1 -1 -1 -1 -1 -1))
(assert_return (invoke "i16x8.extend_low_i8x16_s" (v128.const i8x16 -127 -127 -127 -127 -127 -127 -127 -127 -128 -128 -128 -128 -128 -128 -128 -128))
                                                  (v128.const i16x8 -127 -127 -127 -127 -127 -127 -127 -127))
(assert_return (invoke "i16x8.extend_low_i8x16_s" (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -127 -127 -127 -127 -127 -127 -127 -127))
                                                  (v128.const i16x8 -128 -128 -128 -128 -128 -128 -128 -128))
(assert_return (invoke "i16x8.extend_low_i8x16_s" (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -1 -1 -1 -1 -1 -1 -1 -1))
                                                  (v128.const i16x8 -128 -128 -128 -128 -128 -128 -128 -128))
(assert_return (invoke "i16x8.extend_low_i8x16_s" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -128 -128 -128 -128 -128 -128 -128 -128))
                                                  (v128.const i16x8 -1 -1 -1 -1 -1 -1 -1 -1))

(assert_return (invoke "i16x8.extend_low_i8x16_u" (v128.const i8x16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
                                                  (v128.const i16x8 0 0 0 0 0 0 0 0))
(assert_return (invoke "i16x8.extend_low_i8x16_u" (v128.const i8x16 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1))
                                                  (v128.const i16x8 0 0 0 0 0 0 0 0))
(assert_return (invoke "i16x8.extend_low_i8x16_u" (v128.const i8x16 0 0 0 0 0 0 0 0 -1 -1 -1 -1 -1 -1 -1 -1))
                                                  (v128.const i16x8 0 0 0 0 0 0 0 0))
(assert_return (invoke "i16x8.extend_low_i8x16_u" (v128.const i8x16 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0))
                                                  (v128.const i16x8 1 1 1 1 1 1 1 1))
(assert_return (invoke "i16x8.extend_low_i8x16_u" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0))
                                                  (v128.const i16x8 255 255 255 255 255 255 255 255))
(assert_return (invoke "i16x8.extend_low_i8x16_u" (v128.const i8x16 1 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 -1))
                                                  (v128.const i16x8 1 1 1 1 1 1 1 1))
(assert_return (invoke "i16x8.extend_low_i8x16_u" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 1 1 1 1))
                                                  (v128.const i16x8 255 255 255 255 255 255 255 255))
(assert_return (invoke "i16x8.extend_low_i8x16_u" (v128.const i8x16 126 126 126 126 126 126 126 126 127 127 127 127 127 127 127 127))
                                                  (v128.const i16x8 126 126 126 126 126 126 126 126))
(assert_return (invoke "i16x8.extend_low_i8x16_u" (v128.const i8x16 127 127 127 127 127 127 127 127 126 126 126 126 126 126 126 126))
                                                  (v128.const i16x8 127 127 127 127 127 127 127 127))
(assert_return (invoke "i16x8.extend_low_i8x16_u" (v128.const i8x16 127 127 127 127 127 127 127 127 127 127 127 127 127 127 127 127))
                                                  (v128.const i16x8 127 127 127 127 127 127 127 127))
(assert_return (invoke "i16x8.extend_low_i8x16_u" (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128 -128))
                                                  (v128.const i16x8 128 128 128 128 128 128 128 128))
(assert_return (invoke "i16x8.extend_low_i8x16_u" (v128.const i8x16 127 127 127 127 127 127 127 127 -128 -128 -128 -128 -128 -128 -128 -128))
                                                  (v128.const i16x8 127 127 127 127 127 127 127 127))
(assert_return (invoke "i16x8.extend_low_i8x16_u" (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 127 127 127 127 127 127 127 127))
                                                  (v128.const i16x8 128 128 128 128 128 128 128 128))
(assert_return (invoke "i16x8.extend_low_i8x16_u" (v128.const i8x16 127 127 127 127 127 127 127 127 -1 -1 -1 -1 -1 -1 -1 -1))
                                                  (v128.const i16x8 127 127 127 127 127 127 127 127))
(assert_return (invoke "i16x8.extend_low_i8x16_u" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 127 127 127 127 127 127 127 127))
                                                  (v128.const i16x8 255 255 255 255 255 255 255 255))
(assert_return (invoke "i16x8.extend_low_i8x16_u" (v128.const i8x16 -127 -127 -127 -127 -127 -127 -127 -127 -128 -128 -128 -128 -128 -128 -128 -128))
                                                  (v128.const i16x8 129 129 129 129 129 129 129 129))
(assert_return (invoke "i16x8.extend_low_i8x16_u" (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -127 -127 -127 -127 -127 -127 -127 -127))
                                                  (v128.const i16x8 128 128 128 128 128 128 128 128))
(assert_return (invoke "i16x8.extend_low_i8x16_u" (v128.const i8x16 -128 -128 -128 -128 -128 -128 -128 -128 -1 -1 -1 -1 -1 -1 -1 -1))
                                                  (v128.const i16x8 128 128 128 128 128 128 128 128))
(assert_return (invoke "i16x8.extend_low_i8x16_u" (v128.const i8x16 -1 -1 -1 -1 -1 -1 -1 -1 -128 -128 -128 -128 -128 -128 -128 -128))
                                                  (v128.const i16x8 255 255 255 255 255 255 255 255))

(assert_return (invoke "i32x4.extend_high_i16x8_s" (v128.const i16x8 0 0 0 0 0 0 0 0))
                                                   (v128.const i32x4 0 0 0 0))
(assert_return (invoke "i32x4.extend_high_i16x8_s" (v128.const i16x8 0 0 0 0 1 1 1 1))
                                                   (v128.const i32x4 1 1 1 1))
(assert_return (invoke "i32x4.extend_high_i16x8_s" (v128.const i16x8 0 0 0 0 -1 -1 -1 -1))
                                                   (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "i32x4.extend_high_i16x8_s" (v128.const i16x8 1 1 1 1 0 0 0 0))
                                                   (v128.const i32x4 0 0 0 0))
(assert_return (invoke "i32x4.extend_high_i16x8_s" (v128.const i16x8 -1 -1 -1 -1 0 0 0 0))
                                                   (v128.const i32x4 0 0 0 0))
(assert_return (invoke "i32x4.extend_high_i16x8_s" (v128.const i16x8 1 1 1 1 -1 -1 -1 -1))
                                                   (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "i32x4.extend_high_i16x8_s" (v128.const i16x8 -1 -1 -1 -1 1 1 1 1))
                                                   (v128.const i32x4 1 1 1 1))
(assert_return (invoke "i32x4.extend_high_i16x8_s" (v128.const i16x8 32766 32766 32766 32766 32767 32767 32767 32767))
                                                   (v128.const i32x4 32767 32767 32767 32767))
(assert_return (invoke "i32x4.extend_high_i16x8_s" (v128.const i16x8 32767 32767 32767 32767 32766 32766 32766 32766))
                                                   (v128.const i32x4 32766 32766 32766 32766))
(assert_return (invoke "i32x4.extend_high_i16x8_s" (v128.const i16x8 32767 32767 32767 32767 32767 32767 32767 32767))
                                                   (v128.const i32x4 32767 32767 32767 32767))
(assert_return (invoke "i32x4.extend_high_i16x8_s" (v128.const i16x8 -32768 -32768 -32768 -32768 -32768 -32768 -32768 -32768))
                                                   (v128.const i32x4 -32768 -32768 -32768 -32768))
(assert_return (invoke "i32x4.extend_high_i16x8_s" (v128.const i16x8 32767 32767 32767 32767 -32768 -32768 -32768 -32768))
                                                   (v128.const i32x4 -32768 -32768 -32768 -32768))
(assert_return (invoke "i32x4.extend_high_i16x8_s" (v128.const i16x8 -32768 -32768 -32768 -32768 32767 32767 32767 32767))
                                                   (v128.const i32x4 32767 32767 32767 32767))
(assert_return (invoke "i32x4.extend_high_i16x8_s" (v128.const i16x8 32767 32767 32767 32767 -1 -1 -1 -1))
                                                   (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "i32x4.extend_high_i16x8_s" (v128.const i16x8 -1 -1 -1 -1 32767 32767 32767 32767))
                                                   (v128.const i32x4 32767 32767 32767 32767))
(assert_return (invoke "i32x4.extend_high_i16x8_s" (v128.const i16x8 -32767 -32767 -32767 -32767 -32768 -32768 -32768 -32768))
                                                   (v128.const i32x4 -32768 -32768 -32768 -32768))
(assert_return (invoke "i32x4.extend_high_i16x8_s" (v128.const i16x8 -32768 -32768 -32768 -32768 -32767 -32767 -32767 -32767))
                                                   (v128.const i32x4 -32767 -32767 -32767 -32767))
(assert_return (invoke "i32x4.extend_high_i16x8_s" (v128.const i16x8 -32768 -32768 -32768 -32768 -1 -1 -1 -1))
                                                   (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "i32x4.extend_high_i16x8_s" (v128.const i16x8 -1 -1 -1 -1 -32768 -32768 -32768 -32768))
                                                   (v128.const i32x4 -32768 -32768 -32768 -32768))

(assert_return (invoke "i32x4.extend_high_i16x8_u" (v128.const i16x8 0 0 0 0 0 0 0 0))
                                                   (v128.const i32x4 0 0 0 0))
(assert_return (invoke "i32x4.extend_high_i16x8_u" (v128.const i16x8 0 0 0 0 1 1 1 1))
                                                   (v128.const i32x4 1 1 1 1))
(assert_return (invoke "i32x4.extend_high_i16x8_u" (v128.const i16x8 0 0 0 0 -1 -1 -1 -1))
                                                   (v128.const i32x4 65535 65535 65535 65535))
(assert_return (invoke "i32x4.extend_high_i16x8_u" (v128.const i16x8 1 1 1 1 0 0 0 0))
                                                   (v128.const i32x4 0 0 0 0))
(assert_return (invoke "i32x4.extend_high_i16x8_u" (v128.const i16x8 -1 -1 -1 -1 0 0 0 0))
                                                   (v128.const i32x4 0 0 0 0))
(assert_return (invoke "i32x4.extend_high_i16x8_u" (v128.const i16x8 1 1 1 1 -1 -1 -1 -1))
                                                   (v128.const i32x4 65535 65535 65535 65535))
(assert_return (invoke "i32x4.extend_high_i16x8_u" (v128.const i16x8 -1 -1 -1 -1 1 1 1 1))
                                                   (v128.const i32x4 1 1 1 1))
(assert_return (invoke "i32x4.extend_high_i16x8_u" (v128.const i16x8 32766 32766 32766 32766 32767 32767 32767 32767))
                                                   (v128.const i32x4 32767 32767 32767 32767))
(assert_return (invoke "i32x4.extend_high_i16x8_u" (v128.const i16x8 32767 32767 32767 32767 32766 32766 32766 32766))
                                                   (v128.const i32x4 32766 32766 32766 32766))
(assert_return (invoke "i32x4.extend_high_i16x8_u" (v128.const i16x8 32767 32767 32767 32767 32767 32767 32767 32767))
                                                   (v128.const i32x4 32767 32767 32767 32767))
(assert_return (invoke "i32x4.extend_high_i16x8_u" (v128.const i16x8 -32768 -32768 -32768 -32768 -32768 -32768 -32768 -32768))
                                                   (v128.const i32x4 32768 32768 32768 32768))
(assert_return (invoke "i32x4.extend_high_i16x8_u" (v128.const i16x8 32767 32767 32767 32767 -32768 -32768 -32768 -32768))
                                                   (v128.const i32x4 32768 32768 32768 32768))
(assert_return (invoke "i32x4.extend_high_i16x8_u" (v128.const i16x8 -32768 -32768 -32768 -32768 32767 32767 32767 32767))
                                                   (v128.const i32x4 32767 32767 32767 32767))
(assert_return (invoke "i32x4.extend_high_i16x8_u" (v128.const i16x8 32767 32767 32767 32767 -1 -1 -1 -1))
                                                   (v128.const i32x4 65535 65535 65535 65535))
(assert_return (invoke "i32x4.extend_high_i16x8_u" (v128.const i16x8 -1 -1 -1 -1 32767 32767 32767 32767))
                                                   (v128.const i32x4 32767 32767 32767 32767))
(assert_return (invoke "i32x4.extend_high_i16x8_u" (v128.const i16x8 -32767 -32767 -32767 -32767 -32768 -32768 -32768 -32768))
                                                   (v128.const i32x4 32768 32768 32768 32768))
(assert_return (invoke "i32x4.extend_high_i16x8_u" (v128.const i16x8 -32768 -32768 -32768 -32768 -32767 -32767 -32767 -32767))
                                                   (v128.const i32x4 32769 32769 32769 32769))
(assert_return (invoke "i32x4.extend_high_i16x8_u" (v128.const i16x8 -32768 -32768 -32768 -32768 -1 -1 -1 -1))
                                                   (v128.const i32x4 65535 65535 65535 65535))
(assert_return (invoke "i32x4.extend_high_i16x8_u" (v128.const i16x8 -1 -1 -1 -1 -32768 -32768 -32768 -32768))
                                                   (v128.const i32x4 32768 32768 32768 32768))

(assert_return (invoke "i32x4.extend_low_i16x8_s" (v128.const i16x8 0 0 0 0 0 0 0 0))
                                                  (v128.const i32x4 0 0 0 0))
(assert_return (invoke "i32x4.extend_low_i16x8_s" (v128.const i16x8 0 0 0 0 1 1 1 1))
                                                  (v128.const i32x4 0 0 0 0))
(assert_return (invoke "i32x4.extend_low_i16x8_s" (v128.const i16x8 0 0 0 0 -1 -1 -1 -1))
                                                  (v128.const i32x4 0 0 0 0))
(assert_return (invoke "i32x4.extend_low_i16x8_s" (v128.const i16x8 1 1 1 1 0 0 0 0))
                                                  (v128.const i32x4 1 1 1 1))
(assert_return (invoke "i32x4.extend_low_i16x8_s" (v128.const i16x8 -1 -1 -1 -1 0 0 0 0))
                                                  (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "i32x4.extend_low_i16x8_s" (v128.const i16x8 1 1 1 1 -1 -1 -1 -1))
                                                  (v128.const i32x4 1 1 1 1))
(assert_return (invoke "i32x4.extend_low_i16x8_s" (v128.const i16x8 -1 -1 -1 -1 1 1 1 1))
                                                  (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "i32x4.extend_low_i16x8_s" (v128.const i16x8 32766 32766 32766 32766 32767 32767 32767 32767))
                                                  (v128.const i32x4 32766 32766 32766 32766))
(assert_return (invoke "i32x4.extend_low_i16x8_s" (v128.const i16x8 32767 32767 32767 32767 32766 32766 32766 32766))
                                                  (v128.const i32x4 32767 32767 32767 32767))
(assert_return (invoke "i32x4.extend_low_i16x8_s" (v128.const i16x8 32767 32767 32767 32767 32767 32767 32767 32767))
                                                  (v128.const i32x4 32767 32767 32767 32767))
(assert_return (invoke "i32x4.extend_low_i16x8_s" (v128.const i16x8 -32768 -32768 -32768 -32768 -32768 -32768 -32768 -32768))
                                                  (v128.const i32x4 -32768 -32768 -32768 -32768))
(assert_return (invoke "i32x4.extend_low_i16x8_s" (v128.const i16x8 32767 32767 32767 32767 -32768 -32768 -32768 -32768))
                                                  (v128.const i32x4 32767 32767 32767 32767))
(assert_return (invoke "i32x4.extend_low_i16x8_s" (v128.const i16x8 -32768 -32768 -32768 -32768 32767 32767 32767 32767))
                                                  (v128.const i32x4 -32768 -32768 -32768 -32768))
(assert_return (invoke "i32x4.extend_low_i16x8_s" (v128.const i16x8 32767 32767 32767 32767 -1 -1 -1 -1))
                                                  (v128.const i32x4 32767 32767 32767 32767))
(assert_return (invoke "i32x4.extend_low_i16x8_s" (v128.const i16x8 -1 -1 -1 -1 32767 32767 32767 32767))
                                                  (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "i32x4.extend_low_i16x8_s" (v128.const i16x8 -32767 -32767 -32767 -32767 -32768 -32768 -32768 -32768))
                                                  (v128.const i32x4 -32767 -32767 -32767 -32767))
(assert_return (invoke "i32x4.extend_low_i16x8_s" (v128.const i16x8 -32768 -32768 -32768 -32768 -32767 -32767 -32767 -32767))
                                                  (v128.const i32x4 -32768 -32768 -32768 -32768))
(assert_return (invoke "i32x4.extend_low_i16x8_s" (v128.const i16x8 -32768 -32768 -32768 -32768 -1 -1 -1 -1))
                                                  (v128.const i32x4 -32768 -32768 -32768 -32768))
(assert_return (invoke "i32x4.extend_low_i16x8_s" (v128.const i16x8 -1 -1 -1 -1 -32768 -32768 -32768 -32768))
                                                  (v128.const i32x4 -1 -1 -1 -1))

(assert_return (invoke "i32x4.extend_low_i16x8_u" (v128.const i16x8 0 0 0 0 0 0 0 0))
                                                  (v128.const i32x4 0 0 0 0))
(assert_return (invoke "i32x4.extend_low_i16x8_u" (v128.const i16x8 0 0 0 0 1 1 1 1))
                                                  (v128.const i32x4 0 0 0 0))
(assert_return (invoke "i32x4.extend_low_i16x8_u" (v128.const i16x8 0 0 0 0 -1 -1 -1 -1))
                                                  (v128.const i32x4 0 0 0 0))
(assert_return (invoke "i32x4.extend_low_i16x8_u" (v128.const i16x8 1 1 1 1 0 0 0 0))
                                                  (v128.const i32x4 1 1 1 1))
(assert_return (invoke "i32x4.extend_low_i16x8_u" (v128.const i16x8 -1 -1 -1 -1 0 0 0 0))
                                                  (v128.const i32x4 65535 65535 65535 65535))
(assert_return (invoke "i32x4.extend_low_i16x8_u" (v128.const i16x8 1 1 1 1 -1 -1 -1 -1))
                                                  (v128.const i32x4 1 1 1 1))
(assert_return (invoke "i32x4.extend_low_i16x8_u" (v128.const i16x8 -1 -1 -1 -1 1 1 1 1))
                                                  (v128.const i32x4 65535 65535 65535 65535))
(assert_return (invoke "i32x4.extend_low_i16x8_u" (v128.const i16x8 32766 32766 32766 32766 32767 32767 32767 32767))
                                                  (v128.const i32x4 32766 32766 32766 32766))
(assert_return (invoke "i32x4.extend_low_i16x8_u" (v128.const i16x8 32767 32767 32767 32767 32766 32766 32766 32766))
                                                  (v128.const i32x4 32767 32767 32767 32767))
(assert_return (invoke "i32x4.extend_low_i16x8_u" (v128.const i16x8 32767 32767 32767 32767 32767 32767 32767 32767))
                                                  (v128.const i32x4 32767 32767 32767 32767))
(assert_return (invoke "i32x4.extend_low_i16x8_u" (v128.const i16x8 -32768 -32768 -32768 -32768 -32768 -32768 -32768 -32768))
                                                  (v128.const i32x4 32768 32768 32768 32768))
(assert_return (invoke "i32x4.extend_low_i16x8_u" (v128.const i16x8 32767 32767 32767 32767 -32768 -32768 -32768 -32768))
                                                  (v128.const i32x4 32767 32767 32767 32767))
(assert_return (invoke "i32x4.extend_low_i16x8_u" (v128.const i16x8 -32768 -32768 -32768 -32768 32767 32767 32767 32767))
                                                  (v128.const i32x4 32768 32768 32768 32768))
(assert_return (invoke "i32x4.extend_low_i16x8_u" (v128.const i16x8 32767 32767 32767 32767 -1 -1 -1 -1))
                                                  (v128.const i32x4 32767 32767 32767 32767))
(assert_return (invoke "i32x4.extend_low_i16x8_u" (v128.const i16x8 -1 -1 -1 -1 32767 32767 32767 32767))
                                                  (v128.const i32x4 65535 65535 65535 65535))
(assert_return (invoke "i32x4.extend_low_i16x8_u" (v128.const i16x8 -32767 -32767 -32767 -32767 -32768 -32768 -32768 -32768))
                                                  (v128.const i32x4 32769 32769 32769 32769))
(assert_return (invoke "i32x4.extend_low_i16x8_u" (v128.const i16x8 -32768 -32768 -32768 -32768 -32767 -32767 -32767 -32767))
                                                  (v128.const i32x4 32768 32768 32768 32768))
(assert_return (invoke "i32x4.extend_low_i16x8_u" (v128.const i16x8 -32768 -32768 -32768 -32768 -1 -1 -1 -1))
                                                  (v128.const i32x4 32768 32768 32768 32768))
(assert_return (invoke "i32x4.extend_low_i16x8_u" (v128.const i16x8 -1 -1 -1 -1 -32768 -32768 -32768 -32768))
                                                  (v128.const i32x4 65535 65535 65535 65535))

(assert_return (invoke "i64x2.extend_high_i32x4_s" (v128.const i32x4 0 0 0 0))
                                                   (v128.const i64x2 0 0))
(assert_return (invoke "i64x2.extend_high_i32x4_s" (v128.const i32x4 0 0 1 1))
                                                   (v128.const i64x2 1 1))
(assert_return (invoke "i64x2.extend_high_i32x4_s" (v128.const i32x4 0 0 -1 -1))
                                                   (v128.const i64x2 -1 -1))
(assert_return (invoke "i64x2.extend_high_i32x4_s" (v128.const i32x4 1 1 0 0))
                                                   (v128.const i64x2 0 0))
(assert_return (invoke "i64x2.extend_high_i32x4_s" (v128.const i32x4 -1 -1 0 0))
                                                   (v128.const i64x2 0 0))
(assert_return (invoke "i64x2.extend_high_i32x4_s" (v128.const i32x4 1 1 -1 -1))
                                                   (v128.const i64x2 -1 -1))
(assert_return (invoke "i64x2.extend_high_i32x4_s" (v128.const i32x4 -1 -1 1 1))
                                                   (v128.const i64x2 1 1))
(assert_return (invoke "i64x2.extend_high_i32x4_s" (v128.const i32x4 2147483646 2147483646 2147483647 2147483647))
                                                   (v128.const i64x2 2147483647 2147483647))
(assert_return (invoke "i64x2.extend_high_i32x4_s" (v128.const i32x4 2147483647 2147483647 2147483646 2147483646))
                                                   (v128.const i64x2 2147483646 2147483646))
(assert_return (invoke "i64x2.extend_high_i32x4_s" (v128.const i32x4 2147483647 2147483647 2147483647 2147483647))
                                                   (v128.const i64x2 2147483647 2147483647))
(assert_return (invoke "i64x2.extend_high_i32x4_s" (v128.const i32x4 -2147483648 -2147483648 -2147483648 -2147483648))
                                                   (v128.const i64x2 -2147483648 -2147483648))
(assert_return (invoke "i64x2.extend_high_i32x4_s" (v128.const i32x4 2147483647 2147483647 -2147483648 -2147483648))
                                                   (v128.const i64x2 -2147483648 -2147483648))
(assert_return (invoke "i64x2.extend_high_i32x4_s" (v128.const i32x4 -2147483648 -2147483648 2147483647 2147483647))
                                                   (v128.const i64x2 2147483647 2147483647))
(assert_return (invoke "i64x2.extend_high_i32x4_s" (v128.const i32x4 2147483647 2147483647 -1 -1))
                                                   (v128.const i64x2 -1 -1))
(assert_return (invoke "i64x2.extend_high_i32x4_s" (v128.const i32x4 -1 -1 2147483647 2147483647))
                                                   (v128.const i64x2 2147483647 2147483647))
(assert_return (invoke "i64x2.extend_high_i32x4_s" (v128.const i32x4 -2147483647 -2147483647 -2147483648 -2147483648))
                                                   (v128.const i64x2 -2147483648 -2147483648))
(assert_return (invoke "i64x2.extend_high_i32x4_s" (v128.const i32x4 -2147483648 -2147483648 -2147483647 -2147483647))
                                                   (v128.const i64x2 -2147483647 -2147483647))
(assert_return (invoke "i64x2.extend_high_i32x4_s" (v128.const i32x4 -2147483648 -2147483648 -1 -1))
                                                   (v128.const i64x2 -1 -1))
(assert_return (invoke "i64x2.extend_high_i32x4_s" (v128.const i32x4 -1 -1 -2147483648 -2147483648))
                                                   (v128.const i64x2 -2147483648 -2147483648))

(assert_return (invoke "i64x2.extend_high_i32x4_u" (v128.const i32x4 0 0 0 0))
                                                   (v128.const i64x2 0 0))
(assert_return (invoke "i64x2.extend_high_i32x4_u" (v128.const i32x4 0 0 1 1))
                                                   (v128.const i64x2 1 1))
(assert_return (invoke "i64x2.extend_high_i32x4_u" (v128.const i32x4 0 0 -1 -1))
                                                   (v128.const i64x2 4294967295 4294967295))
(assert_return (invoke "i64x2.extend_high_i32x4_u" (v128.const i32x4 1 1 0 0))
                                                   (v128.const i64x2 0 0))
(assert_return (invoke "i64x2.extend_high_i32x4_u" (v128.const i32x4 -1 -1 0 0))
                                                   (v128.const i64x2 0 0))
(assert_return (invoke "i64x2.extend_high_i32x4_u" (v128.const i32x4 1 1 -1 -1))
                                                   (v128.const i64x2 4294967295 4294967295))
(assert_return (invoke "i64x2.extend_high_i32x4_u" (v128.const i32x4 -1 -1 1 1))
                                                   (v128.const i64x2 1 1))
(assert_return (invoke "i64x2.extend_high_i32x4_u" (v128.const i32x4 2147483646 2147483646 2147483647 2147483647))
                                                   (v128.const i64x2 2147483647 2147483647))
(assert_return (invoke "i64x2.extend_high_i32x4_u" (v128.const i32x4 2147483647 2147483647 2147483646 2147483646))
                                                   (v128.const i64x2 2147483646 2147483646))
(assert_return (invoke "i64x2.extend_high_i32x4_u" (v128.const i32x4 2147483647 2147483647 2147483647 2147483647))
                                                   (v128.const i64x2 2147483647 2147483647))
(assert_return (invoke "i64x2.extend_high_i32x4_u" (v128.const i32x4 -2147483648 -2147483648 -2147483648 -2147483648))
                                                   (v128.const i64x2 2147483648 2147483648))
(assert_return (invoke "i64x2.extend_high_i32x4_u" (v128.const i32x4 2147483647 2147483647 -2147483648 -2147483648))
                                                   (v128.const i64x2 2147483648 2147483648))
(assert_return (invoke "i64x2.extend_high_i32x4_u" (v128.const i32x4 -2147483648 -2147483648 2147483647 2147483647))
                                                   (v128.const i64x2 2147483647 2147483647))
(assert_return (invoke "i64x2.extend_high_i32x4_u" (v128.const i32x4 2147483647 2147483647 -1 -1))
                                                   (v128.const i64x2 4294967295 4294967295))
(assert_return (invoke "i64x2.extend_high_i32x4_u" (v128.const i32x4 -1 -1 2147483647 2147483647))
                                                   (v128.const i64x2 2147483647 2147483647))
(assert_return (invoke "i64x2.extend_high_i32x4_u" (v128.const i32x4 -2147483647 -2147483647 -2147483648 -2147483648))
                                                   (v128.const i64x2 2147483648 2147483648))
(assert_return (invoke "i64x2.extend_high_i32x4_u" (v128.const i32x4 -2147483648 -2147483648 -2147483647 -2147483647))
                                                   (v128.const i64x2 2147483649 2147483649))
(assert_return (invoke "i64x2.extend_high_i32x4_u" (v128.const i32x4 -2147483648 -2147483648 -1 -1))
                                                   (v128.const i64x2 4294967295 4294967295))
(assert_return (invoke "i64x2.extend_high_i32x4_u" (v128.const i32x4 -1 -1 -2147483648 -2147483648))
                                                   (v128.const i64x2 2147483648 2147483648))

(assert_return (invoke "i64x2.extend_low_i32x4_s" (v128.const i32x4 0 0 0 0))
                                                  (v128.const i64x2 0 0))
(assert_return (invoke "i64x2.extend_low_i32x4_s" (v128.const i32x4 0 0 1 1))
                                                  (v128.const i64x2 0 0))
(assert_return (invoke "i64x2.extend_low_i32x4_s" (v128.const i32x4 0 0 -1 -1))
                                                  (v128.const i64x2 0 0))
(assert_return (invoke "i64x2.extend_low_i32x4_s" (v128.const i32x4 1 1 0 0))
                                                  (v128.const i64x2 1 1))
(assert_return (invoke "i64x2.extend_low_i32x4_s" (v128.const i32x4 -1 -1 0 0))
                                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "i64x2.extend_low_i32x4_s" (v128.const i32x4 1 1 -1 -1))
                                                  (v128.const i64x2 1 1))
(assert_return (invoke "i64x2.extend_low_i32x4_s" (v128.const i32x4 -1 -1 1 1))
                                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "i64x2.extend_low_i32x4_s" (v128.const i32x4 2147483646 2147483646 2147483647 2147483647))
                                                  (v128.const i64x2 2147483646 2147483646))
(assert_return (invoke "i64x2.extend_low_i32x4_s" (v128.const i32x4 2147483647 2147483647 2147483646 2147483646))
                                                  (v128.const i64x2 2147483647 2147483647))
(assert_return (invoke "i64x2.extend_low_i32x4_s" (v128.const i32x4 2147483647 2147483647 2147483647 2147483647))
                                                  (v128.const i64x2 2147483647 2147483647))
(assert_return (invoke "i64x2.extend_low_i32x4_s" (v128.const i32x4 -2147483648 -2147483648 -2147483648 -2147483648))
                                                  (v128.const i64x2 -2147483648 -2147483648))
(assert_return (invoke "i64x2.extend_low_i32x4_s" (v128.const i32x4 2147483647 2147483647 -2147483648 -2147483648))
                                                  (v128.const i64x2 2147483647 2147483647))
(assert_return (invoke "i64x2.extend_low_i32x4_s" (v128.const i32x4 -2147483648 -2147483648 2147483647 2147483647))
                                                  (v128.const i64x2 -2147483648 -2147483648))
(assert_return (invoke "i64x2.extend_low_i32x4_s" (v128.const i32x4 2147483647 2147483647 -1 -1))
                                                  (v128.const i64x2 2147483647 2147483647))
(assert_return (invoke "i64x2.extend_low_i32x4_s" (v128.const i32x4 -1 -1 2147483647 2147483647))
                                                  (v128.const i64x2 -1 -1))
(assert_return (invoke "i64x2.extend_low_i32x4_s" (v128.const i32x4 -2147483647 -2147483647 -2147483648 -2147483648))
                                                  (v128.const i64x2 -2147483647 -2147483647))
(assert_return (invoke "i64x2.extend_low_i32x4_s" (v128.const i32x4 -2147483648 -2147483648 -2147483647 -2147483647))
                                                  (v128.const i64x2 -2147483648 -2147483648))
(assert_return (invoke "i64x2.extend_low_i32x4_s" (v128.const i32x4 -2147483648 -2147483648 -1 -1))
                                                  (v128.const i64x2 -2147483648 -2147483648))
(assert_return (invoke "i64x2.extend_low_i32x4_s" (v128.const i32x4 -1 -1 -2147483648 -2147483648))
                                                  (v128.const i64x2 -1 -1))

(assert_return (invoke "i64x2.extend_low_i32x4_u" (v128.const i32x4 0 0 0 0))
                                                  (v128.const i64x2 0 0))
(assert_return (invoke "i64x2.extend_low_i32x4_u" (v128.const i32x4 0 0 1 1))
                                                  (v128.const i64x2 0 0))
(assert_return (invoke "i64x2.extend_low_i32x4_u" (v128.const i32x4 0 0 -1 -1))
                                                  (v128.const i64x2 0 0))
(assert_return (invoke "i64x2.extend_low_i32x4_u" (v128.const i32x4 1 1 0 0))
                                                  (v128.const i64x2 1 1))
(assert_return (invoke "i64x2.extend_low_i32x4_u" (v128.const i32x4 -1 -1 0 0))
                                                  (v128.const i64x2 4294967295 4294967295))
(assert_return (invoke "i64x2.extend_low_i32x4_u" (v128.const i32x4 1 1 -1 -1))
                                                  (v128.const i64x2 1 1))
(assert_return (invoke "i64x2.extend_low_i32x4_u" (v128.const i32x4 -1 -1 1 1))
                                                  (v128.const i64x2 4294967295 4294967295))
(assert_return (invoke "i64x2.extend_low_i32x4_u" (v128.const i32x4 2147483646 2147483646 2147483647 2147483647))
                                                  (v128.const i64x2 2147483646 2147483646))
(assert_return (invoke "i64x2.extend_low_i32x4_u" (v128.const i32x4 2147483647 2147483647 2147483646 2147483646))
                                                  (v128.const i64x2 2147483647 2147483647))
(assert_return (invoke "i64x2.extend_low_i32x4_u" (v128.const i32x4 2147483647 2147483647 2147483647 2147483647))
                                                  (v128.const i64x2 2147483647 2147483647))
(assert_return (invoke "i64x2.extend_low_i32x4_u" (v128.const i32x4 -2147483648 -2147483648 -2147483648 -2147483648))
                                                  (v128.const i64x2 2147483648 2147483648))
(assert_return (invoke "i64x2.extend_low_i32x4_u" (v128.const i32x4 2147483647 2147483647 -2147483648 -2147483648))
                                                  (v128.const i64x2 2147483647 2147483647))
(assert_return (invoke "i64x2.extend_low_i32x4_u" (v128.const i32x4 -2147483648 -2147483648 2147483647 2147483647))
                                                  (v128.const i64x2 2147483648 2147483648))
(assert_return (invoke "i64x2.extend_low_i32x4_u" (v128.const i32x4 2147483647 2147483647 -1 -1))
                                                  (v128.const i64x2 2147483647 2147483647))
(assert_return (invoke "i64x2.extend_low_i32x4_u" (v128.const i32x4 -1 -1 2147483647 2147483647))
                                                  (v128.const i64x2 4294967295 4294967295))
(assert_return (invoke "i64x2.extend_low_i32x4_u" (v128.const i32x4 -2147483647 -2147483647 -2147483648 -2147483648))
                                                  (v128.const i64x2 2147483649 2147483649))
(assert_return (invoke "i64x2.extend_low_i32x4_u" (v128.const i32x4 -2147483648 -2147483648 -2147483647 -2147483647))
                                                  (v128.const i64x2 2147483648 2147483648))
(assert_return (invoke "i64x2.extend_low_i32x4_u" (v128.const i32x4 -2147483648 -2147483648 -1 -1))
                                                  (v128.const i64x2 2147483648 2147483648))
(assert_return (invoke "i64x2.extend_low_i32x4_u" (v128.const i32x4 -1 -1 -2147483648 -2147483648))
                                                  (v128.const i64x2 4294967295 4294967295))


;; type check
