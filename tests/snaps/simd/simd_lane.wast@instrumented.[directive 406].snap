(module
  (type (;0;) (func (param v128) (result i32)))
  (type (;1;) (func (param v128 i32) (result v128)))
  (type (;2;) (func (param v128 f32) (result v128)))
  (type (;3;) (func (param v128 v128) (result v128)))
  (type (;4;) (func (param v128) (result i64)))
  (type (;5;) (func (param v128 f64) (result v128)))
  (type (;6;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 6)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 6)))
  (func (;2;) (type 0) (param v128) (result i32)
    i64.const 1000000000016
    call 1
    i64.const 3
    call 0
    local.get 0
    i8x16.extract_lane_s 0
    if (result i32) ;; label = @1
      i64.const 2
      call 0
      i32.const 255
    else
      i64.const 2
      call 0
      i32.const 0
    end
    i64.const 1
    call 0
  )
  (func (;3;) (type 1) (param v128 i32) (result v128)
    i64.const 1000001000020
    call 1
    i64.const 4
    call 0
    local.get 0
    local.get 1
    i16x8.replace_lane 0
    return
  )
  (func (;4;) (type 0) (param v128) (result i32)
    (local i32)
    i64.const 1000001000016
    call 1
    i64.const 5
    call 0
    local.get 0
    i32x4.extract_lane 0
    local.set 1
    local.get 1
    return
  )
  (func (;5;) (type 2) (param v128 f32) (result v128)
    i64.const 1000001000020
    call 1
    i64.const 6
    call 0
    local.get 0
    local.get 1
    f32x4.replace_lane 0
    global.set $g
    global.get $g
    return
  )
  (func (;6;) (type 3) (param v128 v128) (result v128)
    i64.const 1000001000032
    call 1
    i64.const 4
    call 0
    local.get 0
    local.get 1
    i8x16.swizzle
    return
  )
  (func (;7;) (type 3) (param v128 v128) (result v128)
    i64.const 1000001000032
    call 1
    i64.const 6
    call 0
    local.get 0
    local.get 1
    i8x16.shuffle 0 1 2 3 4 5 6 7 24 25 26 27 28 29 30 31
    global.set $h
    global.get $h
    return
  )
  (func (;8;) (type 4) (param v128) (result i64)
    (local i64)
    i64.const 1000001000016
    call 1
    i64.const 5
    call 0
    local.get 0
    i64x2.extract_lane 0
    local.set 1
    local.get 1
    return
  )
  (func (;9;) (type 5) (param v128 f64) (result v128)
    i64.const 1000001000024
    call 1
    i64.const 6
    call 0
    local.get 0
    local.get 1
    f64x2.replace_lane 0
    global.set $g
    global.get $g
    return
  )
  (global $g (;0;) (mut v128) v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)
  (global $h (;1;) (mut v128) v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)
  (export "as-if-condition-value" (func 2))
  (export "as-return-value-1" (func 3))
  (export "as-local_set-value" (func 4))
  (export "as-global_set-value-1" (func 5))
  (export "as-return-value-2" (func 6))
  (export "as-global_set-value-2" (func 7))
  (export "as-local_set-value-1" (func 8))
  (export "as-global_set-value-3" (func 9))
)