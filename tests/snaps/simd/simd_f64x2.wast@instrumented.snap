(module
  (type (;0;) (func (param v128 v128) (result v128)))
  (type (;1;) (func (param v128) (result v128)))
  (type (;2;) (func (result v128)))
  (type (;3;) (func (param i64)))
  (type (;4;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 4)))
  (func (;2;) (type 0) (param v128 v128) (result v128)
    i64.const 32
    i64.const 1
    call 1
    i64.const 4
    call 0
    local.get 0
    local.get 1
    f64x2.min
  )
  (func (;3;) (type 0) (param v128 v128) (result v128)
    i64.const 32
    i64.const 1
    call 1
    i64.const 4
    call 0
    local.get 0
    local.get 1
    f64x2.max
  )
  (func (;4;) (type 1) (param v128) (result v128)
    i64.const 16
    i64.const 0
    call 1
    i64.const 3
    call 0
    local.get 0
    f64x2.abs
  )
  (func (;5;) (type 2) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x3ff00000
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x40000000
    f64x2.min
  )
  (func (;6;) (type 2) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x40000000 0x00000000 0xc0080000
    v128.const i32x4 0x00000000 0x3ff00000 0x00000000 0x40080000
    f64x2.min
  )
  (func (;7;) (type 2) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x3ff00000
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x3ff00000
    f64x2.min
  )
  (func (;8;) (type 2) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x40000000 0x00000000 0x40080000
    v128.const i32x4 0x00000000 0x40000000 0x00000000 0x40080000
    f64x2.min
  )
  (func (;9;) (type 2) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x3ff00000
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x40000000
    f64x2.min
  )
  (func (;10;) (type 2) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x40000000 0x00000000 0x41e00000
    v128.const i32x4 0x00000000 0x3ff00000 0x00000000 0x41e00000
    f64x2.min
  )
  (func (;11;) (type 2) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x3ff00000
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x3ff00000
    f64x2.min
  )
  (func (;12;) (type 2) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x40000000 0x00000000 0x41e00000
    v128.const i32x4 0x00000000 0x40000000 0x00000000 0x41e00000
    f64x2.min
  )
  (func (;13;) (type 1) (param v128) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    local.get 0
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x3ff00000
    f64x2.min
  )
  (func (;14;) (type 1) (param v128) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x40000000 0x00000000 0xc0080000
    local.get 0
    f64x2.min
  )
  (func (;15;) (type 1) (param v128) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x3ff00000
    local.get 0
    f64x2.min
  )
  (func (;16;) (type 1) (param v128) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    local.get 0
    v128.const i32x4 0x00000000 0x40000000 0x00000000 0x40080000
    f64x2.min
  )
  (func (;17;) (type 1) (param v128) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x3ff00000
    local.get 0
    f64x2.min
  )
  (func (;18;) (type 1) (param v128) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x40000000 0x00000000 0x41e00000
    local.get 0
    f64x2.min
  )
  (func (;19;) (type 1) (param v128) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x3ff00000
    local.get 0
    f64x2.min
  )
  (func (;20;) (type 1) (param v128) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x40000000 0x00000000 0x41e00000
    local.get 0
    f64x2.min
  )
  (func (;21;) (type 2) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x3ff00000
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x40000000
    f64x2.max
  )
  (func (;22;) (type 2) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x40000000 0x00000000 0xc0080000
    v128.const i32x4 0x00000000 0x3ff00000 0x00000000 0x40080000
    f64x2.max
  )
  (func (;23;) (type 2) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x3ff00000
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x3ff00000
    f64x2.max
  )
  (func (;24;) (type 2) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x40000000 0x00000000 0x40080000
    v128.const i32x4 0x00000000 0x40000000 0x00000000 0x40080000
    f64x2.max
  )
  (func (;25;) (type 2) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x3ff00000
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x40000000
    f64x2.max
  )
  (func (;26;) (type 2) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x40000000 0x00000000 0x41e00000
    v128.const i32x4 0x00000000 0x3ff00000 0x00000000 0x41e00000
    f64x2.max
  )
  (func (;27;) (type 2) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x3ff00000
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x3ff00000
    f64x2.max
  )
  (func (;28;) (type 2) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x40000000 0x00000000 0x41e00000
    v128.const i32x4 0x00000000 0x40000000 0x00000000 0x41e00000
    f64x2.max
  )
  (func (;29;) (type 1) (param v128) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    local.get 0
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x3ff00000
    f64x2.max
  )
  (func (;30;) (type 1) (param v128) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x40000000 0x00000000 0xc0080000
    local.get 0
    f64x2.max
  )
  (func (;31;) (type 1) (param v128) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x3ff00000
    local.get 0
    f64x2.max
  )
  (func (;32;) (type 1) (param v128) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    local.get 0
    v128.const i32x4 0x00000000 0x40000000 0x00000000 0x40080000
    f64x2.max
  )
  (func (;33;) (type 1) (param v128) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x3ff00000
    local.get 0
    f64x2.max
  )
  (func (;34;) (type 1) (param v128) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x40000000 0x00000000 0x41e00000
    local.get 0
    f64x2.max
  )
  (func (;35;) (type 1) (param v128) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x3ff00000
    local.get 0
    f64x2.max
  )
  (func (;36;) (type 1) (param v128) (result v128)
    i64.const 32
    i64.const 0
    call 1
    i64.const 4
    call 0
    v128.const i32x4 0x00000000 0x40000000 0x00000000 0x41e00000
    local.get 0
    f64x2.max
  )
  (func (;37;) (type 2) (result v128)
    i64.const 16
    i64.const 0
    call 1
    i64.const 3
    call 0
    v128.const i32x4 0x00000000 0x80000000 0x00000000 0xbff00000
    f64x2.abs
  )
  (func (;38;) (type 2) (result v128)
    i64.const 16
    i64.const 0
    call 1
    i64.const 3
    call 0
    v128.const i32x4 0x00000000 0xc0000000 0x00000000 0xc0080000
    f64x2.abs
  )
  (export "f64x2.min" (func 2))
  (export "f64x2.max" (func 3))
  (export "f64x2.abs" (func 4))
  (export "f64x2.min_with_const_0" (func 5))
  (export "f64x2.min_with_const_1" (func 6))
  (export "f64x2.min_with_const_2" (func 7))
  (export "f64x2.min_with_const_3" (func 8))
  (export "f64x2.min_with_const_4" (func 9))
  (export "f64x2.min_with_const_5" (func 10))
  (export "f64x2.min_with_const_6" (func 11))
  (export "f64x2.min_with_const_7" (func 12))
  (export "f64x2.min_with_const_9" (func 13))
  (export "f64x2.min_with_const_10" (func 14))
  (export "f64x2.min_with_const_11" (func 15))
  (export "f64x2.min_with_const_12" (func 16))
  (export "f64x2.min_with_const_13" (func 17))
  (export "f64x2.min_with_const_14" (func 18))
  (export "f64x2.min_with_const_15" (func 19))
  (export "f64x2.min_with_const_16" (func 20))
  (export "f64x2.max_with_const_18" (func 21))
  (export "f64x2.max_with_const_19" (func 22))
  (export "f64x2.max_with_const_20" (func 23))
  (export "f64x2.max_with_const_21" (func 24))
  (export "f64x2.max_with_const_22" (func 25))
  (export "f64x2.max_with_const_23" (func 26))
  (export "f64x2.max_with_const_24" (func 27))
  (export "f64x2.max_with_const_25" (func 28))
  (export "f64x2.max_with_const_27" (func 29))
  (export "f64x2.max_with_const_28" (func 30))
  (export "f64x2.max_with_const_29" (func 31))
  (export "f64x2.max_with_const_30" (func 32))
  (export "f64x2.max_with_const_31" (func 33))
  (export "f64x2.max_with_const_32" (func 34))
  (export "f64x2.max_with_const_33" (func 35))
  (export "f64x2.max_with_const_34" (func 36))
  (export "f64x2.abs_with_const_35" (func 37))
  (export "f64x2.abs_with_const_36" (func 38))
)
(assert_return (invoke "f64x2.min_with_const_0") (v128.const f64x2 0 1))
(assert_return (invoke "f64x2.min_with_const_1") (v128.const f64x2 1 -3))
(assert_return (invoke "f64x2.min_with_const_2") (v128.const f64x2 0 1))
(assert_return (invoke "f64x2.min_with_const_3") (v128.const f64x2 2 3))
;; f64x2.min param vs const
(assert_return (invoke "f64x2.min_with_const_4") (v128.const f64x2 0x00 0x01))
(assert_return (invoke "f64x2.min_with_const_5") (v128.const f64x2 0x01 0x80000000))
(assert_return (invoke "f64x2.min_with_const_6") (v128.const f64x2 0x00 0x01))
(assert_return (invoke "f64x2.min_with_const_7") (v128.const f64x2 0x02 0x80000000))
(assert_return (invoke "f64x2.min_with_const_9" (v128.const f64x2 0 2))
                                                (v128.const f64x2 0 1))
(assert_return (invoke "f64x2.min_with_const_10" (v128.const f64x2 1 3))
                                                 (v128.const f64x2 1 -3))
(assert_return (invoke "f64x2.min_with_const_11" (v128.const f64x2 0 1))
                                                 (v128.const f64x2 0 1))
(assert_return (invoke "f64x2.min_with_const_12" (v128.const f64x2 2 3))
                                                 (v128.const f64x2 2 3))
(assert_return (invoke "f64x2.min_with_const_13" (v128.const f64x2 0x00 0x02))
                                                 (v128.const f64x2 0x00 0x01))
(assert_return (invoke "f64x2.min_with_const_14" (v128.const f64x2 0x01 2147483648))
                                                 (v128.const f64x2 0x01 0x80000000))
(assert_return (invoke "f64x2.min_with_const_15" (v128.const f64x2 0x00 0x01))
                                                 (v128.const f64x2 0x00 0x01))
(assert_return (invoke "f64x2.min_with_const_16" (v128.const f64x2 0x02 0x80000000))
                                                 (v128.const f64x2 0x02 0x80000000))
;; f64x2.max const vs const
(assert_return (invoke "f64x2.max_with_const_18") (v128.const f64x2 0 2))
(assert_return (invoke "f64x2.max_with_const_19") (v128.const f64x2 2 3))
(assert_return (invoke "f64x2.max_with_const_20") (v128.const f64x2 0 1))
(assert_return (invoke "f64x2.max_with_const_21") (v128.const f64x2 2 3))
;; f64x2.max param vs const
(assert_return (invoke "f64x2.max_with_const_22") (v128.const f64x2 0x00 0x02))
(assert_return (invoke "f64x2.max_with_const_23") (v128.const f64x2 0x02 2147483648))
(assert_return (invoke "f64x2.max_with_const_24") (v128.const f64x2 0x00 0x01))
(assert_return (invoke "f64x2.max_with_const_25") (v128.const f64x2 0x02 0x80000000))
(assert_return (invoke "f64x2.max_with_const_27" (v128.const f64x2 0 2))
                                                 (v128.const f64x2 0 2))
(assert_return (invoke "f64x2.max_with_const_28" (v128.const f64x2 1 3))
                                                 (v128.const f64x2 2 3))
(assert_return (invoke "f64x2.max_with_const_29" (v128.const f64x2 0 1))
                                                 (v128.const f64x2 0 1))
(assert_return (invoke "f64x2.max_with_const_30" (v128.const f64x2 2 3))
                                                 (v128.const f64x2 2 3))
(assert_return (invoke "f64x2.max_with_const_31" (v128.const f64x2 0x00 0x02))
                                                 (v128.const f64x2 0x00 0x02))
(assert_return (invoke "f64x2.max_with_const_32" (v128.const f64x2 0x01 2147483648))
                                                 (v128.const f64x2 0x02 2147483648))
(assert_return (invoke "f64x2.max_with_const_33" (v128.const f64x2 0x00 0x01))
                                                 (v128.const f64x2 0x00 0x01))
(assert_return (invoke "f64x2.max_with_const_34" (v128.const f64x2 0x02 0x80000000))
                                                 (v128.const f64x2 0x02 0x80000000))

(assert_return (invoke "f64x2.abs_with_const_35") (v128.const f64x2 0 1))
(assert_return (invoke "f64x2.abs_with_const_36") (v128.const f64x2 2 3))

;; Test different lanes go through different if-then clauses
;; f64x2.min
(assert_return
  (invoke "f64x2.min"
    (v128.const f64x2 nan 0)
    (v128.const f64x2 0 1)
  )
  (v128.const f64x2 nan:canonical 0)
)
;; f64x2.min
(assert_return
  (invoke "f64x2.min"
    (v128.const f64x2 0 1)
    (v128.const f64x2 -nan 0)
  )
  (v128.const f64x2 nan:canonical 0)
)
;; f64x2.min
(assert_return
  (invoke "f64x2.min"
    (v128.const f64x2 0 1)
    (v128.const f64x2 -nan 1)
  )
  (v128.const f64x2 nan:canonical 1)
)
;; f64x2.max
(assert_return
  (invoke "f64x2.max"
    (v128.const f64x2 nan 0)
    (v128.const f64x2 0 1)
  )
  (v128.const f64x2 nan:canonical 1)
)
;; f64x2.max
(assert_return
  (invoke "f64x2.max"
    (v128.const f64x2 0 1)
    (v128.const f64x2 -nan 0)
  )
  (v128.const f64x2 nan:canonical 1)
)
;; f64x2.max
(assert_return
  (invoke "f64x2.max"
    (v128.const f64x2 0 1)
    (v128.const f64x2 -nan 1)
  )
  (v128.const f64x2 nan:canonical 1)
)

(assert_return (invoke "f64x2.min" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.min" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.min" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.min" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.min" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 nan nan))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 -nan -nan))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 nan nan))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 -nan -nan))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 nan nan))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 -nan -nan))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 nan nan))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 -nan -nan))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.min" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                   (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                   (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
(assert_return (invoke "f64x2.min" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                   (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                   (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
(assert_return (invoke "f64x2.min" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                   (v128.const f64x2 0123456789.e038 0123456789.e038))
                                   (v128.const f64x2 0123456789.e038 0123456789.e038))
(assert_return (invoke "f64x2.min" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                   (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                   (v128.const f64x2 0123456789.e+038 0123456789.e+038))
(assert_return (invoke "f64x2.min" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                   (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789))
                                   (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789))
(assert_return (invoke "f64x2.min" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                   (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                   (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
(assert_return (invoke "f64x2.min" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                   (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                   (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
(assert_return (invoke "f64x2.min" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                   (v128.const f64x2 0123456789.e038 0123456789.e038))
                                   (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
(assert_return (invoke "f64x2.min" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                   (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                   (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
(assert_return (invoke "f64x2.min" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                   (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789))
                                   (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                   (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                   (v128.const f64x2 0123456789.e038 0123456789.e038))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                   (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                   (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                   (v128.const f64x2 0123456789.e038 0123456789.e038))
                                   (v128.const f64x2 0123456789.e038 0123456789.e038))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                   (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                   (v128.const f64x2 0123456789.e038 0123456789.e038))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                   (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789))
                                   (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                   (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                   (v128.const f64x2 0123456789.e+038 0123456789.e+038))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                   (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                   (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                   (v128.const f64x2 0123456789.e038 0123456789.e038))
                                   (v128.const f64x2 0123456789.e+038 0123456789.e+038))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                   (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                   (v128.const f64x2 0123456789.e+038 0123456789.e+038))
(assert_return (invoke "f64x2.min" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                   (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789))
                                   (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789)
                                   (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                   (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789)
                                   (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                   (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789)
                                   (v128.const f64x2 0123456789.e038 0123456789.e038))
                                   (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789)
                                   (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                   (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789)
                                   (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789))
                                   (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 0x0p+0 0x0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x0p+0 0x0p+0)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x0p+0 0x0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x0p+0 -0x0p+0)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1074 0x1p-1074)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1074 -0x1p-1074)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1022 0x1p-1022)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1022 -0x1p-1022)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p-1 0x1p-1)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p-1 -0x1p-1)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1p+0 0x1p+0)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1p+0 -0x1p+0)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 inf inf)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 -0x0.0000000000001p-1022 -0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 -0x1.0000000000000p-1022 -0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 -0x1.0000000000000p-1 -0x1.0000000000000p-1))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -inf -inf)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 nan nan))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 -nan -nan))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan nan)
                                   (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 nan nan))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 -nan -nan))
                                   (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan -nan)
                                   (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 nan nan))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 -nan -nan))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000)
                                   (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 inf inf))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 nan nan))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 -nan -nan))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000)
                                   (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                   (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.max" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                   (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                   (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                   (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                   (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                   (v128.const f64x2 0123456789.e038 0123456789.e038))
                                   (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                   (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                   (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038)
                                   (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789))
                                   (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                   (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                   (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                   (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                   (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                   (v128.const f64x2 0123456789.e038 0123456789.e038))
                                   (v128.const f64x2 0123456789.e038 0123456789.e038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                   (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                   (v128.const f64x2 0123456789.e+038 0123456789.e+038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038)
                                   (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789))
                                   (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                   (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                   (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                   (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                   (v128.const f64x2 0123456789.e038 0123456789.e038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                   (v128.const f64x2 0123456789.e038 0123456789.e038))
                                   (v128.const f64x2 0123456789.e038 0123456789.e038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                   (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                   (v128.const f64x2 0123456789.e+038 0123456789.e+038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0123456789.e038 0123456789.e038)
                                   (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789))
                                   (v128.const f64x2 0123456789.e038 0123456789.e038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                   (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                   (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                   (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                   (v128.const f64x2 0123456789.e+038 0123456789.e+038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                   (v128.const f64x2 0123456789.e038 0123456789.e038))
                                   (v128.const f64x2 0123456789.e038 0123456789.e038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                   (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                   (v128.const f64x2 0123456789.e+038 0123456789.e+038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0123456789.e+038 0123456789.e+038)
                                   (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789))
                                   (v128.const f64x2 0123456789.e+038 0123456789.e+038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789)
                                   (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                   (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789)
                                   (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                   (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789)
                                   (v128.const f64x2 0123456789.e038 0123456789.e038))
                                   (v128.const f64x2 0123456789.e038 0123456789.e038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789)
                                   (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                   (v128.const f64x2 0123456789.e+038 0123456789.e+038))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789)
                                   (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789))
                                   (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789))

;; Test opposite signs of zero
(assert_return (invoke "f64x2.min" (v128.const f64x2 0 0)
                                   (v128.const f64x2 +0 -0))
                                   (v128.const f64x2 0 -0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0 +0)
                                   (v128.const f64x2 +0 -0))
                                   (v128.const f64x2 -0 -0))
(assert_return (invoke "f64x2.min" (v128.const f64x2 -0 -0)
                                   (v128.const f64x2 +0 +0))
                                   (v128.const f64x2 -0 -0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 0 0)
                                   (v128.const f64x2 +0 -0))
                                   (v128.const f64x2 0 0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0 +0)
                                   (v128.const f64x2 +0 -0))
                                   (v128.const f64x2 0 0))
(assert_return (invoke "f64x2.max" (v128.const f64x2 -0 -0)
                                   (v128.const f64x2 +0 +0))
                                   (v128.const f64x2 +0 +0))


(assert_return (invoke "f64x2.abs" (v128.const f64x2 0x0p+0 0x0p+0))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.abs" (v128.const f64x2 -0x0p+0 -0x0p+0))
                                   (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.abs" (v128.const f64x2 0x1p-1074 0x1p-1074))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.abs" (v128.const f64x2 -0x1p-1074 -0x1p-1074))
                                   (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
(assert_return (invoke "f64x2.abs" (v128.const f64x2 0x1p-1022 0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.abs" (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                   (v128.const f64x2 0x1.0000000000000p-1022 0x1.0000000000000p-1022))
(assert_return (invoke "f64x2.abs" (v128.const f64x2 0x1p-1 0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.abs" (v128.const f64x2 -0x1p-1 -0x1p-1))
                                   (v128.const f64x2 0x1.0000000000000p-1 0x1.0000000000000p-1))
(assert_return (invoke "f64x2.abs" (v128.const f64x2 0x1p+0 0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.abs" (v128.const f64x2 -0x1p+0 -0x1p+0))
                                   (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.abs" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.abs" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                   (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
(assert_return (invoke "f64x2.abs" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.abs" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                   (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.abs" (v128.const f64x2 inf inf))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.abs" (v128.const f64x2 -inf -inf))
                                   (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.abs" (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
                                   (v128.const f64x2 01234567890123456789e038 01234567890123456789e038))
(assert_return (invoke "f64x2.abs" (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
                                   (v128.const f64x2 01234567890123456789e-038 01234567890123456789e-038))
(assert_return (invoke "f64x2.abs" (v128.const f64x2 0123456789.e038 0123456789.e038))
                                   (v128.const f64x2 0123456789.e038 0123456789.e038))
(assert_return (invoke "f64x2.abs" (v128.const f64x2 0123456789.e+038 0123456789.e+038))
                                   (v128.const f64x2 0123456789.e+038 0123456789.e+038))
(assert_return (invoke "f64x2.abs" (v128.const f64x2 -01234567890123456789.01234567890123456789 -01234567890123456789.01234567890123456789))
                                   (v128.const f64x2 01234567890123456789.01234567890123456789 01234567890123456789.01234567890123456789))

;; type check
(module
  (type (;0;) (func (param v128 v128 v128) (result v128)))
  (type (;1;) (func (param v128 v128) (result v128)))
  (type (;2;) (func (param i64)))
  (type (;3;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 2)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 3)))
  (func (;2;) (type 0) (param v128 v128 v128) (result v128)
    i64.const 32
    i64.const 2
    call 1
    i64.const 6
    call 0
    local.get 0
    local.get 1
    f64x2.min
    local.get 2
    f64x2.max
  )
  (func (;3;) (type 0) (param v128 v128 v128) (result v128)
    i64.const 32
    i64.const 2
    call 1
    i64.const 6
    call 0
    local.get 0
    local.get 1
    f64x2.max
    local.get 2
    f64x2.min
  )
  (func (;4;) (type 1) (param v128 v128) (result v128)
    i64.const 32
    i64.const 1
    call 1
    i64.const 5
    call 0
    local.get 0
    f64x2.abs
    local.get 1
    f64x2.max
  )
  (func (;5;) (type 1) (param v128 v128) (result v128)
    i64.const 32
    i64.const 1
    call 1
    i64.const 5
    call 0
    local.get 0
    f64x2.abs
    local.get 1
    f64x2.min
  )
  (export "max-min" (func 2))
  (export "min-max" (func 3))
  (export "max-abs" (func 4))
  (export "min-abs" (func 5))
)
(assert_return (invoke "max-min" (v128.const f64x2 1.125 1.125)
                                 (v128.const f64x2 0.25 0.25)
                                 (v128.const f64x2 0.125 0.125))
                                 (v128.const f64x2 0.25 0.25))
(assert_return (invoke "min-max" (v128.const f64x2 1.125 1.125)
                                 (v128.const f64x2 0.25 0.25)
                                 (v128.const f64x2 0.125 0.125))
                                 (v128.const f64x2 0.125 0.125))
(assert_return (invoke "max-abs" (v128.const f64x2 -1.125 -1.125)
                                 (v128.const f64x2 0.125 0.125))
                                 (v128.const f64x2 1.125 1.125))
(assert_return (invoke "min-abs" (v128.const f64x2 -1.125 -1.125)
                                 (v128.const f64x2 0.125 0.125))
                                 (v128.const f64x2 0.125 0.125))