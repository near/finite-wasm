(module
  (type (;0;) (func (param i32) (result v128)))
  (type (;1;) (func (result v128)))
  (type (;2;) (func (param i32)))
  (type (;3;) (func (param i64)))
  (type (;4;) (func (param i64 i64)))
  (type (;5;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 3)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 5)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 5)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 5)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 5)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 5)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 5)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 4)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 4)))
  (memory (;0;) 1)
  (export "load_data_1" (func 9))
  (export "load_data_2" (func 10))
  (export "load_data_3" (func 11))
  (export "load_data_4" (func 12))
  (export "load_data_5" (func 13))
  (export "store_data_0" (func 14))
  (export "store_data_1" (func 15))
  (export "store_data_2" (func 16))
  (export "store_data_3" (func 17))
  (export "store_data_4" (func 18))
  (export "store_data_5" (func 19))
  (export "store_data_6" (func 20))
  (func (;9;) (type 0) (param $i i32) (result v128)
    block (result v128) ;; label = @1
      i64.const 16
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get $i
      v128.load
    end
    i64.const 16
    i64.const 1
    call 8
  )
  (func (;10;) (type 0) (param $i i32) (result v128)
    block (result v128) ;; label = @1
      i64.const 16
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get $i
      v128.load align=1
    end
    i64.const 16
    i64.const 1
    call 8
  )
  (func (;11;) (type 0) (param $i i32) (result v128)
    block (result v128) ;; label = @1
      i64.const 16
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get $i
      v128.load offset=1 align=1
    end
    i64.const 16
    i64.const 1
    call 8
  )
  (func (;12;) (type 0) (param $i i32) (result v128)
    block (result v128) ;; label = @1
      i64.const 16
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get $i
      v128.load offset=2 align=1
    end
    i64.const 16
    i64.const 1
    call 8
  )
  (func (;13;) (type 0) (param $i i32) (result v128)
    block (result v128) ;; label = @1
      i64.const 16
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get $i
      v128.load offset=15 align=1
    end
    i64.const 16
    i64.const 1
    call 8
  )
  (func (;14;) (type 1) (result v128)
    block (result v128) ;; label = @1
      i64.const 20
      i64.const 0
      call 7
      i64.const 3
      call 0
      i32.const 0
      v128.const i32x4 0x00000000 0x3f800000 0x40000000 0x40400000
      v128.store
      i64.const 2
      call 0
      i32.const 0
      v128.load
    end
    i64.const 20
    i64.const 0
    call 8
  )
  (func (;15;) (type 1) (result v128)
    block (result v128) ;; label = @1
      i64.const 20
      i64.const 0
      call 7
      i64.const 3
      call 0
      i32.const 0
      v128.const i32x4 0x00000000 0x00000001 0x00000002 0x00000003
      v128.store align=1
      i64.const 2
      call 0
      i32.const 0
      v128.load align=1
    end
    i64.const 20
    i64.const 0
    call 8
  )
  (func (;16;) (type 1) (result v128)
    block (result v128) ;; label = @1
      i64.const 20
      i64.const 0
      call 7
      i64.const 3
      call 0
      i32.const 0
      v128.const i32x4 0x00010000 0x00030002 0x00050004 0x00070006
      v128.store offset=1 align=1
      i64.const 2
      call 0
      i32.const 0
      v128.load offset=1 align=1
    end
    i64.const 20
    i64.const 0
    call 8
  )
  (func (;17;) (type 1) (result v128)
    block (result v128) ;; label = @1
      i64.const 20
      i64.const 0
      call 7
      i64.const 3
      call 0
      i32.const 0
      v128.const i32x4 0x03020100 0x07060504 0x0b0a0908 0x0f0e0d0c
      v128.store offset=2 align=1
      i64.const 2
      call 0
      i32.const 0
      v128.load offset=2 align=1
    end
    i64.const 20
    i64.const 0
    call 8
  )
  (func (;18;) (type 1) (result v128)
    block (result v128) ;; label = @1
      i64.const 20
      i64.const 0
      call 7
      i64.const 3
      call 0
      i32.const 0
      v128.const i32x4 0x00000000 0x00000001 0x00000002 0x00000003
      v128.store offset=15 align=1
      i64.const 2
      call 0
      i32.const 0
      v128.load offset=15
    end
    i64.const 20
    i64.const 0
    call 8
  )
  (func (;19;) (type 1) (result v128)
    block (result v128) ;; label = @1
      i64.const 20
      i64.const 0
      call 7
      i64.const 3
      call 0
      i32.const 0
      v128.const i32x4 0x00000000 0x00000001 0x00000002 0x00000003
      v128.store offset=65520 align=1
      i64.const 2
      call 0
      i32.const 0
      v128.load offset=65520
    end
    i64.const 20
    i64.const 0
    call 8
  )
  (func (;20;) (type 2) (param $i i32)
    block ;; label = @1
      i64.const 20
      i64.const 1
      call 7
      i64.const 3
      call 0
      local.get $i
      v128.const i32x4 0x00000000 0x00000001 0x00000002 0x00000003
      v128.store offset=1 align=1
    end
    i64.const 20
    i64.const 1
    call 8
  )
  (data (;0;) (i32.const 0) "\00\01\02\03\04\05\06\07\08\09\10\11\12\13\14\15")
  (data (;1;) (i32.const 65505) "\16\17\18\19 !\22#$%&'()01")
)

(assert_return (invoke "load_data_1" (i32.const 0)) (v128.const i32x4 0x03020100 0x07060504 0x11100908 0x15141312))
(assert_return (invoke "load_data_2" (i32.const 0)) (v128.const i32x4 0x03020100 0x07060504 0x11100908 0x15141312))
(assert_return (invoke "load_data_3" (i32.const 0)) (v128.const i32x4 0x04030201 0x08070605 0x12111009 0x00151413))
(assert_return (invoke "load_data_4" (i32.const 0)) (v128.const i32x4 0x05040302 0x09080706 0x13121110 0x00001514))
(assert_return (invoke "load_data_5" (i32.const 0)) (v128.const i32x4 0x00000015 0x00000000 0x00000000 0x00000000))

(assert_return (invoke "load_data_1" (i32.const 0)) (v128.const i16x8 0x0100 0x0302 0x0504 0x0706 0x0908 0x1110 0x1312 0x1514))
(assert_return (invoke "load_data_2" (i32.const 0)) (v128.const i16x8 0x0100 0x0302 0x0504 0x0706 0x0908 0x1110 0x1312 0x1514))
(assert_return (invoke "load_data_3" (i32.const 0)) (v128.const i16x8 0x0201 0x0403 0x0605 0x0807 0x1009 0x1211 0x1413 0x0015))
(assert_return (invoke "load_data_4" (i32.const 0)) (v128.const i16x8 0x0302 0x0504 0x0706 0x0908 0x1110 0x1312 0x1514 0x0000))
(assert_return (invoke "load_data_5" (i32.const 0)) (v128.const i16x8 0x0015 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000))

(assert_return (invoke "load_data_1" (i32.const 0)) (v128.const i8x16 0x00 0x01 0x02 0x03 0x04 0x05 0x06 0x07 0x08 0x09 0x10 0x11 0x12 0x13 0x14 0x15))
(assert_return (invoke "load_data_2" (i32.const 0)) (v128.const i8x16 0x00 0x01 0x02 0x03 0x04 0x05 0x06 0x07 0x08 0x09 0x10 0x11 0x12 0x13 0x14 0x15))
(assert_return (invoke "load_data_3" (i32.const 0)) (v128.const i8x16 0x01 0x02 0x03 0x04 0x05 0x06 0x07 0x08 0x09 0x10 0x11 0x12 0x13 0x14 0x15 0x00))
(assert_return (invoke "load_data_4" (i32.const 0)) (v128.const i8x16 0x02 0x03 0x04 0x05 0x06 0x07 0x08 0x09 0x10 0x11 0x12 0x13 0x14 0x15 0x00 0x00))
(assert_return (invoke "load_data_5" (i32.const 0)) (v128.const i8x16 0x15 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00))

(assert_return (invoke "load_data_1" (i32.const 65505)) (v128.const i32x4 0x19181716 0x23222120 0x27262524 0x31302928))
(assert_return (invoke "load_data_2" (i32.const 65505)) (v128.const i32x4 0x19181716 0x23222120 0x27262524 0x31302928))
(assert_return (invoke "load_data_3" (i32.const 65505)) (v128.const i32x4 0x20191817 0x24232221 0x28272625 0x00313029))
(assert_return (invoke "load_data_4" (i32.const 65505)) (v128.const i32x4 0x21201918 0x25242322 0x29282726 0x00003130))
(assert_return (invoke "load_data_5" (i32.const 65505)) (v128.const i32x4 0x00000031 0x00000000 0x00000000 0x00000000))

(assert_return (invoke "load_data_1" (i32.const 65505)) (v128.const i16x8 0x1716 0x1918 0x2120 0x2322 0x2524 0x2726 0x2928 0x3130))
(assert_return (invoke "load_data_2" (i32.const 65505)) (v128.const i16x8 0x1716 0x1918 0x2120 0x2322 0x2524 0x2726 0x2928 0x3130))
(assert_return (invoke "load_data_3" (i32.const 65505)) (v128.const i16x8 0x1817 0x2019 0x2221 0x2423 0x2625 0x2827 0x3029 0x0031))
(assert_return (invoke "load_data_4" (i32.const 65505)) (v128.const i16x8 0x1918 0x2120 0x2322 0x2524 0x2726 0x2928 0x3130 0x0000))
(assert_return (invoke "load_data_5" (i32.const 65505)) (v128.const i16x8 0x0031 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000))

(assert_return (invoke "load_data_1" (i32.const 65505)) (v128.const i8x16 0x16 0x17 0x18 0x19 0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x30 0x31))
(assert_return (invoke "load_data_2" (i32.const 65505)) (v128.const i8x16 0x16 0x17 0x18 0x19 0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x30 0x31))
(assert_return (invoke "load_data_3" (i32.const 65505)) (v128.const i8x16 0x17 0x18 0x19 0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x30 0x31 0x00))
(assert_return (invoke "load_data_4" (i32.const 65505)) (v128.const i8x16 0x18 0x19 0x20 0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29 0x30 0x31 0x00 0x00))
(assert_return (invoke "load_data_5" (i32.const 65505)) (v128.const i8x16 0x31 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00))

(assert_trap (invoke "load_data_3" (i32.const -1)) "out of bounds memory access")
(assert_trap (invoke "load_data_5" (i32.const 65506)) "out of bounds memory access")

(assert_return (invoke "store_data_0") (v128.const f32x4 0 1 2 3))
(assert_return (invoke "store_data_1") (v128.const i32x4 0 1 2 3))
(assert_return (invoke "store_data_2") (v128.const i16x8 0 1 2 3 4 5 6 7))
(assert_return (invoke "store_data_3") (v128.const i8x16 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))
(assert_return (invoke "store_data_4") (v128.const i32x4 0 1 2 3))
(assert_return (invoke "store_data_5") (v128.const i32x4 0 1 2 3))

(assert_trap (invoke "store_data_6" (i32.const -1)) "out of bounds memory access")
(assert_trap (invoke "store_data_6" (i32.const 65535)) "out of bounds memory access")

;; Load/Store v128 data with invalid offset

(module
  (type (;0;) (func))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (type (;3;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 3)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 3)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 3)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 3)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 3)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 2)))
  (memory (;0;) 1)
  (export "v128.load_offset_65521" (func 9))
  (func (;9;) (type 0)
    block ;; label = @1
      i64.const 16
      i64.const 0
      call 7
      i64.const 2
      call 0
      i32.const 0
      v128.load offset=65521
      i64.const 1
      call 0
      drop
    end
    i64.const 16
    i64.const 0
    call 8
  )
)

(assert_trap (invoke "v128.load_offset_65521") "out of bounds memory access")

(module
  (type (;0;) (func))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (type (;3;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 3)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 3)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 3)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 3)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 3)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 2)))
  (memory (;0;) 1)
  (export "v128.store_offset_65521" (func 9))
  (func (;9;) (type 0)
    block ;; label = @1
      i64.const 20
      i64.const 0
      call 7
      i64.const 3
      call 0
      i32.const 0
      v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000
      v128.store offset=65521
    end
    i64.const 20
    i64.const 0
    call 8
  )
)

(assert_trap (invoke "v128.store_offset_65521") "out of bounds memory access")

