(module
  (type (;0;) (func (param v128) (result v128)))
  (type (;1;) (func (param v128 v128) (result v128)))
  (type (;2;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 2)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (func (;2;) (type 0) (param v128) (result v128)
    i64.const 1000000000016
    call 1
    i64.const 3
    call 0
    local.get 0
    f32x4.convert_i32x4_s
  )
  (func (;3;) (type 0) (param v128) (result v128)
    i64.const 1000000000016
    call 1
    i64.const 3
    call 0
    local.get 0
    f32x4.convert_i32x4_u
  )
  (func (;4;) (type 0) (param v128) (result v128)
    i64.const 1000000000016
    call 1
    i64.const 3
    call 0
    local.get 0
    f64x2.convert_low_i32x4_s
  )
  (func (;5;) (type 0) (param v128) (result v128)
    i64.const 1000000000016
    call 1
    i64.const 3
    call 0
    local.get 0
    f64x2.convert_low_i32x4_u
  )
  (func (;6;) (type 1) (param v128 v128) (result v128)
    i64.const 1000001000032
    call 1
    i64.const 4
    call 0
    local.get 0
    local.get 1
    i8x16.narrow_i16x8_s
  )
  (func (;7;) (type 1) (param v128 v128) (result v128)
    i64.const 1000001000032
    call 1
    i64.const 4
    call 0
    local.get 0
    local.get 1
    i8x16.narrow_i16x8_u
  )
  (func (;8;) (type 1) (param v128 v128) (result v128)
    i64.const 1000001000032
    call 1
    i64.const 4
    call 0
    local.get 0
    local.get 1
    i16x8.narrow_i32x4_s
  )
  (func (;9;) (type 1) (param v128 v128) (result v128)
    i64.const 1000001000032
    call 1
    i64.const 4
    call 0
    local.get 0
    local.get 1
    i16x8.narrow_i32x4_u
  )
  (func (;10;) (type 0) (param v128) (result v128)
    i64.const 1000000000016
    call 1
    i64.const 3
    call 0
    local.get 0
    f64x2.promote_low_f32x4
  )
  (func (;11;) (type 0) (param v128) (result v128)
    i64.const 1000000000016
    call 1
    i64.const 3
    call 0
    local.get 0
    f32x4.demote_f64x2_zero
  )
  (export "f32x4.convert_i32x4_s" (func 2))
  (export "f32x4.convert_i32x4_u" (func 3))
  (export "f64x2.convert_low_i32x4_s" (func 4))
  (export "f64x2.convert_low_i32x4_u" (func 5))
  (export "i8x16.narrow_i16x8_s" (func 6))
  (export "i8x16.narrow_i16x8_u" (func 7))
  (export "i16x8.narrow_i32x4_s" (func 8))
  (export "i16x8.narrow_i32x4_u" (func 9))
  (export "f64x2.promote_low_f32x4" (func 10))
  (export "f32x4.demote_f64x2_zero" (func 11))
)