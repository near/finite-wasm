(module
  (type (;0;) (func (param v128) (result v128)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (func (;2;) (type 0) (param v128) (result v128)
    i64.const 16
    i64.const 0
    call 1
    i64.const 3
    call 0
    local.get 0
    f64x2.ceil
  )
  (func (;3;) (type 0) (param v128) (result v128)
    i64.const 16
    i64.const 0
    call 1
    i64.const 3
    call 0
    local.get 0
    f64x2.floor
  )
  (func (;4;) (type 0) (param v128) (result v128)
    i64.const 16
    i64.const 0
    call 1
    i64.const 3
    call 0
    local.get 0
    f64x2.trunc
  )
  (func (;5;) (type 0) (param v128) (result v128)
    i64.const 16
    i64.const 0
    call 1
    i64.const 3
    call 0
    local.get 0
    f64x2.nearest
  )
  (export "f64x2.ceil" (func 2))
  (export "f64x2.floor" (func 3))
  (export "f64x2.trunc" (func 4))
  (export "f64x2.nearest" (func 5))
)
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0x0p+0 0x0p+0))
                                    (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 -0x0p+0 -0x0p+0))
                                    (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0x1p-1022 0x1p-1022))
                                    (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                    (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0x1p-1 0x1p-1))
                                    (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 -0x1p-1 -0x1p-1))
                                    (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0x1p+0 0x1p+0))
                                    (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 -0x1p+0 -0x1p+0))
                                    (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                    (v128.const f64x2 0x1.c000000000000p+2 0x1.c000000000000p+2))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                    (v128.const f64x2 -0x1.8000000000000p+2 -0x1.8000000000000p+2))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                    (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                    (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
                                    (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
                                    (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 inf inf))
                                    (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 -inf -inf))
                                    (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0123456789 0123456789))
                                    (v128.const f64x2 123456789.0 123456789.0))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0123456789e019 0123456789e019))
                                    (v128.const f64x2 1.23456789e+27 1.23456789e+27))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0123456789e+019 0123456789e+019))
                                    (v128.const f64x2 1.23456789e+27 1.23456789e+27))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0123456789e-019 0123456789e-019))
                                    (v128.const f64x2 1.0 1.0))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0123456789. 0123456789.))
                                    (v128.const f64x2 123456789.0 123456789.0))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0123456789.e019 0123456789.e019))
                                    (v128.const f64x2 1.23456789e+27 1.23456789e+27))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0123456789.e+019 0123456789.e+019))
                                    (v128.const f64x2 1.23456789e+27 1.23456789e+27))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0123456789.e-019 0123456789.e-019))
                                    (v128.const f64x2 1.0 1.0))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0123456789.0123456789 0123456789.0123456789))
                                    (v128.const f64x2 123456790.0 123456790.0))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0123456789.0123456789e019 0123456789.0123456789e019))
                                    (v128.const f64x2 1.2345678901234569e+27 1.2345678901234569e+27))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0123456789.0123456789e+019 0123456789.0123456789e+019))
                                    (v128.const f64x2 1.2345678901234569e+27 1.2345678901234569e+27))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0123456789.0123456789e-019 0123456789.0123456789e-019))
                                    (v128.const f64x2 1.0 1.0))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0x0123456789ABCDEFabcdef 0x0123456789ABCDEFabcdef))
                                    (v128.const f64x2 1.3754889325393114e+24 1.3754889325393114e+24))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0x0123456789ABCDEFabcdefp019 0x0123456789ABCDEFabcdefp019))
                                    (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0x0123456789ABCDEFabcdefp+019 0x0123456789ABCDEFabcdefp+019))
                                    (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0x0123456789ABCDEFabcdefp-019 0x0123456789ABCDEFabcdefp-019))
                                    (v128.const f64x2 2.6235369349275807e+18 2.6235369349275807e+18))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0x0123456789ABCDEFabcdef. 0x0123456789ABCDEFabcdef.))
                                    (v128.const f64x2 1.3754889325393114e+24 1.3754889325393114e+24))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0x0123456789ABCDEFabcdef.p019 0x0123456789ABCDEFabcdef.p019))
                                    (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0x0123456789ABCDEFabcdef.p+019 0x0123456789ABCDEFabcdef.p+019))
                                    (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0x0123456789ABCDEFabcdef.p-019 0x0123456789ABCDEFabcdef.p-019))
                                    (v128.const f64x2 2.6235369349275807e+18 2.6235369349275807e+18))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdef 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdef))
                                    (v128.const f64x2 1.3754889325393114e+24 1.3754889325393114e+24))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp019 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp019))
                                    (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp+019 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp+019))
                                    (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp-019 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp-019))
                                    (v128.const f64x2 2.6235369349275807e+18 2.6235369349275807e+18))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 nan nan))
                                    (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 -nan -nan))
                                    (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                    (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.ceil" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                    (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0x0p+0 0x0p+0))
                                     (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 -0x0p+0 -0x0p+0))
                                     (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0x1p-1022 0x1p-1022))
                                     (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                     (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0x1p-1 0x1p-1))
                                     (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 -0x1p-1 -0x1p-1))
                                     (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0x1p+0 0x1p+0))
                                     (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 -0x1p+0 -0x1p+0))
                                     (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                     (v128.const f64x2 0x1.8000000000000p+2 0x1.8000000000000p+2))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                     (v128.const f64x2 -0x1.c000000000000p+2 -0x1.c000000000000p+2))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                     (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                     (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
                                     (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
                                     (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 inf inf))
                                     (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 -inf -inf))
                                     (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0123456789 0123456789))
                                     (v128.const f64x2 123456789.0 123456789.0))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0123456789e019 0123456789e019))
                                     (v128.const f64x2 1.23456789e+27 1.23456789e+27))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0123456789e+019 0123456789e+019))
                                     (v128.const f64x2 1.23456789e+27 1.23456789e+27))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0123456789e-019 0123456789e-019))
                                     (v128.const f64x2 0.0 0.0))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0123456789. 0123456789.))
                                     (v128.const f64x2 123456789.0 123456789.0))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0123456789.e019 0123456789.e019))
                                     (v128.const f64x2 1.23456789e+27 1.23456789e+27))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0123456789.e+019 0123456789.e+019))
                                     (v128.const f64x2 1.23456789e+27 1.23456789e+27))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0123456789.e-019 0123456789.e-019))
                                     (v128.const f64x2 0.0 0.0))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0123456789.0123456789 0123456789.0123456789))
                                     (v128.const f64x2 123456789.0 123456789.0))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0123456789.0123456789e019 0123456789.0123456789e019))
                                     (v128.const f64x2 1.2345678901234569e+27 1.2345678901234569e+27))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0123456789.0123456789e+019 0123456789.0123456789e+019))
                                     (v128.const f64x2 1.2345678901234569e+27 1.2345678901234569e+27))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0123456789.0123456789e-019 0123456789.0123456789e-019))
                                     (v128.const f64x2 0.0 0.0))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0x0123456789ABCDEFabcdef 0x0123456789ABCDEFabcdef))
                                     (v128.const f64x2 1.3754889325393114e+24 1.3754889325393114e+24))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0x0123456789ABCDEFabcdefp019 0x0123456789ABCDEFabcdefp019))
                                     (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0x0123456789ABCDEFabcdefp+019 0x0123456789ABCDEFabcdefp+019))
                                     (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0x0123456789ABCDEFabcdefp-019 0x0123456789ABCDEFabcdefp-019))
                                     (v128.const f64x2 2.6235369349275807e+18 2.6235369349275807e+18))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0x0123456789ABCDEFabcdef. 0x0123456789ABCDEFabcdef.))
                                     (v128.const f64x2 1.3754889325393114e+24 1.3754889325393114e+24))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0x0123456789ABCDEFabcdef.p019 0x0123456789ABCDEFabcdef.p019))
                                     (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0x0123456789ABCDEFabcdef.p+019 0x0123456789ABCDEFabcdef.p+019))
                                     (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0x0123456789ABCDEFabcdef.p-019 0x0123456789ABCDEFabcdef.p-019))
                                     (v128.const f64x2 2.6235369349275807e+18 2.6235369349275807e+18))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdef 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdef))
                                     (v128.const f64x2 1.3754889325393114e+24 1.3754889325393114e+24))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp019 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp019))
                                     (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp+019 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp+019))
                                     (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp-019 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp-019))
                                     (v128.const f64x2 2.6235369349275807e+18 2.6235369349275807e+18))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 nan nan))
                                     (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 -nan -nan))
                                     (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                     (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.floor" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                     (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0x0p+0 0x0p+0))
                                     (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 -0x0p+0 -0x0p+0))
                                     (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0x1p-1022 0x1p-1022))
                                     (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                     (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0x1p-1 0x1p-1))
                                     (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 -0x1p-1 -0x1p-1))
                                     (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0x1p+0 0x1p+0))
                                     (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 -0x1p+0 -0x1p+0))
                                     (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                     (v128.const f64x2 0x1.8000000000000p+2 0x1.8000000000000p+2))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                     (v128.const f64x2 -0x1.8000000000000p+2 -0x1.8000000000000p+2))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                     (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                     (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
                                     (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
                                     (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 inf inf))
                                     (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 -inf -inf))
                                     (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0123456789 0123456789))
                                     (v128.const f64x2 123456789.0 123456789.0))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0123456789e019 0123456789e019))
                                     (v128.const f64x2 1.23456789e+27 1.23456789e+27))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0123456789e+019 0123456789e+019))
                                     (v128.const f64x2 1.23456789e+27 1.23456789e+27))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0123456789e-019 0123456789e-019))
                                     (v128.const f64x2 0.0 0.0))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0123456789. 0123456789.))
                                     (v128.const f64x2 123456789.0 123456789.0))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0123456789.e019 0123456789.e019))
                                     (v128.const f64x2 1.23456789e+27 1.23456789e+27))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0123456789.e+019 0123456789.e+019))
                                     (v128.const f64x2 1.23456789e+27 1.23456789e+27))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0123456789.e-019 0123456789.e-019))
                                     (v128.const f64x2 0.0 0.0))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0123456789.0123456789 0123456789.0123456789))
                                     (v128.const f64x2 123456789.0 123456789.0))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0123456789.0123456789e019 0123456789.0123456789e019))
                                     (v128.const f64x2 1.2345678901234569e+27 1.2345678901234569e+27))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0123456789.0123456789e+019 0123456789.0123456789e+019))
                                     (v128.const f64x2 1.2345678901234569e+27 1.2345678901234569e+27))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0123456789.0123456789e-019 0123456789.0123456789e-019))
                                     (v128.const f64x2 0.0 0.0))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0x0123456789ABCDEFabcdef 0x0123456789ABCDEFabcdef))
                                     (v128.const f64x2 1.3754889325393114e+24 1.3754889325393114e+24))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0x0123456789ABCDEFabcdefp019 0x0123456789ABCDEFabcdefp019))
                                     (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0x0123456789ABCDEFabcdefp+019 0x0123456789ABCDEFabcdefp+019))
                                     (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0x0123456789ABCDEFabcdefp-019 0x0123456789ABCDEFabcdefp-019))
                                     (v128.const f64x2 2.6235369349275807e+18 2.6235369349275807e+18))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0x0123456789ABCDEFabcdef. 0x0123456789ABCDEFabcdef.))
                                     (v128.const f64x2 1.3754889325393114e+24 1.3754889325393114e+24))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0x0123456789ABCDEFabcdef.p019 0x0123456789ABCDEFabcdef.p019))
                                     (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0x0123456789ABCDEFabcdef.p+019 0x0123456789ABCDEFabcdef.p+019))
                                     (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0x0123456789ABCDEFabcdef.p-019 0x0123456789ABCDEFabcdef.p-019))
                                     (v128.const f64x2 2.6235369349275807e+18 2.6235369349275807e+18))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdef 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdef))
                                     (v128.const f64x2 1.3754889325393114e+24 1.3754889325393114e+24))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp019 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp019))
                                     (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp+019 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp+019))
                                     (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp-019 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp-019))
                                     (v128.const f64x2 2.6235369349275807e+18 2.6235369349275807e+18))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 nan nan))
                                     (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 -nan -nan))
                                     (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                     (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.trunc" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                     (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0x0p+0 0x0p+0))
                                       (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 -0x0p+0 -0x0p+0))
                                       (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0x1p-1022 0x1p-1022))
                                       (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 -0x1p-1022 -0x1p-1022))
                                       (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0x1p-1 0x1p-1))
                                       (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 -0x1p-1 -0x1p-1))
                                       (v128.const f64x2 -0x0.0p+0 -0x0.0p+0))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0x1p+0 0x1p+0))
                                       (v128.const f64x2 0x1.0000000000000p+0 0x1.0000000000000p+0))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 -0x1p+0 -0x1p+0))
                                       (v128.const f64x2 -0x1.0000000000000p+0 -0x1.0000000000000p+0))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0x1.921fb54442d18p+2 0x1.921fb54442d18p+2))
                                       (v128.const f64x2 0x1.8000000000000p+2 0x1.8000000000000p+2))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 -0x1.921fb54442d18p+2 -0x1.921fb54442d18p+2))
                                       (v128.const f64x2 -0x1.8000000000000p+2 -0x1.8000000000000p+2))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
                                       (v128.const f64x2 0x1.fffffffffffffp+1023 0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
                                       (v128.const f64x2 -0x1.fffffffffffffp+1023 -0x1.fffffffffffffp+1023))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
                                       (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0x0.0000000000001p-1022 0x0.0000000000001p-1022))
                                       (v128.const f64x2 0x0.0p+0 0x0.0p+0))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 inf inf))
                                       (v128.const f64x2 inf inf))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 -inf -inf))
                                       (v128.const f64x2 -inf -inf))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0123456789 0123456789))
                                       (v128.const f64x2 123456789.0 123456789.0))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0123456789e019 0123456789e019))
                                       (v128.const f64x2 1.23456789e+27 1.23456789e+27))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0123456789e+019 0123456789e+019))
                                       (v128.const f64x2 1.23456789e+27 1.23456789e+27))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0123456789e-019 0123456789e-019))
                                       (v128.const f64x2 0.0 0.0))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0123456789. 0123456789.))
                                       (v128.const f64x2 123456789.0 123456789.0))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0123456789.e019 0123456789.e019))
                                       (v128.const f64x2 1.23456789e+27 1.23456789e+27))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0123456789.e+019 0123456789.e+019))
                                       (v128.const f64x2 1.23456789e+27 1.23456789e+27))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0123456789.e-019 0123456789.e-019))
                                       (v128.const f64x2 0.0 0.0))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0123456789.0123456789 0123456789.0123456789))
                                       (v128.const f64x2 123456789.0 123456789.0))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0123456789.0123456789e019 0123456789.0123456789e019))
                                       (v128.const f64x2 1.2345678901234569e+27 1.2345678901234569e+27))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0123456789.0123456789e+019 0123456789.0123456789e+019))
                                       (v128.const f64x2 1.2345678901234569e+27 1.2345678901234569e+27))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0123456789.0123456789e-019 0123456789.0123456789e-019))
                                       (v128.const f64x2 0.0 0.0))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0x0123456789ABCDEFabcdef 0x0123456789ABCDEFabcdef))
                                       (v128.const f64x2 1.3754889325393114e+24 1.3754889325393114e+24))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0x0123456789ABCDEFabcdefp019 0x0123456789ABCDEFabcdefp019))
                                       (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0x0123456789ABCDEFabcdefp+019 0x0123456789ABCDEFabcdefp+019))
                                       (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0x0123456789ABCDEFabcdefp-019 0x0123456789ABCDEFabcdefp-019))
                                       (v128.const f64x2 2.6235369349275807e+18 2.6235369349275807e+18))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0x0123456789ABCDEFabcdef. 0x0123456789ABCDEFabcdef.))
                                       (v128.const f64x2 1.3754889325393114e+24 1.3754889325393114e+24))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0x0123456789ABCDEFabcdef.p019 0x0123456789ABCDEFabcdef.p019))
                                       (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0x0123456789ABCDEFabcdef.p+019 0x0123456789ABCDEFabcdef.p+019))
                                       (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0x0123456789ABCDEFabcdef.p-019 0x0123456789ABCDEFabcdef.p-019))
                                       (v128.const f64x2 2.6235369349275807e+18 2.6235369349275807e+18))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdef 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdef))
                                       (v128.const f64x2 1.3754889325393114e+24 1.3754889325393114e+24))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp019 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp019))
                                       (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp+019 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp+019))
                                       (v128.const f64x2 7.211523414631705e+29 7.211523414631705e+29))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp-019 0x0123456789ABCDEFabcdef.0123456789ABCDEFabcdefp-019))
                                       (v128.const f64x2 2.6235369349275807e+18 2.6235369349275807e+18))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 nan nan))
                                       (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 -nan -nan))
                                       (v128.const f64x2 nan:canonical nan:canonical))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 nan:0x4000000000000 nan:0x4000000000000))
                                       (v128.const f64x2 nan:arithmetic nan:arithmetic))
(assert_return (invoke "f64x2.nearest" (v128.const f64x2 -nan:0x4000000000000 -nan:0x4000000000000))
                                       (v128.const f64x2 nan:arithmetic nan:arithmetic))


;; Unknown operators

