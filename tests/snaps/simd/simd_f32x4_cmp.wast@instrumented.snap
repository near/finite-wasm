(module
  (type (;0;) (func (param v128 v128) (result v128)))
  (type (;1;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (func (;2;) (type 0) (param $x v128) (param $y v128) (result v128)
    i64.const 1000001000032
    call 1
    i64.const 4
    call 0
    local.get $x
    local.get $y
    f32x4.eq
  )
  (func (;3;) (type 0) (param $x v128) (param $y v128) (result v128)
    i64.const 1000001000032
    call 1
    i64.const 4
    call 0
    local.get $x
    local.get $y
    f32x4.ne
  )
  (func (;4;) (type 0) (param $x v128) (param $y v128) (result v128)
    i64.const 1000001000032
    call 1
    i64.const 4
    call 0
    local.get $x
    local.get $y
    f32x4.lt
  )
  (func (;5;) (type 0) (param $x v128) (param $y v128) (result v128)
    i64.const 1000001000032
    call 1
    i64.const 4
    call 0
    local.get $x
    local.get $y
    f32x4.le
  )
  (func (;6;) (type 0) (param $x v128) (param $y v128) (result v128)
    i64.const 1000001000032
    call 1
    i64.const 4
    call 0
    local.get $x
    local.get $y
    f32x4.gt
  )
  (func (;7;) (type 0) (param $x v128) (param $y v128) (result v128)
    i64.const 1000001000032
    call 1
    i64.const 4
    call 0
    local.get $x
    local.get $y
    f32x4.ge
  )
  (export "eq" (func 2))
  (export "ne" (func 3))
  (export "lt" (func 4))
  (export "le" (func 5))
  (export "gt" (func 6))
  (export "ge" (func 7))
)
(assert_return (invoke "eq" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "eq" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "eq" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 -1 -1 -1 -1))

;; ne
(assert_return (invoke "ne" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ne" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ne" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 0 0 0 0))

;; lt
(assert_return (invoke "lt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "lt" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "lt" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 0 0 0 0))

;; le
(assert_return (invoke "le" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "le" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "le" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 -1 -1 -1 -1))

;; gt
(assert_return (invoke "gt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "gt" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "gt" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 0 0 0 0))

;; ge
(assert_return (invoke "ge" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan nan nan nan)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -inf -inf -inf -inf)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -nan -nan -nan -nan)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 inf inf inf inf)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 nan nan nan nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p-149 0x1p-149 0x1p-149 0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -nan:0x200000 -nan:0x200000 -nan:0x200000 -nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -inf -inf -inf -inf))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2 0x1.921fb6p+2))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p+0 0x1p+0 0x1p+0 0x1p+0))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127 -0x1.fffffep+127))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x0p+0 -0x0p+0 -0x0p+0 -0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p-1 -0x1p-1 -0x1p-1 -0x1p-1))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127 0x1.fffffep+127))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -nan -nan -nan -nan))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p-149 -0x1p-149 -0x1p-149 -0x1p-149))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p-126 -0x1p-126 -0x1p-126 -0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p-1 0x1p-1 0x1p-1 0x1p-1))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2 -0x1.921fb6p+2))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 nan:0x200000 nan:0x200000 nan:0x200000 nan:0x200000))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x0p+0 0x0p+0 0x0p+0 0x0p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 inf inf inf inf))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 -0x1p+0 -0x1p+0 -0x1p+0 -0x1p+0))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126)
                            (v128.const f32x4 0x1p-126 0x1p-126 0x1p-126 0x1p-126))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789e019 0123456789e019 0123456789e019 0123456789e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789e-019 0123456789e-019 0123456789e-019 0123456789e-019))
                            (v128.const i32x4 -1 -1 -1 -1))
(assert_return (invoke "ge" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789.e019 0123456789.e019 0123456789.e019 0123456789.e019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789.e+019 0123456789.e+019 0123456789.e+019 0123456789.e+019))
                            (v128.const i32x4 0 0 0 0))
(assert_return (invoke "ge" (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789)
                            (v128.const f32x4 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789 0123456789.0123456789))
                            (v128.const i32x4 -1 -1 -1 -1))

;; eq

;; f32x4.eq  (f32x4) (i8x16)
(assert_return (invoke "eq" (v128.const f32x4 -1 0 1 2.0)
                            (v128.const i8x16 -1 -1 -1 -1 0 0 0 0 1 1 1 1 2 2 2 2))
                            (v128.const i32x4 0 -1 0 0))

;; f32x4.eq  (f32x4) (i16x8)
(assert_return (invoke "eq" (v128.const f32x4 -1 0 1 2.0)
                            (v128.const i16x8 -1 -1 0 0 1 1 2 2))
                            (v128.const i32x4 0 -1 0 0))

;; f32x4.eq  (f32x4) (i32x4)
(assert_return (invoke "eq" (v128.const f32x4 -1 0 1 2.0)
                            (v128.const i32x4 3212836864 0 1 2))
                            (v128.const i32x4 -1 -1 0 0 ))

;; ne

;; f32x4.ne  (f32x4) (i8x16)
(assert_return (invoke "ne" (v128.const f32x4 -1 0 1 2.0)
                            (v128.const i8x16 -1 -1 -1 -1 0 0 0 0 1 1 1 1 2 2 2 2))
                            (v128.const i32x4 -1 0 -1 -1))

;; f32x4.ne  (f32x4) (i16x8)
(assert_return (invoke "ne" (v128.const f32x4 -1 0 1 2.0)
                            (v128.const i16x8 -1 -1 0 0 1 1 2 2))
                            (v128.const i32x4 -1 0 -1 -1))

;; f32x4.ne  (f32x4) (i32x4)
(assert_return (invoke "ne" (v128.const f32x4 -1 0 1 2.0)
                            (v128.const i32x4 3212836864 0 1 2))
                            (v128.const i32x4 0 0 -1 -1))

;; lt

;; f32x4.lt  (f32x4) (i8x16)
(assert_return (invoke "lt" (v128.const f32x4 -1 0 1 2.0)
                            (v128.const i8x16 -1 -1 -1 -1 0 0 0 0 1 1 1 1 2 2 2 2))
                            (v128.const i32x4 0 0 0 0))

;; f32x4.lt  (f32x4) (i16x8)
(assert_return (invoke "lt" (v128.const f32x4 -1 0 1 2.0)
                            (v128.const i16x8 -1 -1 0 0 1 1 2 2))
                            (v128.const i32x4 0 0 0 0))

;; f32x4.lt  (f32x4) (i32x4)
(assert_return (invoke "lt" (v128.const f32x4 -1 0 1 2.0)
                            (v128.const i32x4 3212836864 0 1 2))
                            (v128.const i32x4 0 0 0 0))

;; le

;; f32x4.le  (f32x4) (i8x16)
(assert_return (invoke "le" (v128.const f32x4 -1 0 1 2.0)
                            (v128.const i8x16 -1 -1 -1 -1 0 0 0 0 1 1 1 1 2 2 2 2))
                            (v128.const i32x4 0 -1 0 0))

;; f32x4.le  (f32x4) (i16x8)
(assert_return (invoke "le" (v128.const f32x4 -1 0 1 2.0)
                            (v128.const i16x8 -1 -1 0 0 1 1 2 2))
                            (v128.const i32x4 0 -1 0 0))

;; f32x4.le  (f32x4) (i32x4)
(assert_return (invoke "le" (v128.const f32x4 -1 0 1 2.0)
                            (v128.const i32x4 3212836864 0 1 2))
                            (v128.const i32x4 -1 -1 0 0))

;; gt

;; f32x4.gt  (f32x4) (i8x16)
(assert_return (invoke "gt" (v128.const f32x4 -1 0 1 2.0)
                            (v128.const i8x16 -1 -1 -1 -1 0 0 0 0 1 1 1 1 2 2 2 2))
                            (v128.const i32x4 0 0 -1 -1))

;; f32x4.gt  (f32x4) (i16x8)
(assert_return (invoke "gt" (v128.const f32x4 -1 0 1 2.0)
                            (v128.const i16x8 -1 -1 0 0 1 1 2 2))
                            (v128.const i32x4 0 0 -1 -1))

;; f32x4.gt  (f32x4) (i32x4)
(assert_return (invoke "gt" (v128.const f32x4 -1 0 1 2.0)
                            (v128.const i32x4 3212836864 0 1 2))
                            (v128.const i32x4 0 0 -1 -1))

;; ge

;; f32x4.ge  (f32x4) (i8x16)
(assert_return (invoke "ge" (v128.const f32x4 -1 0 1 2.0)
                            (v128.const i8x16 -1 -1 -1 -1 0 0 0 0 1 1 1 1 2 2 2 2))
                            (v128.const i32x4 0 -1 -1 -1))

;; f32x4.ge  (f32x4) (i16x8)
(assert_return (invoke "ge" (v128.const f32x4 -1 0 1 2.0)
                            (v128.const i16x8 -1 -1 0 0 1 1 2 2))
                            (v128.const i32x4 0 -1 -1 -1))

;; f32x4.ge  (f32x4) (i32x4)
(assert_return (invoke "ge" (v128.const f32x4 -1 0 1 2.0)
                            (v128.const i32x4 3212836864 0 1 2))
                            (v128.const i32x4 -1 -1 -1 -1))


;; Type check

(module
  (type (;0;) (func))
  (type (;1;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (func (;2;) (type 0)
    i64.const 1000000000032
    call 1
    i64.const 5
    call 0
    block ;; label = @1
      block (result v128) ;; label = @2
        block (result v128) ;; label = @3
          i32.const 0
          v128.load
          i64.const 4
          call 0
        end
        block (result v128) ;; label = @3
          i32.const 1
          v128.load
          i64.const 6
          call 0
        end
        f32x4.eq
      end
      drop
    end
  )
  (func (;3;) (type 0)
    i64.const 1000000000032
    call 1
    i64.const 5
    call 0
    block ;; label = @1
      block (result v128) ;; label = @2
        block (result v128) ;; label = @3
          i32.const 0
          v128.load
          i64.const 4
          call 0
        end
        block (result v128) ;; label = @3
          i32.const 1
          v128.load
          i64.const 6
          call 0
        end
        f32x4.ne
      end
      drop
    end
  )
  (func (;4;) (type 0)
    i64.const 1000000000032
    call 1
    i64.const 5
    call 0
    block ;; label = @1
      block (result v128) ;; label = @2
        block (result v128) ;; label = @3
          i32.const 0
          v128.load
          i64.const 4
          call 0
        end
        block (result v128) ;; label = @3
          i32.const 1
          v128.load
          i64.const 6
          call 0
        end
        f32x4.lt
      end
      drop
    end
  )
  (func (;5;) (type 0)
    i64.const 1000000000032
    call 1
    i64.const 5
    call 0
    block ;; label = @1
      block (result v128) ;; label = @2
        block (result v128) ;; label = @3
          i32.const 0
          v128.load
          i64.const 4
          call 0
        end
        block (result v128) ;; label = @3
          i32.const 1
          v128.load
          i64.const 6
          call 0
        end
        f32x4.le
      end
      drop
    end
  )
  (func (;6;) (type 0)
    i64.const 1000000000032
    call 1
    i64.const 5
    call 0
    block ;; label = @1
      block (result v128) ;; label = @2
        block (result v128) ;; label = @3
          i32.const 0
          v128.load
          i64.const 4
          call 0
        end
        block (result v128) ;; label = @3
          i32.const 1
          v128.load
          i64.const 6
          call 0
        end
        f32x4.gt
      end
      drop
    end
  )
  (func (;7;) (type 0)
    i64.const 1000000000032
    call 1
    i64.const 5
    call 0
    block ;; label = @1
      block (result v128) ;; label = @2
        block (result v128) ;; label = @3
          i32.const 0
          v128.load
          i64.const 4
          call 0
        end
        block (result v128) ;; label = @3
          i32.const 1
          v128.load
          i64.const 6
          call 0
        end
        f32x4.ge
      end
      drop
    end
  )
  (func (;8;) (type 0)
    i64.const 1000000000064
    call 1
    i64.const 2
    call 0
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f32x4.eq
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 4
    call 0
    f32x4.eq
    f32x4.eq
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f32x4.eq
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 5
    call 0
    f32x4.eq
    f32x4.eq
    f32x4.eq
    drop
  )
  (func (;9;) (type 0)
    i64.const 1000000000064
    call 1
    i64.const 2
    call 0
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f32x4.ne
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 4
    call 0
    f32x4.ne
    f32x4.ne
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f32x4.ne
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 5
    call 0
    f32x4.ne
    f32x4.ne
    f32x4.ne
    drop
  )
  (func (;10;) (type 0)
    i64.const 1000000000064
    call 1
    i64.const 2
    call 0
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f32x4.lt
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 4
    call 0
    f32x4.lt
    f32x4.lt
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f32x4.lt
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 5
    call 0
    f32x4.lt
    f32x4.lt
    f32x4.lt
    drop
  )
  (func (;11;) (type 0)
    i64.const 1000000000064
    call 1
    i64.const 2
    call 0
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f32x4.le
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 4
    call 0
    f32x4.le
    f32x4.le
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f32x4.le
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 5
    call 0
    f32x4.le
    f32x4.le
    f32x4.le
    drop
  )
  (func (;12;) (type 0)
    i64.const 1000000000064
    call 1
    i64.const 2
    call 0
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f32x4.gt
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 4
    call 0
    f32x4.gt
    f32x4.gt
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f32x4.gt
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 5
    call 0
    f32x4.gt
    f32x4.gt
    f32x4.gt
    drop
  )
  (func (;13;) (type 0)
    i64.const 1000000000064
    call 1
    i64.const 2
    call 0
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f32x4.ge
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 4
    call 0
    f32x4.ge
    f32x4.ge
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f32x4.ge
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 5
    call 0
    f32x4.ge
    f32x4.ge
    f32x4.ge
    drop
  )
  (func (;14;) (type 0)
    i64.const 1000000000064
    call 1
    i64.const 2
    call 0
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f32x4.lt
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 4
    call 0
    f32x4.le
    f32x4.eq
    i32.const 0
    v128.load
    i64.const 2
    call 0
    i32.const 1
    v128.load
    i64.const 3
    call 0
    f32x4.gt
    i32.const 2
    v128.load
    i64.const 2
    call 0
    i32.const 3
    v128.load
    i64.const 5
    call 0
    f32x4.lt
    f32x4.ne
    f32x4.ge
    drop
  )
  (memory (;0;) 1)
  (export "eq-in-block" (func 2))
  (export "ne-in-block" (func 3))
  (export "lt-in-block" (func 4))
  (export "le-in-block" (func 5))
  (export "gt-in-block" (func 6))
  (export "ge-in-block" (func 7))
  (export "nested-eq" (func 8))
  (export "nested-ne" (func 9))
  (export "nested-lt" (func 10))
  (export "nested-le" (func 11))
  (export "nested-gt" (func 12))
  (export "nested-ge" (func 13))
  (export "as-param" (func 14))
)
(assert_return (invoke "eq-in-block"))
(assert_return (invoke "ne-in-block"))
(assert_return (invoke "lt-in-block"))
(assert_return (invoke "le-in-block"))
(assert_return (invoke "gt-in-block"))
(assert_return (invoke "ge-in-block"))
(assert_return (invoke "nested-eq"))
(assert_return (invoke "nested-ne"))
(assert_return (invoke "nested-lt"))
(assert_return (invoke "nested-le"))
(assert_return (invoke "nested-gt"))
(assert_return (invoke "nested-ge"))
(assert_return (invoke "as-param"))

;; Test operation with empty argument

