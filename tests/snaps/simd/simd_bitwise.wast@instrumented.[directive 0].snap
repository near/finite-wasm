(module
  (type (;0;) (func (param v128) (result v128)))
  (type (;1;) (func (param v128 v128) (result v128)))
  (type (;2;) (func (param v128 v128 v128) (result v128)))
  (type (;3;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 3)))
  (func (;2;) (type 0) (param $0 v128) (result v128)
    local.get $0
    v128.not
  )
  (func (;3;) (type 1) (param $0 v128) (param $1 v128) (result v128)
    local.get $0
    local.get $1
    v128.and
  )
  (func (;4;) (type 1) (param $0 v128) (param $1 v128) (result v128)
    local.get $0
    local.get $1
    v128.or
  )
  (func (;5;) (type 1) (param $0 v128) (param $1 v128) (result v128)
    local.get $0
    local.get $1
    v128.xor
  )
  (func (;6;) (type 2) (param $0 v128) (param $1 v128) (param $2 v128) (result v128)
    local.get $0
    local.get $1
    local.get $2
    v128.bitselect
  )
  (func (;7;) (type 1) (param $0 v128) (param $1 v128) (result v128)
    local.get $0
    local.get $1
    v128.andnot
  )
  (export "not" (func 2))
  (export "and" (func 3))
  (export "or" (func 4))
  (export "xor" (func 5))
  (export "bitselect" (func 6))
  (export "andnot" (func 7))
)