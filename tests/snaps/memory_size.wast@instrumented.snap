(module
  (type (;0;) (func (result i32)))
  (type (;1;) (func (param i32)))
  (type (;2;) (func (param i64)))
  (type (;3;) (func (param i64 i64)))
  (type (;4;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 2)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 4)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 4)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 4)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 4)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 4)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 4)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 3)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 3)))
  (memory (;0;) 0)
  (export "size" (func 9))
  (export "grow" (func 10))
  (func (;9;) (type 0) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call 7
      i64.const 1
      call 0
      memory.size
    end
    i64.const 4
    i64.const 0
    call 8
  )
  (func (;10;) (type 1) (param $sz i32)
    block ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 1
      call 0
      local.get $sz
      i64.const 1
      call 0
      memory.grow
      i64.const 1
      call 0
      drop
    end
    i64.const 4
    i64.const 1
    call 8
  )
)

(assert_return (invoke "size") (i32.const 0))
(assert_return (invoke "grow" (i32.const 1)))
(assert_return (invoke "size") (i32.const 1))
(assert_return (invoke "grow" (i32.const 4)))
(assert_return (invoke "size") (i32.const 5))
(assert_return (invoke "grow" (i32.const 0)))
(assert_return (invoke "size") (i32.const 5))

(module
  (type (;0;) (func (result i32)))
  (type (;1;) (func (param i32)))
  (type (;2;) (func (param i64)))
  (type (;3;) (func (param i64 i64)))
  (type (;4;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 2)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 4)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 4)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 4)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 4)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 4)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 4)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 3)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 3)))
  (memory (;0;) 1)
  (export "size" (func 9))
  (export "grow" (func 10))
  (func (;9;) (type 0) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call 7
      i64.const 1
      call 0
      memory.size
    end
    i64.const 4
    i64.const 0
    call 8
  )
  (func (;10;) (type 1) (param $sz i32)
    block ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 1
      call 0
      local.get $sz
      i64.const 1
      call 0
      memory.grow
      i64.const 1
      call 0
      drop
    end
    i64.const 4
    i64.const 1
    call 8
  )
)

(assert_return (invoke "size") (i32.const 1))
(assert_return (invoke "grow" (i32.const 1)))
(assert_return (invoke "size") (i32.const 2))
(assert_return (invoke "grow" (i32.const 4)))
(assert_return (invoke "size") (i32.const 6))
(assert_return (invoke "grow" (i32.const 0)))
(assert_return (invoke "size") (i32.const 6))

(module
  (type (;0;) (func (result i32)))
  (type (;1;) (func (param i32)))
  (type (;2;) (func (param i64)))
  (type (;3;) (func (param i64 i64)))
  (type (;4;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 2)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 4)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 4)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 4)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 4)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 4)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 4)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 3)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 3)))
  (memory (;0;) 0 2)
  (export "size" (func 9))
  (export "grow" (func 10))
  (func (;9;) (type 0) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call 7
      i64.const 1
      call 0
      memory.size
    end
    i64.const 4
    i64.const 0
    call 8
  )
  (func (;10;) (type 1) (param $sz i32)
    block ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 1
      call 0
      local.get $sz
      i64.const 1
      call 0
      memory.grow
      i64.const 1
      call 0
      drop
    end
    i64.const 4
    i64.const 1
    call 8
  )
)

(assert_return (invoke "size") (i32.const 0))
(assert_return (invoke "grow" (i32.const 3)))
(assert_return (invoke "size") (i32.const 0))
(assert_return (invoke "grow" (i32.const 1)))
(assert_return (invoke "size") (i32.const 1))
(assert_return (invoke "grow" (i32.const 0)))
(assert_return (invoke "size") (i32.const 1))
(assert_return (invoke "grow" (i32.const 4)))
(assert_return (invoke "size") (i32.const 1))
(assert_return (invoke "grow" (i32.const 1)))
(assert_return (invoke "size") (i32.const 2))

(module
  (type (;0;) (func (result i32)))
  (type (;1;) (func (param i32)))
  (type (;2;) (func (param i64)))
  (type (;3;) (func (param i64 i64)))
  (type (;4;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 2)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 4)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 4)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 4)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 4)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 4)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 4)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 3)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 3)))
  (memory (;0;) 3 8)
  (export "size" (func 9))
  (export "grow" (func 10))
  (func (;9;) (type 0) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call 7
      i64.const 1
      call 0
      memory.size
    end
    i64.const 4
    i64.const 0
    call 8
  )
  (func (;10;) (type 1) (param $sz i32)
    block ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 1
      call 0
      local.get $sz
      i64.const 1
      call 0
      memory.grow
      i64.const 1
      call 0
      drop
    end
    i64.const 4
    i64.const 1
    call 8
  )
)

(assert_return (invoke "size") (i32.const 3))
(assert_return (invoke "grow" (i32.const 1)))
(assert_return (invoke "size") (i32.const 4))
(assert_return (invoke "grow" (i32.const 3)))
(assert_return (invoke "size") (i32.const 7))
(assert_return (invoke "grow" (i32.const 0)))
(assert_return (invoke "size") (i32.const 7))
(assert_return (invoke "grow" (i32.const 2)))
(assert_return (invoke "size") (i32.const 7))
(assert_return (invoke "grow" (i32.const 1)))
(assert_return (invoke "size") (i32.const 8))


;; Type errors

