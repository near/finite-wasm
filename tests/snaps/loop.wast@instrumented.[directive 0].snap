(module
  (type $check (;0;) (func (param i32 i32) (result i32)))
  (type $block-sig-1 (;1;) (func))
  (type $block-sig-2 (;2;) (func (result i32)))
  (type $block-sig-3 (;3;) (func (param i32)))
  (type $block-sig-4 (;4;) (func (param i32 f64 i32) (result i32 f64 i32)))
  (type (;5;) (func (result i32 i64 i32)))
  (type (;6;) (func (param i32) (result i32)))
  (type (;7;) (func (result i32 i32)))
  (type (;8;) (func (result f32 f32)))
  (type (;9;) (func (result i32 i32 i64)))
  (type (;10;) (func (param i32 i32 i64)))
  (type (;11;) (func (param i32 i32) (result i32 i32)))
  (type (;12;) (func (param i64) (result i64)))
  (type (;13;) (func (param f32 f32) (result f32)))
  (type (;14;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 14)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;1;) (type 14)))
  (func $dummy (;2;) (type $block-sig-1)
    i64.const 1000000000000
    call $finite_wasm_stack
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;3;) (type $block-sig-1)
    i64.const 1000000000000
    call $finite_wasm_stack
    i64.const 5
    call $finite_wasm_gas
    loop ;; label = @1
    end
    loop $l ;; label = @1
    end
  )
  (func (;4;) (type $block-sig-2) (result i32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 7
    call $finite_wasm_gas
    loop ;; label = @1
      nop
    end
    loop (result i32) ;; label = @1
      i32.const 7
    end
  )
  (func (;5;) (type $block-sig-2) (result i32)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    loop ;; label = @1
      call $dummy
      i64.const 1
      call $finite_wasm_gas
      call $dummy
      i64.const 1
      call $finite_wasm_gas
      call $dummy
      i64.const 1
      call $finite_wasm_gas
      call $dummy
      i64.const 3
      call $finite_wasm_gas
    end
    loop (result i32) ;; label = @1
      call $dummy
      i64.const 1
      call $finite_wasm_gas
      call $dummy
      i64.const 2
      call $finite_wasm_gas
      i32.const 8
      call $dummy
      i64.const 4
      call $finite_wasm_gas
    end
    drop
    loop (type 5) (result i32 i64 i32) ;; label = @1
      call $dummy
      i64.const 1
      call $finite_wasm_gas
      call $dummy
      i64.const 1
      call $finite_wasm_gas
      call $dummy
      i64.const 2
      call $finite_wasm_gas
      i32.const 8
      call $dummy
      i64.const 1
      call $finite_wasm_gas
      call $dummy
      i64.const 1
      call $finite_wasm_gas
      call $dummy
      i64.const 1
      call $finite_wasm_gas
      call $dummy
      i64.const 2
      call $finite_wasm_gas
      i64.const 7
      call $dummy
      i64.const 1
      call $finite_wasm_gas
      call $dummy
      i64.const 1
      call $finite_wasm_gas
      call $dummy
      i64.const 1
      call $finite_wasm_gas
      call $dummy
      i64.const 2
      call $finite_wasm_gas
      i32.const 9
      call $dummy
      i64.const 4
      call $finite_wasm_gas
    end
    drop
    drop
  )
  (func (;6;) (type $block-sig-2) (result i32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    loop (result i32) ;; label = @1
      loop ;; label = @2
        call $dummy
        i64.const 6
        call $finite_wasm_gas
        block ;; label = @3
        end
        nop
      end
      loop (result i32) ;; label = @2
        call $dummy
        i64.const 4
        call $finite_wasm_gas
        i32.const 9
      end
    end
  )
  (func (;7;) (type $block-sig-2) (result i32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 41
    call $finite_wasm_gas
    loop (result i32) ;; label = @1
      block (result i32) ;; label = @2
        loop (result i32) ;; label = @3
          block (result i32) ;; label = @4
            loop (result i32) ;; label = @5
              block (result i32) ;; label = @6
                loop (result i32) ;; label = @7
                  block (result i32) ;; label = @8
                    loop (result i32) ;; label = @9
                      block (result i32) ;; label = @10
                        loop (result i32) ;; label = @11
                          block (result i32) ;; label = @12
                            loop (result i32) ;; label = @13
                              block (result i32) ;; label = @14
                                loop (result i32) ;; label = @15
                                  block (result i32) ;; label = @16
                                    loop (result i32) ;; label = @17
                                      block (result i32) ;; label = @18
                                        loop (result i32) ;; label = @19
                                          block (result i32) ;; label = @20
                                            loop (result i32) ;; label = @21
                                              block (result i32) ;; label = @22
                                                loop (result i32) ;; label = @23
                                                  block (result i32) ;; label = @24
                                                    loop (result i32) ;; label = @25
                                                      block (result i32) ;; label = @26
                                                        loop (result i32) ;; label = @27
                                                          block (result i32) ;; label = @28
                                                            loop (result i32) ;; label = @29
                                                              block (result i32) ;; label = @30
                                                                loop (result i32) ;; label = @31
                                                                  block (result i32) ;; label = @32
                                                                    loop (result i32) ;; label = @33
                                                                      block (result i32) ;; label = @34
                                                                        loop (result i32) ;; label = @35
                                                                          block (result i32) ;; label = @36
                                                                            loop (result i32) ;; label = @37
                                                                              block (result i32) ;; label = @38
                                                                                loop (result i32) ;; label = @39
                                                                                  block (result i32) ;; label = @40
                                                                                    call $dummy
                                                                                    i64.const 42
                                                                                    call $finite_wasm_gas
                                                                                    i32.const 150
                                                                                  end
                                                                                end
                                                                              end
                                                                            end
                                                                          end
                                                                        end
                                                                      end
                                                                    end
                                                                  end
                                                                end
                                                              end
                                                            end
                                                          end
                                                        end
                                                      end
                                                    end
                                                  end
                                                end
                                              end
                                            end
                                          end
                                        end
                                      end
                                    end
                                  end
                                end
                              end
                            end
                          end
                        end
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end
  )
  (func (;8;) (type $block-sig-2) (result i32)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 7
    call $finite_wasm_gas
    loop (result i32) ;; label = @1
      i32.const 1
    end
    i32.const 2
    i32.const 3
    select
  )
  (func (;9;) (type $block-sig-2) (result i32)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 7
    call $finite_wasm_gas
    i32.const 2
    loop (result i32) ;; label = @1
      i32.const 1
    end
    i32.const 3
    select
  )
  (func (;10;) (type $block-sig-2) (result i32)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 7
    call $finite_wasm_gas
    i32.const 2
    i32.const 3
    loop (result i32) ;; label = @1
      i32.const 1
    end
    select
  )
  (func (;11;) (type $block-sig-1)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    loop (result i32) ;; label = @1
      i32.const 1
    end
    if ;; label = @1
      i64.const 1
      call $finite_wasm_gas
      call $dummy
      i64.const 1
      call $finite_wasm_gas
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;12;) (type $block-sig-2) (result i32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    i32.const 1
    if (result i32) ;; label = @1
      i64.const 4
      call $finite_wasm_gas
      loop (result i32) ;; label = @2
        i32.const 1
      end
    else
      i64.const 2
      call $finite_wasm_gas
      i32.const 2
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;13;) (type $block-sig-2) (result i32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    i32.const 1
    if (result i32) ;; label = @1
      i64.const 2
      call $finite_wasm_gas
      i32.const 2
    else
      i64.const 4
      call $finite_wasm_gas
      loop (result i32) ;; label = @2
        i32.const 1
      end
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;14;) (type $block-sig-2) (result i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 6
    call $finite_wasm_gas
    block (result i32) ;; label = @1
      loop (result i32) ;; label = @2
        i32.const 1
      end
      i32.const 2
      br_if 0 (;@1;)
      i64.const 1
      call $finite_wasm_gas
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;15;) (type $block-sig-2) (result i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 6
    call $finite_wasm_gas
    block (result i32) ;; label = @1
      i32.const 2
      loop (result i32) ;; label = @2
        i32.const 1
      end
      br_if 0 (;@1;)
      i64.const 1
      call $finite_wasm_gas
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;16;) (type $block-sig-2) (result i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 6
    call $finite_wasm_gas
    block (result i32) ;; label = @1
      loop (result i32) ;; label = @2
        i32.const 1
      end
      i32.const 2
      br_table 0 (;@1;) 0 (;@1;)
      i64.const 1
      call $finite_wasm_gas
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;17;) (type $block-sig-2) (result i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 6
    call $finite_wasm_gas
    block (result i32) ;; label = @1
      i32.const 2
      loop (result i32) ;; label = @2
        i32.const 1
      end
      br_table 0 (;@1;) 0 (;@1;)
      i64.const 1
      call $finite_wasm_gas
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func $func (;18;) (type $check) (param i32 i32) (result i32)
    i64.const 1000001000004
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    local.get 0
  )
  (func (;19;) (type $block-sig-2) (result i32)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 7
    call $finite_wasm_gas
    block (result i32) ;; label = @1
      loop (result i32) ;; label = @2
        i32.const 1
      end
      i32.const 2
      i32.const 0
      call_indirect (type $check)
      i64.const 2
      call $finite_wasm_gas
    end
  )
  (func (;20;) (type $block-sig-2) (result i32)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 7
    call $finite_wasm_gas
    block (result i32) ;; label = @1
      i32.const 2
      loop (result i32) ;; label = @2
        i32.const 1
      end
      i32.const 0
      call_indirect (type $check)
      i64.const 2
      call $finite_wasm_gas
    end
  )
  (func (;21;) (type $block-sig-2) (result i32)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 7
    call $finite_wasm_gas
    block (result i32) ;; label = @1
      i32.const 1
      i32.const 2
      loop (result i32) ;; label = @2
        i32.const 0
      end
      call_indirect (type $check)
      i64.const 2
      call $finite_wasm_gas
    end
  )
  (func (;22;) (type $block-sig-1)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 5
    call $finite_wasm_gas
    loop (result i32) ;; label = @1
      i32.const 1
    end
    i32.const 1
    i32.store
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;23;) (type $block-sig-1)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 5
    call $finite_wasm_gas
    i32.const 10
    loop (result i32) ;; label = @1
      i32.const 1
    end
    i32.store
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;24;) (type $block-sig-2) (result i32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    loop (result i32) ;; label = @1
      i32.const 1
    end
    i64.const 1
    call $finite_wasm_gas
    memory.grow
    i64.const 1
    call $finite_wasm_gas
  )
  (func $f (;25;) (type 6) (param i32) (result i32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    local.get 0
  )
  (func (;26;) (type $block-sig-2) (result i32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    loop (result i32) ;; label = @1
      i32.const 1
    end
    call $f
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;27;) (type $block-sig-2) (result i32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    loop (result i32) ;; label = @1
      i32.const 1
    end
    return
  )
  (func (;28;) (type $block-sig-1)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 5
    call $finite_wasm_gas
    loop (result i32) ;; label = @1
      i32.const 1
    end
    drop
  )
  (func (;29;) (type $block-sig-2) (result i32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 5
    call $finite_wasm_gas
    block (result i32) ;; label = @1
      loop (result i32) ;; label = @2
        i32.const 1
      end
      br 0 (;@1;)
      i64.const 1
      call $finite_wasm_gas
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;30;) (type $block-sig-2) (result i32)
    (local i32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 6
    call $finite_wasm_gas
    loop (result i32) ;; label = @1
      i32.const 1
    end
    local.set 0
    local.get 0
  )
  (func (;31;) (type $block-sig-2) (result i32)
    (local i32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 5
    call $finite_wasm_gas
    loop (result i32) ;; label = @1
      i32.const 1
    end
    local.tee 0
  )
  (func (;32;) (type $block-sig-2) (result i32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 6
    call $finite_wasm_gas
    loop (result i32) ;; label = @1
      i32.const 1
    end
    global.set $a
    global.get $a
  )
  (func (;33;) (type $block-sig-2) (result i32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    loop (result i32) ;; label = @1
      i32.const 1
    end
    i32.load
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;34;) (type $block-sig-2) (result i32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    loop (result i32) ;; label = @1
      call $dummy
      i64.const 4
      call $finite_wasm_gas
      i32.const 13
    end
    i32.ctz
  )
  (func (;35;) (type $block-sig-2) (result i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    loop (result i32) ;; label = @1
      call $dummy
      i64.const 4
      call $finite_wasm_gas
      i32.const 3
    end
    loop (result i32) ;; label = @1
      call $dummy
      i64.const 4
      call $finite_wasm_gas
      i32.const 4
    end
    i32.mul
  )
  (func (;36;) (type $block-sig-2) (result i32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    loop (result i32) ;; label = @1
      call $dummy
      i64.const 4
      call $finite_wasm_gas
      i32.const 13
    end
    i32.eqz
  )
  (func (;37;) (type $block-sig-2) (result i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    loop (result f32) ;; label = @1
      call $dummy
      i64.const 4
      call $finite_wasm_gas
      f32.const 0x1.8p+1 (;=3;)
    end
    loop (result f32) ;; label = @1
      call $dummy
      i64.const 4
      call $finite_wasm_gas
      f32.const 0x1.8p+1 (;=3;)
    end
    f32.gt
  )
  (func (;38;) (type $block-sig-2) (result i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    loop (type 7) (result i32 i32) ;; label = @1
      call $dummy
      i64.const 2
      call $finite_wasm_gas
      i32.const 3
      call $dummy
      i64.const 4
      call $finite_wasm_gas
      i32.const 4
    end
    i32.mul
  )
  (func (;39;) (type $block-sig-2) (result i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    loop (type 8) (result f32 f32) ;; label = @1
      call $dummy
      i64.const 2
      call $finite_wasm_gas
      f32.const 0x1.8p+1 (;=3;)
      call $dummy
      i64.const 4
      call $finite_wasm_gas
      f32.const 0x1.8p+1 (;=3;)
    end
    f32.gt
  )
  (func (;40;) (type $block-sig-2) (result i32)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    loop (type 7) (result i32 i32) ;; label = @1
      call $dummy
      i64.const 2
      call $finite_wasm_gas
      i32.const 3
      call $dummy
      i64.const 6
      call $finite_wasm_gas
      i32.const 4
    end
    i32.const 5
    i32.add
    i32.mul
  )
  (func (;41;) (type $block-sig-2) (result i32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    block ;; label = @1
      loop ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        br 1 (;@1;)
        br 0 (;@2;)
        unreachable
        i64.const 2
        call $finite_wasm_gas
      end
    end
    i64.const 4
    call $finite_wasm_gas
    block ;; label = @1
      loop ;; label = @2
        i32.const 1
        br_if 1 (;@1;)
        i64.const 1
        call $finite_wasm_gas
        unreachable
        i64.const 2
        call $finite_wasm_gas
      end
    end
    i64.const 4
    call $finite_wasm_gas
    block ;; label = @1
      loop ;; label = @2
        i32.const 0
        br_table 1 (;@1;)
        unreachable
        i64.const 2
        call $finite_wasm_gas
      end
    end
    i64.const 4
    call $finite_wasm_gas
    block ;; label = @1
      loop ;; label = @2
        i32.const 1
        br_table 1 (;@1;) 1 (;@1;) 1 (;@1;)
        unreachable
        i64.const 2
        call $finite_wasm_gas
      end
    end
    i64.const 2
    call $finite_wasm_gas
    i32.const 19
  )
  (func (;42;) (type $block-sig-2) (result i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    block (result i32) ;; label = @1
      i32.const 0
      loop (type $block-sig-3) (param i32) ;; label = @2
        i64.const 3
        call $finite_wasm_gas
        block ;; label = @3
          i32.const 18
          br 2 (;@1;)
          i64.const 3
          call $finite_wasm_gas
        end
        i32.const 20
        br 0 (;@2;)
        i64.const 3
        call $finite_wasm_gas
      end
      i32.const 19
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;43;) (type 9) (result i32 i32 i64)
    i64.const 1000000000032
    call $finite_wasm_stack
    i64.const 5
    call $finite_wasm_gas
    block (type 9) (result i32 i32 i64) ;; label = @1
      i32.const 0
      i32.const 0
      i64.const 0
      loop (type 10) (param i32 i32 i64) ;; label = @2
        i64.const 5
        call $finite_wasm_gas
        block ;; label = @3
          i32.const 18
          i32.const -18
          i64.const 18
          br 2 (;@1;)
          i64.const 5
          call $finite_wasm_gas
        end
        i32.const 20
        i32.const -20
        i64.const 20
        br 0 (;@2;)
        i64.const 5
        call $finite_wasm_gas
      end
      i32.const 19
      i32.const -19
      i64.const 19
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;44;) (type $block-sig-2) (result i32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    block (result i32) ;; label = @1
      loop (result i32) ;; label = @2
        i32.const 18
        br 1 (;@1;)
        i32.const 19
        br 1 (;@1;)
        i32.const 20
        i32.const 0
        br_if 1 (;@1;)
        drop
        i32.const 20
        i32.const 1
        br_if 1 (;@1;)
        drop
        i32.const 21
        br 1 (;@1;)
        i32.const 22
        i32.const 0
        br_table 1 (;@1;)
        i32.const 23
        i32.const 1
        br_table 1 (;@1;) 1 (;@1;) 1 (;@1;)
        i32.const 21
        i64.const 2
        call $finite_wasm_gas
      end
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;45;) (type $block-sig-2) (result i32)
    (local i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 8
    call $finite_wasm_gas
    i32.const 0
    local.set 0
    local.get 0
    block (result i32) ;; label = @1
      loop (result i32) ;; label = @2
        block (result i32) ;; label = @3
          i32.const 1
          br 2 (;@1;)
          i64.const 3
          call $finite_wasm_gas
        end
      end
    end
    i64.const 8
    call $finite_wasm_gas
    i32.add
    local.set 0
    local.get 0
    block (result i32) ;; label = @1
      loop (result i32) ;; label = @2
        loop (result i32) ;; label = @3
          i32.const 2
          br 2 (;@1;)
          i64.const 3
          call $finite_wasm_gas
        end
      end
    end
    i64.const 9
    call $finite_wasm_gas
    i32.add
    local.set 0
    local.get 0
    block (result i32) ;; label = @1
      loop (result i32) ;; label = @2
        block (result i32) ;; label = @3
          loop (result i32) ;; label = @4
            i32.const 4
            br 1 (;@3;)
            i64.const 2
            call $finite_wasm_gas
          end
        end
        i64.const 9
        call $finite_wasm_gas
      end
    end
    i32.add
    local.set 0
    local.get 0
    block (result i32) ;; label = @1
      loop (result i32) ;; label = @2
        i32.const 8
        br 1 (;@1;)
        i32.ctz
        i64.const 2
        call $finite_wasm_gas
      end
    end
    i64.const 8
    call $finite_wasm_gas
    i32.add
    local.set 0
    local.get 0
    block (result i32) ;; label = @1
      loop (result i32) ;; label = @2
        loop (result i32) ;; label = @3
          i32.const 16
          br 2 (;@1;)
          i64.const 4
          call $finite_wasm_gas
        end
        i32.ctz
      end
    end
    i64.const 4
    call $finite_wasm_gas
    i32.add
    local.set 0
    local.get 0
  )
  (func (;46;) (type $block-sig-2) (result i32)
    (local i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    i32.const 0
    local.set 0
    local.get 0
    loop (result i32) ;; label = @1
      i64.const 2
      call $finite_wasm_gas
      loop (result i32) ;; label = @2
        br 1 (;@1;)
        i64.const 6
        call $finite_wasm_gas
      end
    end
    i32.add
    local.set 0
    local.get 0
    loop (result i32) ;; label = @1
      i64.const 1
      call $finite_wasm_gas
      br 0 (;@1;)
      i32.ctz
      i64.const 5
      call $finite_wasm_gas
    end
    i32.add
    local.set 0
    local.get 0
    loop (result i32) ;; label = @1
      i64.const 2
      call $finite_wasm_gas
      loop (result i32) ;; label = @2
        br 1 (;@1;)
        i64.const 7
        call $finite_wasm_gas
      end
      i32.ctz
    end
    i32.add
    local.set 0
    local.get 0
  )
  (func (;47;) (type $block-sig-2) (result i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 6
    call $finite_wasm_gas
    i32.const 1
    loop (type 6) (param i32) (result i32) ;; label = @1
      i32.const 2
      i32.add
    end
  )
  (func (;48;) (type $block-sig-2) (result i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 6
    call $finite_wasm_gas
    i32.const 1
    i32.const 2
    loop (type $check) (param i32 i32) (result i32) ;; label = @1
      i32.add
    end
  )
  (func (;49;) (type $block-sig-2) (result i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 6
    call $finite_wasm_gas
    i32.const 1
    i32.const 2
    loop (type 11) (param i32 i32) (result i32 i32) ;; label = @1
    end
    i32.add
  )
  (func (;50;) (type $block-sig-2) (result i32)
    (local $x i32)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    i32.const 1
    loop (type 6) (param i32) (result i32) ;; label = @1
      i64.const 7
      call $finite_wasm_gas
      i32.const 4
      i32.add
      local.tee $x
      local.get $x
      i32.const 10
      i32.lt_u
      br_if 0 (;@1;)
      i64.const 2
      call $finite_wasm_gas
    end
  )
  (func (;51;) (type $block-sig-2) (result i32)
    (local $x i32)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    i32.const 1
    i32.const 2
    loop (type $check) (param i32 i32) (result i32) ;; label = @1
      i64.const 7
      call $finite_wasm_gas
      i32.add
      local.tee $x
      i32.const 3
      local.get $x
      i32.const 10
      i32.lt_u
      br_if 0 (;@1;)
      i64.const 3
      call $finite_wasm_gas
      drop
    end
  )
  (func (;52;) (type $block-sig-2) (result i32)
    (local $x i32)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 5
    call $finite_wasm_gas
    i32.const 0
    local.set $x
    i32.const 1
    i32.const 2
    loop (type 11) (param i32 i32) (result i32 i32) ;; label = @1
      i64.const 8
      call $finite_wasm_gas
      local.get $x
      i32.const 1
      i32.add
      local.set $x
      local.get $x
      i32.const 10
      i32.lt_u
      br_if 0 (;@1;)
      i64.const 3
      call $finite_wasm_gas
    end
    i32.add
  )
  (func $fx (;53;) (type $block-sig-2) (result i32)
    (local i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 17
    call $finite_wasm_gas
    block ;; label = @1
      loop ;; label = @2
        i32.const 1
        local.set 0
        local.get 0
        i32.const 3
        i32.mul
        local.set 0
        local.get 0
        i32.const 5
        i32.sub
        local.set 0
        local.get 0
        i32.const 7
        i32.mul
        local.set 0
        br 1 (;@1;)
        local.get 0
        i32.const 100
        i32.mul
        local.set 0
        i64.const 2
        call $finite_wasm_gas
      end
    end
    i64.const 4
    call $finite_wasm_gas
    local.get 0
    i32.const -14
    i32.eq
  )
  (func (;54;) (type 12) (param i64) (result i64)
    (local i64)
    i64.const 1000001000016
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    i64.const 1
    local.set 1
    block ;; label = @1
      loop ;; label = @2
        i64.const 3
        call $finite_wasm_gas
        local.get 0
        i64.eqz
        br_if 1 (;@1;)
        i64.const 9
        call $finite_wasm_gas
        local.get 0
        local.get 1
        i64.mul
        local.set 1
        local.get 0
        i64.const 1
        i64.sub
        local.set 0
        br 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
      end
    end
    i64.const 2
    call $finite_wasm_gas
    local.get 1
  )
  (func (;55;) (type 12) (param i64) (result i64)
    (local i64 i64)
    i64.const 1000002000016
    call $finite_wasm_stack
    i64.const 6
    call $finite_wasm_gas
    i64.const 1
    local.set 1
    i64.const 2
    local.set 2
    block ;; label = @1
      loop ;; label = @2
        i64.const 4
        call $finite_wasm_gas
        local.get 2
        local.get 0
        i64.gt_u
        br_if 1 (;@1;)
        i64.const 9
        call $finite_wasm_gas
        local.get 1
        local.get 2
        i64.mul
        local.set 1
        local.get 2
        i64.const 1
        i64.add
        local.set 2
        br 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
      end
    end
    i64.const 2
    call $finite_wasm_gas
    local.get 1
  )
  (func (;56;) (type 13) (param f32 f32) (result f32)
    (local f32 f32)
    i64.const 1000003000008
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    block ;; label = @1
      loop ;; label = @2
        i64.const 4
        call $finite_wasm_gas
        local.get 0
        f32.const 0x0p+0 (;=0;)
        f32.eq
        br_if 1 (;@1;)
        i64.const 4
        call $finite_wasm_gas
        local.get 1
        local.set 2
        block ;; label = @3
          loop ;; label = @4
            i64.const 4
            call $finite_wasm_gas
            local.get 2
            f32.const 0x0p+0 (;=0;)
            f32.eq
            br_if 1 (;@3;)
            i64.const 4
            call $finite_wasm_gas
            local.get 2
            f32.const 0x0p+0 (;=0;)
            f32.lt
            br_if 3 (;@1;)
            i64.const 9
            call $finite_wasm_gas
            local.get 3
            local.get 2
            f32.add
            local.set 3
            local.get 2
            f32.const 0x1p+1 (;=2;)
            f32.sub
            local.set 2
            br 0 (;@4;)
            i64.const 2
            call $finite_wasm_gas
          end
        end
        i64.const 9
        call $finite_wasm_gas
        local.get 3
        local.get 0
        f32.div
        local.set 3
        local.get 0
        f32.const 0x1p+0 (;=1;)
        f32.sub
        local.set 0
        br 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
      end
    end
    i64.const 2
    call $finite_wasm_gas
    local.get 3
  )
  (func (;57;) (type $block-sig-1)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 31
    call $finite_wasm_gas
    loop ;; label = @1
    end
    loop (result i32) ;; label = @1
      i32.const 0
    end
    loop (type $block-sig-3) (param i32) ;; label = @1
      drop
    end
    i32.const 0
    f64.const 0x0p+0 (;=0;)
    i32.const 0
    loop (type $block-sig-4) (param i32 f64 i32) (result i32 f64 i32) ;; label = @1
    end
    drop
    drop
    drop
    loop (result i32) ;; label = @1
      i32.const 0
    end
    loop (type $block-sig-3) (param i32) ;; label = @1
      drop
    end
    i32.const 0
    f64.const 0x0p+0 (;=0;)
    i32.const 0
    loop (type $block-sig-4) (param i32 f64 i32) (result i32 f64 i32) ;; label = @1
    end
    drop
    drop
    drop
  )
  (table (;0;) 1 1 funcref)
  (memory (;0;) 1)
  (global $a (;0;) (mut i32) i32.const 0)
  (export "empty" (func 3))
  (export "singular" (func 4))
  (export "multi" (func 5))
  (export "nested" (func 6))
  (export "deep" (func 7))
  (export "as-select-first" (func 8))
  (export "as-select-mid" (func 9))
  (export "as-select-last" (func 10))
  (export "as-if-condition" (func 11))
  (export "as-if-then" (func 12))
  (export "as-if-else" (func 13))
  (export "as-br_if-first" (func 14))
  (export "as-br_if-last" (func 15))
  (export "as-br_table-first" (func 16))
  (export "as-br_table-last" (func 17))
  (export "as-call_indirect-first" (func 19))
  (export "as-call_indirect-mid" (func 20))
  (export "as-call_indirect-last" (func 21))
  (export "as-store-first" (func 22))
  (export "as-store-last" (func 23))
  (export "as-memory.grow-value" (func 24))
  (export "as-call-value" (func 26))
  (export "as-return-value" (func 27))
  (export "as-drop-operand" (func 28))
  (export "as-br-value" (func 29))
  (export "as-local.set-value" (func 30))
  (export "as-local.tee-value" (func 31))
  (export "as-global.set-value" (func 32))
  (export "as-load-operand" (func 33))
  (export "as-unary-operand" (func 34))
  (export "as-binary-operand" (func 35))
  (export "as-test-operand" (func 36))
  (export "as-compare-operand" (func 37))
  (export "as-binary-operands" (func 38))
  (export "as-compare-operands" (func 39))
  (export "as-mixed-operands" (func 40))
  (export "break-bare" (func 41))
  (export "break-value" (func 42))
  (export "break-multi-value" (func 43))
  (export "break-repeated" (func 44))
  (export "break-inner" (func 45))
  (export "cont-inner" (func 46))
  (export "param" (func 47))
  (export "params" (func 48))
  (export "params-id" (func 49))
  (export "param-break" (func 50))
  (export "params-break" (func 51))
  (export "params-id-break" (func 52))
  (export "effects" (func $fx))
  (export "while" (func 54))
  (export "for" (func 55))
  (export "nesting" (func 56))
  (export "type-use" (func 57))
  (elem (;0;) (i32.const 0) func)
)