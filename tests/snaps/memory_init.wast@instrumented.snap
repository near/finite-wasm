(module
  (type (;0;) (func))
  (type (;1;) (func (param i32) (result i32)))
  (type (;2;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 2)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (func (;2;) (type 0)
    i64.const 1000000000000
    call 1
    i64.const 2
    call 0
    nop
  )
  (func (;3;) (type 1) (param i32) (result i32)
    i64.const 1000000000004
    call 1
    i64.const 2
    call 0
    local.get 0
    i32.load8_u
    i64.const 1
    call 0
  )
  (memory (;0;) 1 1)
  (export "memory0" (memory 0))
  (export "test" (func 2))
  (export "load8_u" (func 3))
  (data (;0;) (i32.const 2) "\03\01\04\01")
  (data (;1;) "\02\07\01\08")
  (data (;2;) (i32.const 12) "\07\05\02\03\06")
  (data (;3;) "\05\09\02\07\06")
)
(invoke "test")

(assert_return (invoke "load8_u" (i32.const 0)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 1)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 2)) (i32.const 3))
(assert_return (invoke "load8_u" (i32.const 3)) (i32.const 1))
(assert_return (invoke "load8_u" (i32.const 4)) (i32.const 4))
(assert_return (invoke "load8_u" (i32.const 5)) (i32.const 1))
(assert_return (invoke "load8_u" (i32.const 6)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 7)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 8)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 9)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 10)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 11)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 12)) (i32.const 7))
(assert_return (invoke "load8_u" (i32.const 13)) (i32.const 5))
(assert_return (invoke "load8_u" (i32.const 14)) (i32.const 2))
(assert_return (invoke "load8_u" (i32.const 15)) (i32.const 3))
(assert_return (invoke "load8_u" (i32.const 16)) (i32.const 6))
(assert_return (invoke "load8_u" (i32.const 17)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 18)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 19)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 20)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 21)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 22)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 23)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 24)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 25)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 26)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 27)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 28)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 29)) (i32.const 0))

(module
  (type (;0;) (func))
  (type (;1;) (func (param i32) (result i32)))
  (type (;2;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 2)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (func (;2;) (type 0)
    i64.const 1000000000012
    call 1
    i64.const 3
    call 0
    i32.const 7
    i32.const 0
    i32.const 4
    i64.const 1
    call 0
    memory.init 1
    i64.const 1
    call 0
  )
  (func (;3;) (type 1) (param i32) (result i32)
    i64.const 1000000000004
    call 1
    i64.const 2
    call 0
    local.get 0
    i32.load8_u
    i64.const 1
    call 0
  )
  (memory (;0;) 1 1)
  (export "memory0" (memory 0))
  (export "test" (func 2))
  (export "load8_u" (func 3))
  (data (;0;) (i32.const 2) "\03\01\04\01")
  (data (;1;) "\02\07\01\08")
  (data (;2;) (i32.const 12) "\07\05\02\03\06")
  (data (;3;) "\05\09\02\07\06")
)
(invoke "test")

(assert_return (invoke "load8_u" (i32.const 0)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 1)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 2)) (i32.const 3))
(assert_return (invoke "load8_u" (i32.const 3)) (i32.const 1))
(assert_return (invoke "load8_u" (i32.const 4)) (i32.const 4))
(assert_return (invoke "load8_u" (i32.const 5)) (i32.const 1))
(assert_return (invoke "load8_u" (i32.const 6)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 7)) (i32.const 2))
(assert_return (invoke "load8_u" (i32.const 8)) (i32.const 7))
(assert_return (invoke "load8_u" (i32.const 9)) (i32.const 1))
(assert_return (invoke "load8_u" (i32.const 10)) (i32.const 8))
(assert_return (invoke "load8_u" (i32.const 11)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 12)) (i32.const 7))
(assert_return (invoke "load8_u" (i32.const 13)) (i32.const 5))
(assert_return (invoke "load8_u" (i32.const 14)) (i32.const 2))
(assert_return (invoke "load8_u" (i32.const 15)) (i32.const 3))
(assert_return (invoke "load8_u" (i32.const 16)) (i32.const 6))
(assert_return (invoke "load8_u" (i32.const 17)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 18)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 19)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 20)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 21)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 22)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 23)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 24)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 25)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 26)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 27)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 28)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 29)) (i32.const 0))

(module
  (type (;0;) (func))
  (type (;1;) (func (param i32) (result i32)))
  (type (;2;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 2)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (func (;2;) (type 0)
    i64.const 1000000000012
    call 1
    i64.const 3
    call 0
    i32.const 15
    i32.const 1
    i32.const 3
    i64.const 1
    call 0
    memory.init 3
    i64.const 1
    call 0
  )
  (func (;3;) (type 1) (param i32) (result i32)
    i64.const 1000000000004
    call 1
    i64.const 2
    call 0
    local.get 0
    i32.load8_u
    i64.const 1
    call 0
  )
  (memory (;0;) 1 1)
  (export "memory0" (memory 0))
  (export "test" (func 2))
  (export "load8_u" (func 3))
  (data (;0;) (i32.const 2) "\03\01\04\01")
  (data (;1;) "\02\07\01\08")
  (data (;2;) (i32.const 12) "\07\05\02\03\06")
  (data (;3;) "\05\09\02\07\06")
)
(invoke "test")

(assert_return (invoke "load8_u" (i32.const 0)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 1)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 2)) (i32.const 3))
(assert_return (invoke "load8_u" (i32.const 3)) (i32.const 1))
(assert_return (invoke "load8_u" (i32.const 4)) (i32.const 4))
(assert_return (invoke "load8_u" (i32.const 5)) (i32.const 1))
(assert_return (invoke "load8_u" (i32.const 6)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 7)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 8)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 9)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 10)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 11)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 12)) (i32.const 7))
(assert_return (invoke "load8_u" (i32.const 13)) (i32.const 5))
(assert_return (invoke "load8_u" (i32.const 14)) (i32.const 2))
(assert_return (invoke "load8_u" (i32.const 15)) (i32.const 9))
(assert_return (invoke "load8_u" (i32.const 16)) (i32.const 2))
(assert_return (invoke "load8_u" (i32.const 17)) (i32.const 7))
(assert_return (invoke "load8_u" (i32.const 18)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 19)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 20)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 21)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 22)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 23)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 24)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 25)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 26)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 27)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 28)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 29)) (i32.const 0))

(module
  (type (;0;) (func))
  (type (;1;) (func (param i32) (result i32)))
  (type (;2;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 2)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (func (;2;) (type 0)
    i64.const 1000000000012
    call 1
    i64.const 3
    call 0
    i32.const 7
    i32.const 0
    i32.const 4
    i64.const 1
    call 0
    memory.init 1
    i64.const 4
    call 0
    data.drop 1
    i32.const 15
    i32.const 1
    i32.const 3
    i64.const 1
    call 0
    memory.init 3
    i64.const 4
    call 0
    data.drop 3
    i32.const 20
    i32.const 15
    i32.const 5
    i64.const 1
    call 0
    memory.copy
    i64.const 3
    call 0
    i32.const 21
    i32.const 29
    i32.const 1
    i64.const 1
    call 0
    memory.copy
    i64.const 3
    call 0
    i32.const 24
    i32.const 10
    i32.const 1
    i64.const 1
    call 0
    memory.copy
    i64.const 3
    call 0
    i32.const 13
    i32.const 11
    i32.const 4
    i64.const 1
    call 0
    memory.copy
    i64.const 3
    call 0
    i32.const 19
    i32.const 20
    i32.const 5
    i64.const 1
    call 0
    memory.copy
    i64.const 1
    call 0
  )
  (func (;3;) (type 1) (param i32) (result i32)
    i64.const 1000000000004
    call 1
    i64.const 2
    call 0
    local.get 0
    i32.load8_u
    i64.const 1
    call 0
  )
  (memory (;0;) 1 1)
  (export "memory0" (memory 0))
  (export "test" (func 2))
  (export "load8_u" (func 3))
  (data (;0;) (i32.const 2) "\03\01\04\01")
  (data (;1;) "\02\07\01\08")
  (data (;2;) (i32.const 12) "\07\05\02\03\06")
  (data (;3;) "\05\09\02\07\06")
)
(invoke "test")

(assert_return (invoke "load8_u" (i32.const 0)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 1)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 2)) (i32.const 3))
(assert_return (invoke "load8_u" (i32.const 3)) (i32.const 1))
(assert_return (invoke "load8_u" (i32.const 4)) (i32.const 4))
(assert_return (invoke "load8_u" (i32.const 5)) (i32.const 1))
(assert_return (invoke "load8_u" (i32.const 6)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 7)) (i32.const 2))
(assert_return (invoke "load8_u" (i32.const 8)) (i32.const 7))
(assert_return (invoke "load8_u" (i32.const 9)) (i32.const 1))
(assert_return (invoke "load8_u" (i32.const 10)) (i32.const 8))
(assert_return (invoke "load8_u" (i32.const 11)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 12)) (i32.const 7))
(assert_return (invoke "load8_u" (i32.const 13)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 14)) (i32.const 7))
(assert_return (invoke "load8_u" (i32.const 15)) (i32.const 5))
(assert_return (invoke "load8_u" (i32.const 16)) (i32.const 2))
(assert_return (invoke "load8_u" (i32.const 17)) (i32.const 7))
(assert_return (invoke "load8_u" (i32.const 18)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 19)) (i32.const 9))
(assert_return (invoke "load8_u" (i32.const 20)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 21)) (i32.const 7))
(assert_return (invoke "load8_u" (i32.const 22)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 23)) (i32.const 8))
(assert_return (invoke "load8_u" (i32.const 24)) (i32.const 8))
(assert_return (invoke "load8_u" (i32.const 25)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 26)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 27)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 28)) (i32.const 0))
(assert_return (invoke "load8_u" (i32.const 29)) (i32.const 0))
(module
  (type (;0;) (func))
  (type (;1;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (func (;2;) (type 0)
    i64.const 1000000000000
    call 1
    i64.const 3
    call 0
    data.drop 0
    data.drop 0
  )
  (memory (;0;) 1)
  (export "test" (func 2))
  (data (;0;) "7")
)
(invoke "test")

(module
  (type (;0;) (func))
  (type (;1;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (func (;2;) (type 0)
    i64.const 1000000000012
    call 1
    i64.const 4
    call 0
    data.drop 0
    i32.const 1234
    i32.const 1
    i32.const 1
    i64.const 1
    call 0
    memory.init 0
    i64.const 1
    call 0
  )
  (memory (;0;) 1)
  (export "test" (func 2))
  (data (;0;) "7")
)
(assert_trap (invoke "test") "out of bounds memory access")

(module
  (type (;0;) (func))
  (type (;1;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (func (;2;) (type 0)
    i64.const 1000000000012
    call 1
    i64.const 3
    call 0
    i32.const 1234
    i32.const 1
    i32.const 1
    i64.const 1
    call 0
    memory.init 0
    i64.const 1
    call 0
  )
  (memory (;0;) 1)
  (export "test" (func 2))
  (data (;0;) (i32.const 0) "7")
)
(assert_trap (invoke "test") "out of bounds memory access")

(module
  (type (;0;) (func))
  (type (;1;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (func (;2;) (type 0)
    i64.const 1000000000012
    call 1
    i64.const 3
    call 0
    i32.const 1
    i32.const 0
    i32.const 1
    i64.const 1
    call 0
    memory.init 0
    i64.const 3
    call 0
    i32.const 1
    i32.const 0
    i32.const 1
    i64.const 1
    call 0
    memory.init 0
    i64.const 1
    call 0
  )
  (memory (;0;) 1)
  (export "test" (func 2))
  (data (;0;) "7")
)
(invoke "test")

(module
  (type (;0;) (func))
  (type (;1;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (func (;2;) (type 0)
    i64.const 1000000000012
    call 1
    i64.const 3
    call 0
    i32.const 1234
    i32.const 0
    i32.const 5
    i64.const 1
    call 0
    memory.init 0
    i64.const 1
    call 0
  )
  (memory (;0;) 1)
  (export "test" (func 2))
  (data (;0;) "7")
)
(assert_trap (invoke "test") "out of bounds memory access")

(module
  (type (;0;) (func))
  (type (;1;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (func (;2;) (type 0)
    i64.const 1000000000012
    call 1
    i64.const 3
    call 0
    i32.const 1234
    i32.const 2
    i32.const 3
    i64.const 1
    call 0
    memory.init 0
    i64.const 1
    call 0
  )
  (memory (;0;) 1)
  (export "test" (func 2))
  (data (;0;) "7")
)
(assert_trap (invoke "test") "out of bounds memory access")

(module
  (type (;0;) (func))
  (type (;1;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (func (;2;) (type 0)
    i64.const 1000000000012
    call 1
    i64.const 3
    call 0
    i32.const 65534
    i32.const 1
    i32.const 3
    i64.const 1
    call 0
    memory.init 0
    i64.const 1
    call 0
  )
  (memory (;0;) 1)
  (export "test" (func 2))
  (data (;0;) "7")
)
(assert_trap (invoke "test") "out of bounds memory access")

(module
  (type (;0;) (func))
  (type (;1;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (func (;2;) (type 0)
    i64.const 1000000000012
    call 1
    i64.const 3
    call 0
    i32.const 1234
    i32.const 4
    i32.const 0
    i64.const 1
    call 0
    memory.init 0
    i64.const 1
    call 0
  )
  (memory (;0;) 1)
  (export "test" (func 2))
  (data (;0;) "7")
)
(assert_trap (invoke "test") "out of bounds memory access")

(module
  (type (;0;) (func))
  (type (;1;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (func (;2;) (type 0)
    i64.const 1000000000012
    call 1
    i64.const 3
    call 0
    i32.const 1234
    i32.const 1
    i32.const 0
    i64.const 1
    call 0
    memory.init 0
    i64.const 1
    call 0
  )
  (memory (;0;) 1)
  (export "test" (func 2))
  (data (;0;) "7")
)
(invoke "test")

(module
  (type (;0;) (func))
  (type (;1;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (func (;2;) (type 0)
    i64.const 1000000000012
    call 1
    i64.const 3
    call 0
    i32.const 65537
    i32.const 0
    i32.const 0
    i64.const 1
    call 0
    memory.init 0
    i64.const 1
    call 0
  )
  (memory (;0;) 1)
  (export "test" (func 2))
  (data (;0;) "7")
)
(assert_trap (invoke "test") "out of bounds memory access")

(module
  (type (;0;) (func))
  (type (;1;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (func (;2;) (type 0)
    i64.const 1000000000012
    call 1
    i64.const 3
    call 0
    i32.const 65536
    i32.const 0
    i32.const 0
    i64.const 1
    call 0
    memory.init 0
    i64.const 1
    call 0
  )
  (memory (;0;) 1)
  (export "test" (func 2))
  (data (;0;) "7")
)
(invoke "test")

(module
  (type (;0;) (func))
  (type (;1;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (func (;2;) (type 0)
    i64.const 1000000000012
    call 1
    i64.const 3
    call 0
    i32.const 65536
    i32.const 1
    i32.const 0
    i64.const 1
    call 0
    memory.init 0
    i64.const 1
    call 0
  )
  (memory (;0;) 1)
  (export "test" (func 2))
  (data (;0;) "7")
)
(invoke "test")

(module
  (type (;0;) (func))
  (type (;1;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (func (;2;) (type 0)
    i64.const 1000000000012
    call 1
    i64.const 3
    call 0
    i32.const 65537
    i32.const 4
    i32.const 0
    i64.const 1
    call 0
    memory.init 0
    i64.const 1
    call 0
  )
  (memory (;0;) 1)
  (export "test" (func 2))
  (data (;0;) "7")
)
(assert_trap (invoke "test") "out of bounds memory access")

(module
  (type (;0;) (func (param i32 i32 i32) (result i32)))
  (type (;1;) (func (param i32 i32)))
  (type (;2;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 2)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (func (;2;) (type 0) (param $from i32) (param $to i32) (param $expected i32) (result i32)
    i64.const 1000002000008
    call 1
    i64.const 1
    call 0
    loop $cont ;; label = @1
      i64.const 4
      call 0
      local.get $from
      local.get $to
      i32.eq
      if ;; label = @2
        i64.const 2
        call 0
        i32.const -1
        return
        i64.const 1
        call 0
      end
      i64.const 2
      call 0
      local.get $from
      i32.load8_u
      i64.const 3
      call 0
      local.get $expected
      i32.eq
      if ;; label = @2
        i64.const 5
        call 0
        local.get $from
        i32.const 1
        i32.add
        local.set $from
        br 1 (;@1;)
        i64.const 1
        call 0
      end
      i64.const 3
      call 0
    end
    local.get $from
    return
  )
  (func (;3;) (type 1) (param $offs i32) (param $len i32)
    i64.const 1000001000012
    call 1
    i64.const 3
    call 0
    local.get $offs
    i32.const 0
    local.get $len
    i64.const 1
    call 0
    memory.init 0
    i64.const 1
    call 0
  )
  (memory (;0;) 1 1)
  (export "checkRange" (func 2))
  (export "run" (func 3))
  (data (;0;) "BBBBBBBBBBBBBBBB")
)
(assert_trap (invoke "run" (i32.const 65528) (i32.const 16))
              "out of bounds memory access")

(assert_return (invoke "checkRange" (i32.const 0) (i32.const 1) (i32.const 0))
               (i32.const -1))
(module
  (type (;0;) (func (param i32 i32 i32) (result i32)))
  (type (;1;) (func (param i32 i32)))
  (type (;2;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 2)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (func (;2;) (type 0) (param $from i32) (param $to i32) (param $expected i32) (result i32)
    i64.const 1000002000008
    call 1
    i64.const 1
    call 0
    loop $cont ;; label = @1
      i64.const 4
      call 0
      local.get $from
      local.get $to
      i32.eq
      if ;; label = @2
        i64.const 2
        call 0
        i32.const -1
        return
        i64.const 1
        call 0
      end
      i64.const 2
      call 0
      local.get $from
      i32.load8_u
      i64.const 3
      call 0
      local.get $expected
      i32.eq
      if ;; label = @2
        i64.const 5
        call 0
        local.get $from
        i32.const 1
        i32.add
        local.set $from
        br 1 (;@1;)
        i64.const 1
        call 0
      end
      i64.const 3
      call 0
    end
    local.get $from
    return
  )
  (func (;3;) (type 1) (param $offs i32) (param $len i32)
    i64.const 1000001000012
    call 1
    i64.const 3
    call 0
    local.get $offs
    i32.const 0
    local.get $len
    i64.const 1
    call 0
    memory.init 0
    i64.const 1
    call 0
  )
  (memory (;0;) 1 1)
  (export "checkRange" (func 2))
  (export "run" (func 3))
  (data (;0;) "BBBBBBBBBBBBBBBB")
)
(assert_trap (invoke "run" (i32.const 65527) (i32.const 16))
              "out of bounds memory access")

(assert_return (invoke "checkRange" (i32.const 0) (i32.const 1) (i32.const 0))
               (i32.const -1))
(module
  (type (;0;) (func (param i32 i32 i32) (result i32)))
  (type (;1;) (func (param i32 i32)))
  (type (;2;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 2)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (func (;2;) (type 0) (param $from i32) (param $to i32) (param $expected i32) (result i32)
    i64.const 1000002000008
    call 1
    i64.const 1
    call 0
    loop $cont ;; label = @1
      i64.const 4
      call 0
      local.get $from
      local.get $to
      i32.eq
      if ;; label = @2
        i64.const 2
        call 0
        i32.const -1
        return
        i64.const 1
        call 0
      end
      i64.const 2
      call 0
      local.get $from
      i32.load8_u
      i64.const 3
      call 0
      local.get $expected
      i32.eq
      if ;; label = @2
        i64.const 5
        call 0
        local.get $from
        i32.const 1
        i32.add
        local.set $from
        br 1 (;@1;)
        i64.const 1
        call 0
      end
      i64.const 3
      call 0
    end
    local.get $from
    return
  )
  (func (;3;) (type 1) (param $offs i32) (param $len i32)
    i64.const 1000001000012
    call 1
    i64.const 3
    call 0
    local.get $offs
    i32.const 0
    local.get $len
    i64.const 1
    call 0
    memory.init 0
    i64.const 1
    call 0
  )
  (memory (;0;) 1 1)
  (export "checkRange" (func 2))
  (export "run" (func 3))
  (data (;0;) "BBBBBBBBBBBBBBBB")
)
(assert_trap (invoke "run" (i32.const 65472) (i32.const 30))
              "out of bounds memory access")

(assert_return (invoke "checkRange" (i32.const 0) (i32.const 1) (i32.const 0))
               (i32.const -1))
(module
  (type (;0;) (func (param i32 i32 i32) (result i32)))
  (type (;1;) (func (param i32 i32)))
  (type (;2;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 2)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (func (;2;) (type 0) (param $from i32) (param $to i32) (param $expected i32) (result i32)
    i64.const 1000002000008
    call 1
    i64.const 1
    call 0
    loop $cont ;; label = @1
      i64.const 4
      call 0
      local.get $from
      local.get $to
      i32.eq
      if ;; label = @2
        i64.const 2
        call 0
        i32.const -1
        return
        i64.const 1
        call 0
      end
      i64.const 2
      call 0
      local.get $from
      i32.load8_u
      i64.const 3
      call 0
      local.get $expected
      i32.eq
      if ;; label = @2
        i64.const 5
        call 0
        local.get $from
        i32.const 1
        i32.add
        local.set $from
        br 1 (;@1;)
        i64.const 1
        call 0
      end
      i64.const 3
      call 0
    end
    local.get $from
    return
  )
  (func (;3;) (type 1) (param $offs i32) (param $len i32)
    i64.const 1000001000012
    call 1
    i64.const 3
    call 0
    local.get $offs
    i32.const 0
    local.get $len
    i64.const 1
    call 0
    memory.init 0
    i64.const 1
    call 0
  )
  (memory (;0;) 1 1)
  (export "checkRange" (func 2))
  (export "run" (func 3))
  (data (;0;) "BBBBBBBBBBBBBBBB")
)
(assert_trap (invoke "run" (i32.const 65473) (i32.const 31))
              "out of bounds memory access")

(assert_return (invoke "checkRange" (i32.const 0) (i32.const 1) (i32.const 0))
               (i32.const -1))
(module
  (type (;0;) (func (param i32 i32 i32) (result i32)))
  (type (;1;) (func (param i32 i32)))
  (type (;2;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 2)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (func (;2;) (type 0) (param $from i32) (param $to i32) (param $expected i32) (result i32)
    i64.const 1000002000008
    call 1
    i64.const 1
    call 0
    loop $cont ;; label = @1
      i64.const 4
      call 0
      local.get $from
      local.get $to
      i32.eq
      if ;; label = @2
        i64.const 2
        call 0
        i32.const -1
        return
        i64.const 1
        call 0
      end
      i64.const 2
      call 0
      local.get $from
      i32.load8_u
      i64.const 3
      call 0
      local.get $expected
      i32.eq
      if ;; label = @2
        i64.const 5
        call 0
        local.get $from
        i32.const 1
        i32.add
        local.set $from
        br 1 (;@1;)
        i64.const 1
        call 0
      end
      i64.const 3
      call 0
    end
    local.get $from
    return
  )
  (func (;3;) (type 1) (param $offs i32) (param $len i32)
    i64.const 1000001000012
    call 1
    i64.const 3
    call 0
    local.get $offs
    i32.const 0
    local.get $len
    i64.const 1
    call 0
    memory.init 0
    i64.const 1
    call 0
  )
  (memory (;0;) 1)
  (export "checkRange" (func 2))
  (export "run" (func 3))
  (data (;0;) "BBBBBBBBBBBBBBBB")
)
(assert_trap (invoke "run" (i32.const 65528) (i32.const 4294967040))
              "out of bounds memory access")

(assert_return (invoke "checkRange" (i32.const 0) (i32.const 1) (i32.const 0))
               (i32.const -1))
(module
  (type (;0;) (func (param i32 i32 i32) (result i32)))
  (type (;1;) (func (param i32 i32)))
  (type (;2;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 2)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (func (;2;) (type 0) (param $from i32) (param $to i32) (param $expected i32) (result i32)
    i64.const 1000002000008
    call 1
    i64.const 1
    call 0
    loop $cont ;; label = @1
      i64.const 4
      call 0
      local.get $from
      local.get $to
      i32.eq
      if ;; label = @2
        i64.const 2
        call 0
        i32.const -1
        return
        i64.const 1
        call 0
      end
      i64.const 2
      call 0
      local.get $from
      i32.load8_u
      i64.const 3
      call 0
      local.get $expected
      i32.eq
      if ;; label = @2
        i64.const 5
        call 0
        local.get $from
        i32.const 1
        i32.add
        local.set $from
        br 1 (;@1;)
        i64.const 1
        call 0
      end
      i64.const 3
      call 0
    end
    local.get $from
    return
  )
  (func (;3;) (type 1) (param $offs i32) (param $len i32)
    i64.const 1000001000012
    call 1
    i64.const 3
    call 0
    local.get $offs
    i32.const 0
    local.get $len
    i64.const 1
    call 0
    memory.init 0
    i64.const 1
    call 0
  )
  (memory (;0;) 1)
  (export "checkRange" (func 2))
  (export "run" (func 3))
  (data (;0;) "BBBBBBBBBBBBBBBB")
)
(assert_trap (invoke "run" (i32.const 0) (i32.const 4294967292))
              "out of bounds memory access")

(assert_return (invoke "checkRange" (i32.const 0) (i32.const 1) (i32.const 0))
               (i32.const -1))

(module
  (type (;0;) (func))
  (type (;1;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (func (;2;) (type 0)
    i64.const 1000000000012
    call 1
    i64.const 3
    call 0
    i32.const 0
    i32.const 0
    i32.const 0
    i64.const 1
    call 0
    memory.init 64
    i64.const 1
    call 0
  )
  (memory (;0;) 1)
  (data (;0;) "")
  (data (;1;) "")
  (data (;2;) "")
  (data (;3;) "")
  (data (;4;) "")
  (data (;5;) "")
  (data (;6;) "")
  (data (;7;) "")
  (data (;8;) "")
  (data (;9;) "")
  (data (;10;) "")
  (data (;11;) "")
  (data (;12;) "")
  (data (;13;) "")
  (data (;14;) "")
  (data (;15;) "")
  (data (;16;) "")
  (data (;17;) "")
  (data (;18;) "")
  (data (;19;) "")
  (data (;20;) "")
  (data (;21;) "")
  (data (;22;) "")
  (data (;23;) "")
  (data (;24;) "")
  (data (;25;) "")
  (data (;26;) "")
  (data (;27;) "")
  (data (;28;) "")
  (data (;29;) "")
  (data (;30;) "")
  (data (;31;) "")
  (data (;32;) "")
  (data (;33;) "")
  (data (;34;) "")
  (data (;35;) "")
  (data (;36;) "")
  (data (;37;) "")
  (data (;38;) "")
  (data (;39;) "")
  (data (;40;) "")
  (data (;41;) "")
  (data (;42;) "")
  (data (;43;) "")
  (data (;44;) "")
  (data (;45;) "")
  (data (;46;) "")
  (data (;47;) "")
  (data (;48;) "")
  (data (;49;) "")
  (data (;50;) "")
  (data (;51;) "")
  (data (;52;) "")
  (data (;53;) "")
  (data (;54;) "")
  (data (;55;) "")
  (data (;56;) "")
  (data (;57;) "")
  (data (;58;) "")
  (data (;59;) "")
  (data (;60;) "")
  (data (;61;) "")
  (data (;62;) "")
  (data (;63;) "")
  (data (;64;) "")
)
