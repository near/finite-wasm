(module
  (type $sig (;0;) (func))
  (type $sig-1 (;1;) (func))
  (type $sig-2 (;2;) (func (result i32)))
  (type $sig-3 (;3;) (func (param i32)))
  (type $sig-4 (;4;) (func (param i32 f64 i32) (result i32)))
  (type $forward (;5;) (func))
  (type (;6;) (func (param i32 f64 i64)))
  (type (;7;) (func (param i32 f64)))
  (type (;8;) (func (param i32 f32 i64 i32 f64)))
  (type (;9;) (func (result i32 f64 f32)))
  (type (;10;) (func (result i32 f64)))
  (type (;11;) (func (result i32 f32 i64 i32 f64)))
  (type (;12;) (func (param i32 f32 i64 i32) (result i32 i64 i32)))
  (type (;13;) (func (result i64)))
  (type (;14;) (func (result f32)))
  (type (;15;) (func (result f64)))
  (type (;16;) (func (param i32 i32) (result i32)))
  (type (;17;) (func (param i64 i64) (result i64)))
  (type (;18;) (func (param f32 f32) (result f32)))
  (type (;19;) (func (param f64 f64) (result f64)))
  (type (;20;) (func (param f32 i32 i64 i32 f64 i32) (result f64)))
  (type (;21;) (func (result i32 i32 i32)))
  (type (;22;) (func (result i32 i64)))
  (type (;23;) (func (param i32) (result i32)))
  (type (;24;) (func (param i32) (result i32 i64)))
  (type (;25;) (func (param i32) (result i32 i32)))
  (type (;26;) (func (result i32 i32)))
  (type (;27;) (func (param i32 i64 f32 f32 i32 f64 f32 i32 i32 i32 f32 f64 f64 f64 i32 i32 f32) (result f64 f32 i32 i32 i32 i64 f32 i32 i32 f32 f64 f64 i32 f32 i32 f64)))
  (type (;28;) (func (param i64)))
  (type (;29;) (func (param i64 i64)))
  (type (;30;) (func (param i32 i64 i64) (result i32)))
  (type (;31;) (func (result i32 i64 i32)))
  (type (;32;) (func (result i32 i64)))
  (type (;33;) (func (result i32 i64)))
  (type (;34;) (func (result i32 i32)))
  (type (;35;) (func (result f64 f32 i32 i32 i32 i64 f32 i32 i32 f32 f64 f64 i32 f32 i32 f64)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 28)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 30)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 30)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 30)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 30)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 30)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 30)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;7;) (type 29)))
  (import "spectest" "finite_wasm_unstack" (func $finite_wasm_unstack (;8;) (type 29)))
  (export "f" (func 11))
  (export "g" (func $h))
  (export "type-use-1" (func 34))
  (export "type-use-2" (func 35))
  (export "type-use-3" (func 36))
  (export "type-use-4" (func 37))
  (export "type-use-5" (func 38))
  (export "type-use-6" (func 39))
  (export "type-use-7" (func 40))
  (export "local-first-i32" (func 45))
  (export "local-first-i64" (func 46))
  (export "local-first-f32" (func 47))
  (export "local-first-f64" (func 48))
  (export "local-second-i32" (func 49))
  (export "local-second-i64" (func 50))
  (export "local-second-f32" (func 51))
  (export "local-second-f64" (func 52))
  (export "local-mixed" (func 53))
  (export "param-first-i32" (func 54))
  (export "param-first-i64" (func 55))
  (export "param-first-f32" (func 56))
  (export "param-first-f64" (func 57))
  (export "param-second-i32" (func 58))
  (export "param-second-i64" (func 59))
  (export "param-second-f32" (func 60))
  (export "param-second-f64" (func 61))
  (export "param-mixed" (func 62))
  (export "empty" (func 63))
  (export "value-void" (func 64))
  (export "value-i32" (func 65))
  (export "value-i64" (func 66))
  (export "value-f32" (func 67))
  (export "value-f64" (func 68))
  (export "value-i32-f64" (func 69))
  (export "value-i32-i32-i32" (func 70))
  (export "value-block-void" (func 71))
  (export "value-block-i32" (func 72))
  (export "value-block-i32-i64" (func 73))
  (export "return-empty" (func 74))
  (export "return-i32" (func 75))
  (export "return-i64" (func 76))
  (export "return-f32" (func 77))
  (export "return-f64" (func 78))
  (export "return-i32-f64" (func 79))
  (export "return-i32-i32-i32" (func 80))
  (export "return-block-i32" (func 81))
  (export "return-block-i32-i64" (func 82))
  (export "break-empty" (func 83))
  (export "break-i32" (func 84))
  (export "break-i64" (func 85))
  (export "break-f32" (func 86))
  (export "break-f64" (func 87))
  (export "break-i32-f64" (func 88))
  (export "break-i32-i32-i32" (func 89))
  (export "break-block-i32" (func 90))
  (export "break-block-i32-i64" (func 91))
  (export "break-br_if-empty" (func 92))
  (export "break-br_if-num" (func 93))
  (export "break-br_if-num-num" (func 94))
  (export "break-br_table-empty" (func 95))
  (export "break-br_table-num" (func 96))
  (export "break-br_table-num-num" (func 97))
  (export "break-br_table-nested-empty" (func 98))
  (export "break-br_table-nested-num" (func 99))
  (export "break-br_table-nested-num-num" (func 100))
  (export "large-sig" (func 101))
  (export "init-local-i32" (func 102))
  (export "init-local-i64" (func 103))
  (export "init-local-f32" (func 104))
  (export "init-local-f64" (func 105))
  (func $dummy (;9;) (type $sig))
  (func (;10;) (type $sig))
  (func (;11;) (type $sig))
  (func $f (;12;) (type $sig))
  (func $h (;13;) (type $sig))
  (func (;14;) (type $sig))
  (func (;15;) (type $sig))
  (func (;16;) (type $sig)
    (local i32)
    block ;; label = @1
      i64.const 0
      i64.const 1
      call $finite_wasm_stack
    end
    i64.const 0
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;17;) (type $sig)
    (local $x i32)
    block ;; label = @1
      i64.const 0
      i64.const 1
      call $finite_wasm_stack
    end
    i64.const 0
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;18;) (type $sig)
    (local i32 f64 i64)
    block ;; label = @1
      i64.const 0
      i64.const 3
      call $finite_wasm_stack
    end
    i64.const 0
    i64.const 3
    call $finite_wasm_unstack
  )
  (func (;19;) (type $sig)
    (local i32 f64)
    block ;; label = @1
      i64.const 0
      i64.const 2
      call $finite_wasm_stack
    end
    i64.const 0
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;20;) (type $sig)
    (local i32 f32) (local $x i64) (local i32 f64)
    block ;; label = @1
      i64.const 0
      i64.const 5
      call $finite_wasm_stack
    end
    i64.const 0
    i64.const 5
    call $finite_wasm_unstack
  )
  (func (;21;) (type $sig))
  (func (;22;) (type $sig))
  (func (;23;) (type $sig-3) (param i32)
    block ;; label = @1
      i64.const 0
      i64.const 1
      call $finite_wasm_stack
    end
    i64.const 0
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;24;) (type $sig-3) (param $x i32)
    block ;; label = @1
      i64.const 0
      i64.const 1
      call $finite_wasm_stack
    end
    i64.const 0
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;25;) (type 6) (param i32 f64 i64)
    block ;; label = @1
      i64.const 0
      i64.const 3
      call $finite_wasm_stack
    end
    i64.const 0
    i64.const 3
    call $finite_wasm_unstack
  )
  (func (;26;) (type 7) (param i32 f64)
    block ;; label = @1
      i64.const 0
      i64.const 2
      call $finite_wasm_stack
    end
    i64.const 0
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;27;) (type 8) (param i32 f32) (param $x i64) (param i32 f64)
    block ;; label = @1
      i64.const 0
      i64.const 5
      call $finite_wasm_stack
    end
    i64.const 0
    i64.const 5
    call $finite_wasm_unstack
  )
  (func (;28;) (type $sig))
  (func (;29;) (type $sig))
  (func (;30;) (type $sig-2) (result i32)
    i64.const 1
    call $finite_wasm_gas
    unreachable
  )
  (func (;31;) (type 9) (result i32 f64 f32)
    i64.const 1
    call $finite_wasm_gas
    unreachable
  )
  (func (;32;) (type 10) (result i32 f64)
    i64.const 1
    call $finite_wasm_gas
    unreachable
  )
  (func (;33;) (type 11) (result i32 f32 i64 i32 f64)
    i64.const 1
    call $finite_wasm_gas
    unreachable
  )
  (func (;34;) (type $sig-1))
  (func (;35;) (type $sig-2) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 0
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;36;) (type $sig-3) (param i32)
    block ;; label = @1
      i64.const 0
      i64.const 1
      call $finite_wasm_stack
    end
    i64.const 0
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;37;) (type $sig-4) (param i32 f64 i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 3
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 0
    end
    i64.const 4
    i64.const 3
    call $finite_wasm_unstack
  )
  (func (;38;) (type $sig-2) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 0
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;39;) (type $sig-3) (param i32)
    block ;; label = @1
      i64.const 0
      i64.const 1
      call $finite_wasm_stack
    end
    i64.const 0
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;40;) (type $sig-4) (param i32 f64 i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 3
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 0
    end
    i64.const 4
    i64.const 3
    call $finite_wasm_unstack
  )
  (func (;41;) (type $sig))
  (func (;42;) (type $forward))
  (func $complex (;43;) (type 12) (param i32 f32) (param $x i64) (param i32) (result i32 i64 i32)
    (local f32) (local $y i32) (local i64 i32 f64 i32)
    block (type 31) (result i32 i64 i32) ;; label = @1
      i64.const 0
      i64.const 10
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      unreachable
      unreachable
    end
    i64.const 0
    i64.const 10
    call $finite_wasm_unstack
  )
  (func $complex-sig (;44;) (type $sig)
    (local f32) (local $y i32) (local i64 i32 f64 i32)
    block ;; label = @1
      i64.const 0
      i64.const 6
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      unreachable
      unreachable
    end
    i64.const 0
    i64.const 6
    call $finite_wasm_unstack
  )
  (func (;45;) (type $sig-2) (result i32)
    (local i32 i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 4
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;46;) (type 13) (result i64)
    (local i64 i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 8
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;47;) (type 14) (result f32)
    (local f32 f32)
    block (result f32) ;; label = @1
      i64.const 4
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 4
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;48;) (type 15) (result f64)
    (local f64 f64)
    block (result f64) ;; label = @1
      i64.const 8
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 8
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;49;) (type $sig-2) (result i32)
    (local i32 i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 1
    end
    i64.const 4
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;50;) (type 13) (result i64)
    (local i64 i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 1
    end
    i64.const 8
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;51;) (type 14) (result f32)
    (local f32 f32)
    block (result f32) ;; label = @1
      i64.const 4
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 1
    end
    i64.const 4
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;52;) (type 15) (result f64)
    (local f64 f64)
    block (result f64) ;; label = @1
      i64.const 8
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 1
    end
    i64.const 8
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;53;) (type 15) (result f64)
    (local f32) (local $x i32) (local i64 i32 f64 i32)
    block (result f64) ;; label = @1
      i64.const 8
      i64.const 6
      call $finite_wasm_stack
      i64.const 19
      call $finite_wasm_gas
      local.get 0
      f32.neg
      drop
      local.get $x
      i32.eqz
      drop
      local.get 2
      i64.eqz
      drop
      local.get 3
      i32.eqz
      drop
      local.get 4
      f64.neg
      drop
      local.get 5
      i32.eqz
      drop
      local.get 4
    end
    i64.const 8
    i64.const 6
    call $finite_wasm_unstack
  )
  (func (;54;) (type 16) (param i32 i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 4
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;55;) (type 17) (param i64 i64) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 8
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;56;) (type 18) (param f32 f32) (result f32)
    block (result f32) ;; label = @1
      i64.const 4
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 4
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;57;) (type 19) (param f64 f64) (result f64)
    block (result f64) ;; label = @1
      i64.const 8
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 8
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;58;) (type 16) (param i32 i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 1
    end
    i64.const 4
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;59;) (type 17) (param i64 i64) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 1
    end
    i64.const 8
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;60;) (type 18) (param f32 f32) (result f32)
    block (result f32) ;; label = @1
      i64.const 4
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 1
    end
    i64.const 4
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;61;) (type 19) (param f64 f64) (result f64)
    block (result f64) ;; label = @1
      i64.const 8
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 1
    end
    i64.const 8
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;62;) (type 20) (param f32 i32) (param $x i64) (param i32 f64 i32) (result f64)
    block (result f64) ;; label = @1
      i64.const 8
      i64.const 6
      call $finite_wasm_stack
      i64.const 19
      call $finite_wasm_gas
      local.get 0
      f32.neg
      drop
      local.get 1
      i32.eqz
      drop
      local.get $x
      i64.eqz
      drop
      local.get 3
      i32.eqz
      drop
      local.get 4
      f64.neg
      drop
      local.get 5
      i32.eqz
      drop
      local.get 4
    end
    i64.const 8
    i64.const 6
    call $finite_wasm_unstack
  )
  (func (;63;) (type $sig))
  (func (;64;) (type $sig)
    i64.const 1
    call $finite_wasm_gas
    call $dummy
  )
  (func (;65;) (type $sig-2) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 77
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;66;) (type 13) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i64.const 7777
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;67;) (type 14) (result f32)
    block (result f32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      f32.const 0x1.36ccccp+6 (;=77.7;)
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;68;) (type 15) (result f64)
    block (result f64) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      f64.const 0x1.37147ae147ae1p+6 (;=77.77;)
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;69;) (type 10) (result i32 f64)
    block (type 10) (result i32 f64) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i32.const 77
      f64.const 0x1.cp+2 (;=7;)
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;70;) (type 21) (result i32 i32 i32)
    block (type 21) (result i32 i32 i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      i32.const 1
      i32.const 2
      i32.const 3
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;71;) (type $sig)
    i64.const 2
    call $finite_wasm_gas
    block ;; label = @1
      call $dummy
      i64.const 1
      call $finite_wasm_gas
      call $dummy
    end
  )
  (func (;72;) (type $sig-2) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const 77
      end
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;73;) (type 22) (result i32 i64)
    block (type 22) (result i32 i64) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      block (type 22) (result i32 i64) ;; label = @2
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        i32.const 1
        i64.const 2
      end
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;74;) (type $sig)
    i64.const 1
    call $finite_wasm_gas
    return
  )
  (func (;75;) (type $sig-2) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i32.const 78
      i64.const 4
      i64.const 0
      call $finite_wasm_unstack
      return
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;76;) (type 13) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i64.const 7878
      i64.const 8
      i64.const 0
      call $finite_wasm_unstack
      return
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;77;) (type 14) (result f32)
    block (result f32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      f32.const 0x1.3accccp+6 (;=78.7;)
      i64.const 4
      i64.const 0
      call $finite_wasm_unstack
      return
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;78;) (type 15) (result f64)
    block (result f64) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      f64.const 0x1.3b1eb851eb852p+6 (;=78.78;)
      i64.const 8
      i64.const 0
      call $finite_wasm_unstack
      return
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;79;) (type 10) (result i32 f64)
    block (type 10) (result i32 f64) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      i32.const 78
      f64.const 0x1.3b1eb851eb852p+6 (;=78.78;)
      i64.const 12
      i64.const 0
      call $finite_wasm_unstack
      return
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;80;) (type 21) (result i32 i32 i32)
    block (type 21) (result i32 i32 i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      i32.const 1
      i32.const 2
      i32.const 3
      i64.const 12
      i64.const 0
      call $finite_wasm_unstack
      return
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;81;) (type $sig-2) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        i32.const 77
      end
      i64.const 4
      i64.const 0
      call $finite_wasm_unstack
      return
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;82;) (type 22) (result i32 i64)
    block (type 22) (result i32 i64) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      block (type 22) (result i32 i64) ;; label = @2
        call $dummy
        i64.const 3
        call $finite_wasm_gas
        i32.const 1
        i64.const 2
      end
      i64.const 12
      i64.const 0
      call $finite_wasm_unstack
      return
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;83;) (type $sig)
    i64.const 1
    call $finite_wasm_gas
    br 0
  )
  (func (;84;) (type $sig-2) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i32.const 79
      br 0 (;@1;)
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;85;) (type 13) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i64.const 7979
      br 0 (;@1;)
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;86;) (type 14) (result f32)
    block (result f32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      f32.const 0x1.3f999ap+6 (;=79.9;)
      br 0 (;@1;)
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;87;) (type 15) (result f64)
    block (result f64) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      f64.const 0x1.3f28f5c28f5c3p+6 (;=79.79;)
      br 0 (;@1;)
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;88;) (type 10) (result i32 f64)
    block (type 10) (result i32 f64) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      i32.const 79
      f64.const 0x1.3f28f5c28f5c3p+6 (;=79.79;)
      br 0 (;@1;)
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;89;) (type 21) (result i32 i32 i32)
    block (type 21) (result i32 i32 i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      i32.const 1
      i32.const 2
      i32.const 3
      br 0 (;@1;)
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;90;) (type $sig-2) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        i32.const 77
      end
      br 0 (;@1;)
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;91;) (type 22) (result i32 i64)
    block (type 22) (result i32 i64) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      block (type 22) (result i32 i64) ;; label = @2
        call $dummy
        i64.const 3
        call $finite_wasm_gas
        i32.const 1
        i64.const 2
      end
      br 0 (;@1;)
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;92;) (type $sig-3) (param i32)
    block ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      br_if 0 (;@1;)
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;93;) (type 23) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      i32.const 50
      local.get 0
      br_if 0 (;@1;)
      i64.const 2
      call $finite_wasm_gas
      drop
      i32.const 51
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;94;) (type 24) (param i32) (result i32 i64)
    block (type 32) (result i32 i64) ;; label = @1
      i64.const 16
      i64.const 1
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      i32.const 50
      i64.const 51
      local.get 0
      br_if 0 (;@1;)
      i64.const 4
      call $finite_wasm_gas
      drop
      drop
      i32.const 51
      i64.const 52
    end
    i64.const 16
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;95;) (type $sig-3) (param i32)
    block ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      br_table 0 (;@1;) 0 (;@1;) 0 (;@1;)
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;96;) (type 23) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      i32.const 50
      local.get 0
      br_table 0 (;@1;) 0 (;@1;)
      i32.const 51
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;97;) (type 24) (param i32) (result i32 i64)
    block (type 33) (result i32 i64) ;; label = @1
      i64.const 16
      i64.const 1
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      i32.const 50
      i64.const 51
      local.get 0
      br_table 0 (;@1;) 0 (;@1;)
      i32.const 51
      i64.const 52
    end
    i64.const 16
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;98;) (type $sig-3) (param i32)
    block ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      block ;; label = @2
        local.get 0
        br_table 0 (;@2;) 1 (;@1;) 0 (;@2;)
      end
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;99;) (type 23) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 50
        local.get 0
        br_table 0 (;@2;) 1 (;@1;) 0 (;@2;)
        i32.const 51
      end
      i64.const 2
      call $finite_wasm_gas
      i32.const 2
      i32.add
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;100;) (type 25) (param i32) (result i32 i32)
    block (type 34) (result i32 i32) ;; label = @1
      i64.const 12
      i64.const 1
      call $finite_wasm_stack
      i64.const 5
      call $finite_wasm_gas
      block (type 26) (result i32 i32) ;; label = @2
        i32.const 50
        i32.const 51
        local.get 0
        br_table 0 (;@2;) 1 (;@1;) 0 (;@2;)
        i32.const 51
        i32.const -3
      end
      i64.const 2
      call $finite_wasm_gas
      i32.add
      i32.const 52
    end
    i64.const 12
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;101;) (type 27) (param i32 i64 f32 f32 i32 f64 f32 i32 i32 i32 f32 f64 f64 f64 i32 i32 f32) (result f64 f32 i32 i32 i32 i64 f32 i32 i32 f32 f64 f64 i32 f32 i32 f64)
    block (type 35) (result f64 f32 i32 i32 i32 i64 f32 i32 i32 f32 f64 f64 i32 f32 i32 f64) ;; label = @1
      i64.const 84
      i64.const 17
      call $finite_wasm_stack
      i64.const 16
      call $finite_wasm_gas
      local.get 5
      local.get 2
      local.get 0
      local.get 8
      local.get 7
      local.get 1
      local.get 3
      local.get 9
      local.get 4
      local.get 6
      local.get 13
      local.get 11
      local.get 15
      local.get 16
      local.get 14
      local.get 12
    end
    i64.const 84
    i64.const 17
    call $finite_wasm_unstack
  )
  (func (;102;) (type $sig-2) (result i32)
    (local i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;103;) (type 13) (result i64)
    (local i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;104;) (type 14) (result f32)
    (local f32)
    block (result f32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;105;) (type 15) (result f64)
    (local f64)
    block (result f64) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
)

(assert_return (invoke "type-use-1"))
(assert_return (invoke "type-use-2") (i32.const 0))
(assert_return (invoke "type-use-3" (i32.const 1)))
(assert_return
  (invoke "type-use-4" (i32.const 1) (f64.const 1) (i32.const 1))
  (i32.const 0)
)
(assert_return (invoke "type-use-5") (i32.const 0))
(assert_return (invoke "type-use-6" (i32.const 1)))
(assert_return
  (invoke "type-use-7" (i32.const 1) (f64.const 1) (i32.const 1))
  (i32.const 0)
)

(assert_return (invoke "local-first-i32") (i32.const 0))
(assert_return (invoke "local-first-i64") (i64.const 0))
(assert_return (invoke "local-first-f32") (f32.const 0))
(assert_return (invoke "local-first-f64") (f64.const 0))
(assert_return (invoke "local-second-i32") (i32.const 0))
(assert_return (invoke "local-second-i64") (i64.const 0))
(assert_return (invoke "local-second-f32") (f32.const 0))
(assert_return (invoke "local-second-f64") (f64.const 0))
(assert_return (invoke "local-mixed") (f64.const 0))

(assert_return
  (invoke "param-first-i32" (i32.const 2) (i32.const 3)) (i32.const 2)
)
(assert_return
  (invoke "param-first-i64" (i64.const 2) (i64.const 3)) (i64.const 2)
)
(assert_return
  (invoke "param-first-f32" (f32.const 2) (f32.const 3)) (f32.const 2)
)
(assert_return
  (invoke "param-first-f64" (f64.const 2) (f64.const 3)) (f64.const 2)
)
(assert_return
  (invoke "param-second-i32" (i32.const 2) (i32.const 3)) (i32.const 3)
)
(assert_return
  (invoke "param-second-i64" (i64.const 2) (i64.const 3)) (i64.const 3)
)
(assert_return
  (invoke "param-second-f32" (f32.const 2) (f32.const 3)) (f32.const 3)
)
(assert_return
  (invoke "param-second-f64" (f64.const 2) (f64.const 3)) (f64.const 3)
)

(assert_return
  (invoke "param-mixed"
    (f32.const 1) (i32.const 2) (i64.const 3)
    (i32.const 4) (f64.const 5.5) (i32.const 6)
  )
  (f64.const 5.5)
)

(assert_return (invoke "empty"))
(assert_return (invoke "value-void"))
(assert_return (invoke "value-i32") (i32.const 77))
(assert_return (invoke "value-i64") (i64.const 7777))
(assert_return (invoke "value-f32") (f32.const 77.7))
(assert_return (invoke "value-f64") (f64.const 77.77))
(assert_return (invoke "value-i32-f64") (i32.const 77) (f64.const 7))
(assert_return (invoke "value-i32-i32-i32")
  (i32.const 1) (i32.const 2) (i32.const 3)
)
(assert_return (invoke "value-block-void"))
(assert_return (invoke "value-block-i32") (i32.const 77))
(assert_return (invoke "value-block-i32-i64") (i32.const 1) (i64.const 2))

(assert_return (invoke "return-empty"))
(assert_return (invoke "return-i32") (i32.const 78))
(assert_return (invoke "return-i64") (i64.const 7878))
(assert_return (invoke "return-f32") (f32.const 78.7))
(assert_return (invoke "return-f64") (f64.const 78.78))
(assert_return (invoke "return-i32-f64") (i32.const 78) (f64.const 78.78))
(assert_return (invoke "return-i32-i32-i32")
  (i32.const 1) (i32.const 2) (i32.const 3)
)
(assert_return (invoke "return-block-i32") (i32.const 77))
(assert_return (invoke "return-block-i32-i64") (i32.const 1) (i64.const 2))

(assert_return (invoke "break-empty"))
(assert_return (invoke "break-i32") (i32.const 79))
(assert_return (invoke "break-i64") (i64.const 7979))
(assert_return (invoke "break-f32") (f32.const 79.9))
(assert_return (invoke "break-f64") (f64.const 79.79))
(assert_return (invoke "break-i32-f64") (i32.const 79) (f64.const 79.79))
(assert_return (invoke "break-i32-i32-i32")
  (i32.const 1) (i32.const 2) (i32.const 3)
)
(assert_return (invoke "break-block-i32") (i32.const 77))
(assert_return (invoke "break-block-i32-i64") (i32.const 1) (i64.const 2))

(assert_return (invoke "break-br_if-empty" (i32.const 0)))
(assert_return (invoke "break-br_if-empty" (i32.const 2)))
(assert_return (invoke "break-br_if-num" (i32.const 0)) (i32.const 51))
(assert_return (invoke "break-br_if-num" (i32.const 1)) (i32.const 50))
(assert_return (invoke "break-br_if-num-num" (i32.const 0))
  (i32.const 51) (i64.const 52)
)
(assert_return (invoke "break-br_if-num-num" (i32.const 1))
  (i32.const 50) (i64.const 51)
)

(assert_return (invoke "break-br_table-empty" (i32.const 0)))
(assert_return (invoke "break-br_table-empty" (i32.const 1)))
(assert_return (invoke "break-br_table-empty" (i32.const 5)))
(assert_return (invoke "break-br_table-empty" (i32.const -1)))
(assert_return (invoke "break-br_table-num" (i32.const 0)) (i32.const 50))
(assert_return (invoke "break-br_table-num" (i32.const 1)) (i32.const 50))
(assert_return (invoke "break-br_table-num" (i32.const 10)) (i32.const 50))
(assert_return (invoke "break-br_table-num" (i32.const -100)) (i32.const 50))
(assert_return (invoke "break-br_table-num-num" (i32.const 0))
  (i32.const 50) (i64.const 51)
)
(assert_return (invoke "break-br_table-num-num" (i32.const 1))
  (i32.const 50) (i64.const 51)
)
(assert_return (invoke "break-br_table-num-num" (i32.const 10))
  (i32.const 50) (i64.const 51)
)
(assert_return (invoke "break-br_table-num-num" (i32.const -100))
  (i32.const 50) (i64.const 51)
)
(assert_return (invoke "break-br_table-nested-empty" (i32.const 0)))
(assert_return (invoke "break-br_table-nested-empty" (i32.const 1)))
(assert_return (invoke "break-br_table-nested-empty" (i32.const 3)))
(assert_return (invoke "break-br_table-nested-empty" (i32.const -2)))
(assert_return
  (invoke "break-br_table-nested-num" (i32.const 0)) (i32.const 52)
)
(assert_return
  (invoke "break-br_table-nested-num" (i32.const 1)) (i32.const 50)
)
(assert_return
  (invoke "break-br_table-nested-num" (i32.const 2)) (i32.const 52)
)
(assert_return
  (invoke "break-br_table-nested-num" (i32.const -3)) (i32.const 52)
)
(assert_return
  (invoke "break-br_table-nested-num-num" (i32.const 0))
  (i32.const 101) (i32.const 52)
)
(assert_return
  (invoke "break-br_table-nested-num-num" (i32.const 1))
  (i32.const 50) (i32.const 51)
)
(assert_return
  (invoke "break-br_table-nested-num-num" (i32.const 2))
  (i32.const 101) (i32.const 52)
)
(assert_return
  (invoke "break-br_table-nested-num-num" (i32.const -3))
  (i32.const 101) (i32.const 52)
)

(assert_return
  (invoke "large-sig"
    (i32.const 0) (i64.const 1) (f32.const 2) (f32.const 3)
    (i32.const 4) (f64.const 5) (f32.const 6) (i32.const 7)
    (i32.const 8) (i32.const 9) (f32.const 10) (f64.const 11)
    (f64.const 12) (f64.const 13) (i32.const 14) (i32.const 15)
    (f32.const 16)
  )
  (f64.const 5) (f32.const 2) (i32.const 0) (i32.const 8)
  (i32.const 7) (i64.const 1) (f32.const 3) (i32.const 9)
  (i32.const 4) (f32.const 6) (f64.const 13) (f64.const 11)
  (i32.const 15) (f32.const 16) (i32.const 14) (f64.const 12)
)

(assert_return (invoke "init-local-i32") (i32.const 0))
(assert_return (invoke "init-local-i64") (i64.const 0))
(assert_return (invoke "init-local-f32") (f32.const 0))
(assert_return (invoke "init-local-f64") (f64.const 0))


;; Expansion of inline function types

(module
  (type $t (;0;) (func (param i32)))
  (type (;1;) (func (result f64)))
  (type (;2;) (func))
  (type (;3;) (func (param i64)))
  (type (;4;) (func (param i64 i64)))
  (type (;5;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 3)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 5)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 5)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 5)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 5)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 5)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 5)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;7;) (type 4)))
  (import "spectest" "finite_wasm_unstack" (func $finite_wasm_unstack (;8;) (type 4)))
  (func $f (;9;) (type 1) (result f64)
    block (result f64) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      f64.const 0x0p+0 (;=0;)
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $g (;10;) (type $t) (param i32)
    block ;; label = @1
      i64.const 0
      i64.const 1
      call $finite_wasm_stack
    end
    i64.const 0
    i64.const 1
    call $finite_wasm_unstack
  )
  (func $i32->void (;11;) (type $t) (param i32)
    block ;; label = @1
      i64.const 0
      i64.const 1
      call $finite_wasm_stack
    end
    i64.const 0
    i64.const 1
    call $finite_wasm_unstack
  )
  (func $void->f64 (;12;) (type 1) (result f64)
    block (result f64) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      f64.const 0x0p+0 (;=0;)
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $check (;13;) (type 2)
    block ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i32.const 0
      call $i32->void
      i64.const 1
      call $finite_wasm_gas
      call $void->f64
      i64.const 1
      call $finite_wasm_gas
      drop
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
)

(module
  (type $proc (;0;) (func (result i32)))
  (type $sig (;1;) (func (param i32) (result i32)))
  (type (;2;) (func (param i64)))
  (type (;3;) (func (param i64 i64)))
  (type (;4;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 2)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 4)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 4)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 4)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 4)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 4)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 4)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;7;) (type 3)))
  (import "spectest" "finite_wasm_unstack" (func $finite_wasm_unstack (;8;) (type 3)))
  (export "f" (func 9))
  (export "g" (func 11))
  (export "p" (func 12))
  (func (;9;) (type $sig) (param $var i32) (result i32)
    (local i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 1
    end
    i64.const 4
    i64.const 2
    call $finite_wasm_unstack
  )
  (func $g (;10;) (type $sig) (param $var i32) (result i32)
    (local i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 1
    end
    i64.const 4
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;11;) (type $sig) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      call $g
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;12;) (type $proc) (result i32)
    (local $var i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      i32.const 42
      local.set $var
      local.get $var
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
)

(assert_return (invoke "f" (i32.const 42)) (i32.const 0))
(assert_return (invoke "g" (i32.const 42)) (i32.const 0))
(assert_return (invoke "p") (i32.const 42))


(module
  (type $sig (;0;) (func))
  (type $empty-sig-duplicate (;1;) (func))
  (type $complex-sig-duplicate (;2;) (func (param i64 i64 f64 i64 f64 i64 f32 i32)))
  (type (;3;) (func (param f64 i64 f64 i64 f64 i64 f32 i32)))
  (type (;4;) (func (param i64)))
  (type (;5;) (func (param i64 i64)))
  (type (;6;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 4)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 6)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 6)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 6)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 6)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 6)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 6)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;7;) (type 5)))
  (import "spectest" "finite_wasm_unstack" (func $finite_wasm_unstack (;8;) (type 5)))
  (table (;0;) 7 7 funcref)
  (export "signature-explicit-reused" (func 16))
  (export "signature-implicit-reused" (func 17))
  (export "signature-explicit-duplicate" (func 18))
  (export "signature-implicit-duplicate" (func 19))
  (elem (;0;) (table 0) (i32.const 0) func $complex-sig-3 $empty-sig-2 $complex-sig-1 $complex-sig-3 $empty-sig-1 $complex-sig-4 $complex-sig-5)
  (func $empty-sig-1 (;9;) (type $sig))
  (func $complex-sig-1 (;10;) (type 3) (param f64 i64 f64 i64 f64 i64 f32 i32)
    block ;; label = @1
      i64.const 0
      i64.const 8
      call $finite_wasm_stack
    end
    i64.const 0
    i64.const 8
    call $finite_wasm_unstack
  )
  (func $empty-sig-2 (;11;) (type $sig))
  (func $complex-sig-2 (;12;) (type 3) (param f64 i64 f64 i64 f64 i64 f32 i32)
    block ;; label = @1
      i64.const 0
      i64.const 8
      call $finite_wasm_stack
    end
    i64.const 0
    i64.const 8
    call $finite_wasm_unstack
  )
  (func $complex-sig-3 (;13;) (type 3) (param f64 i64 f64 i64 f64 i64 f32 i32)
    block ;; label = @1
      i64.const 0
      i64.const 8
      call $finite_wasm_stack
    end
    i64.const 0
    i64.const 8
    call $finite_wasm_unstack
  )
  (func $complex-sig-4 (;14;) (type $complex-sig-duplicate) (param i64 i64 f64 i64 f64 i64 f32 i32)
    block ;; label = @1
      i64.const 0
      i64.const 8
      call $finite_wasm_stack
    end
    i64.const 0
    i64.const 8
    call $finite_wasm_unstack
  )
  (func $complex-sig-5 (;15;) (type $complex-sig-duplicate) (param i64 i64 f64 i64 f64 i64 f32 i32)
    block ;; label = @1
      i64.const 0
      i64.const 8
      call $finite_wasm_stack
    end
    i64.const 0
    i64.const 8
    call $finite_wasm_unstack
  )
  (func (;16;) (type $sig)
    block ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i32.const 1
      call_indirect (type $sig)
      i64.const 2
      call $finite_wasm_gas
      i32.const 4
      call_indirect (type $sig)
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;17;) (type $sig)
    block ;; label = @1
      i64.const 76
      i64.const 0
      call $finite_wasm_stack
      i64.const 10
      call $finite_wasm_gas
      f64.const 0x0p+0 (;=0;)
      i64.const 0
      f64.const 0x0p+0 (;=0;)
      i64.const 0
      f64.const 0x0p+0 (;=0;)
      i64.const 0
      f32.const 0x0p+0 (;=0;)
      i32.const 0
      i32.const 0
      call_indirect (type 3)
      i64.const 10
      call $finite_wasm_gas
      f64.const 0x0p+0 (;=0;)
      i64.const 0
      f64.const 0x0p+0 (;=0;)
      i64.const 0
      f64.const 0x0p+0 (;=0;)
      i64.const 0
      f32.const 0x0p+0 (;=0;)
      i32.const 0
      i32.const 2
      call_indirect (type 3)
      i64.const 10
      call $finite_wasm_gas
      f64.const 0x0p+0 (;=0;)
      i64.const 0
      f64.const 0x0p+0 (;=0;)
      i64.const 0
      f64.const 0x0p+0 (;=0;)
      i64.const 0
      f32.const 0x0p+0 (;=0;)
      i32.const 0
      i32.const 3
      call_indirect (type 3)
    end
    i64.const 76
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;18;) (type $sig)
    block ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i32.const 1
      call_indirect (type $empty-sig-duplicate)
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;19;) (type $sig)
    block ;; label = @1
      i64.const 68
      i64.const 0
      call $finite_wasm_stack
      i64.const 10
      call $finite_wasm_gas
      i64.const 0
      i64.const 0
      f64.const 0x0p+0 (;=0;)
      i64.const 0
      f64.const 0x0p+0 (;=0;)
      i64.const 0
      f32.const 0x0p+0 (;=0;)
      i32.const 0
      i32.const 5
      call_indirect (type $complex-sig-duplicate)
      i64.const 10
      call $finite_wasm_gas
      i64.const 0
      i64.const 0
      f64.const 0x0p+0 (;=0;)
      i64.const 0
      f64.const 0x0p+0 (;=0;)
      i64.const 0
      f32.const 0x0p+0 (;=0;)
      i32.const 0
      i32.const 6
      call_indirect (type $complex-sig-duplicate)
    end
    i64.const 68
    i64.const 0
    call $finite_wasm_unstack
  )
)

(assert_return (invoke "signature-explicit-reused"))
(assert_return (invoke "signature-implicit-reused"))
(assert_return (invoke "signature-explicit-duplicate"))
(assert_return (invoke "signature-implicit-duplicate"))


;; Malformed type use

