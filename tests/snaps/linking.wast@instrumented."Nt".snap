(module $Nt
  (type (;0;) (func))
  (type (;1;) (func (result i32)))
  (type (;2;) (func (param i32) (result i32)))
  (type (;3;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;1;) (type 3)))
  (import "Mt" "call" (func $f (;2;) (type 2)))
  (import "Mt" "h" (func $h (;3;) (type 1)))
  (func $g (;4;) (type 1) (result i32)
    i64.const 0
    call $h
    i32.const 5
  )
  (func (;5;) (type 2) (param i32) (result i32)
    i64.const 0
    call $h
    local.get 0
    call $f
  )
  (func (;6;) (type 2) (param i32) (result i32)
    i64.const 1000000000004
    call $h
    local.get 0
    call_indirect (type 1)
  )
  (table (;0;) 5 5 funcref)
  (export "Mt.call" (func $f))
  (export "call Mt.call" (func 5))
  (export "call" (func 6))
  (elem (;0;) (i32.const 0) func)
)