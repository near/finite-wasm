(module
  (type (;0;) (func))
  (type (;1;) (func (param i32)))
  (type (;2;) (func (param f32)))
  (type (;3;) (func (result i32)))
  (type (;4;) (func (result f32)))
  (type (;5;) (func (param i32) (result i32)))
  (type (;6;) (func (param i64) (result i64)))
  (type (;7;) (func (param i64)))
  (type (;8;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 7)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 8)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 8)))
  (table (;0;) 10 funcref)
  (table (;1;) 10 20 funcref)
  (memory (;0;) 2)
  (global (;0;) i32 i32.const 55)
  (global (;1;) f32 f32.const 0x1.6p+5 (;=44;))
  (global (;2;) (mut i64) i64.const 66)
  (export "func" (func 3))
  (export "func-i32" (func 4))
  (export "func-f32" (func 5))
  (export "func->i32" (func 6))
  (export "func->f32" (func 7))
  (export "func-i32->i32" (func 8))
  (export "func-i64->i64" (func 9))
  (export "global-i32" (global 0))
  (export "global-f32" (global 1))
  (export "global-mut-i64" (global 2))
  (export "table-10-inf" (table 0))
  (export "table-10-20" (table 1))
  (export "memory-2-inf" (memory 0))
  (func (;3;) (type 0))
  (func (;4;) (type 1) (param i32)
    block ;; label = @1
      i64.const 0
      i64.const 1
      call 1
    end
    i64.const 0
    i64.const 1
    call 2
  )
  (func (;5;) (type 2) (param f32)
    block ;; label = @1
      i64.const 0
      i64.const 1
      call 1
    end
    i64.const 0
    i64.const 1
    call 2
  )
  (func (;6;) (type 3) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call 1
      i64.const 1
      call 0
      i32.const 22
    end
    i64.const 4
    i64.const 0
    call 2
  )
  (func (;7;) (type 4) (result f32)
    block (result f32) ;; label = @1
      i64.const 4
      i64.const 0
      call 1
      i64.const 1
      call 0
      f32.const 0x1.6p+3 (;=11;)
    end
    i64.const 4
    i64.const 0
    call 2
  )
  (func (;8;) (type 5) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 1
      i64.const 1
      call 0
      local.get 0
    end
    i64.const 4
    i64.const 1
    call 2
  )
  (func (;9;) (type 6) (param i64) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 1
      call 1
      i64.const 1
      call 0
      local.get 0
    end
    i64.const 8
    i64.const 1
    call 2
  )
)

(register "test")


;; Functions

(module
  (type $func_i32 (;0;) (func (param i32)))
  (type $func_i64 (;1;) (func (param i64)))
  (type $func_f32 (;2;) (func (param f32)))
  (type $func_f64 (;3;) (func (param f64)))
  (type $forward (;4;) (func (param i32)))
  (type (;5;) (func (param i32 f32)))
  (type (;6;) (func (param f64 f64)))
  (type (;7;) (func (param i64) (result i64)))
  (type (;8;) (func (param i64)))
  (type (;9;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 8)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;1;) (type 9)))
  (import "spectest" "finite_wasm_unstack" (func $finite_wasm_unstack (;2;) (type 9)))
  (import "spectest" "print_i32" (func (;3;) (type $func_i32)))
  (import "spectest" "print_i64" (func (;4;) (type $func_i64)))
  (import "spectest" "print_i32" (func $print_i32 (;5;) (type $func_i32)))
  (import "spectest" "print_i64" (func $print_i64 (;6;) (type $func_i64)))
  (import "spectest" "print_f32" (func $print_f32 (;7;) (type $func_f32)))
  (import "spectest" "print_f64" (func $print_f64 (;8;) (type $func_f64)))
  (import "spectest" "print_i32_f32" (func $print_i32_f32 (;9;) (type 5)))
  (import "spectest" "print_f64_f64" (func $print_f64_f64 (;10;) (type 6)))
  (import "spectest" "print_i32" (func $print_i32-2 (;11;) (type $func_i32)))
  (import "spectest" "print_f64" (func $print_f64-2 (;12;) (type $func_f64)))
  (import "test" "func-i64->i64" (func $i64->i64 (;13;) (type 7)))
  (import "spectest" "print_i32" (func (;14;) (type $func_i32)))
  (import "spectest" "print_i32" (func $p (;15;) (type $func_i32)))
  (import "spectest" "print_i32" (func (;16;) (type $func_i32)))
  (import "spectest" "print_i32" (func (;17;) (type $func_i32)))
  (import "spectest" "print_i32" (func (;18;) (type $func_i32)))
  (import "spectest" "print_i32" (func (;19;) (type $forward)))
  (import "spectest" "print_i32" (func (;20;) (type $forward)))
  (table (;0;) 2 2 funcref)
  (export "p1" (func 14))
  (export "p2" (func $p))
  (export "p3" (func 16))
  (export "p4" (func 16))
  (export "p5" (func 17))
  (export "p6" (func 18))
  (export "print32" (func 21))
  (export "print64" (func 22))
  (elem (;0;) (table 0) (i32.const 0) func $print_i32 $print_f64)
  (func (;21;) (type $func_i32) (param $i i32)
    (local $x f32)
    block ;; label = @1
      i64.const 8
      i64.const 2
      call $finite_wasm_stack
      i64.const 5
      call $finite_wasm_gas
      local.get $i
      f32.convert_i32_s
      local.set $x
      local.get $i
      call 3
      i64.const 5
      call $finite_wasm_gas
      local.get $i
      i32.const 1
      i32.add
      f32.const 0x1.5p+5 (;=42;)
      call $print_i32_f32
      i64.const 2
      call $finite_wasm_gas
      local.get $i
      call $print_i32
      i64.const 2
      call $finite_wasm_gas
      local.get $i
      call $print_i32-2
      i64.const 2
      call $finite_wasm_gas
      local.get $x
      call $print_f32
      i64.const 3
      call $finite_wasm_gas
      local.get $i
      i32.const 0
      call_indirect (type $func_i32)
    end
    i64.const 8
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;22;) (type $func_i64) (param $i i64)
    (local $x f64)
    block ;; label = @1
      i64.const 16
      i64.const 2
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get $i
      call $i64->i64
      i64.const 4
      call $finite_wasm_gas
      f64.convert_i64_s
      local.set $x
      local.get $i
      call 4
      i64.const 5
      call $finite_wasm_gas
      local.get $x
      f64.const 0x1p+0 (;=1;)
      f64.add
      f64.const 0x1.a8p+5 (;=53;)
      call $print_f64_f64
      i64.const 2
      call $finite_wasm_gas
      local.get $i
      call $print_i64
      i64.const 2
      call $finite_wasm_gas
      local.get $x
      call $print_f64
      i64.const 2
      call $finite_wasm_gas
      local.get $x
      call $print_f64-2
      i64.const 3
      call $finite_wasm_gas
      local.get $x
      i32.const 1
      call_indirect (type $func_f64)
    end
    i64.const 16
    i64.const 2
    call $finite_wasm_unstack
  )
)

(assert_return (invoke "print32" (i32.const 13)))
(assert_return (invoke "print64" (i64.const 24)))

(module
  (type (;0;) (func (param i32)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;1;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func $finite_wasm_unstack (;2;) (type 2)))
  (import "spectest" "print_i32" (func $imported_print (;3;) (type 0)))
  (export "print_i32" (func 4))
  (func (;4;) (type 0) (param $i i32)
    block ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get $i
      call $imported_print
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
)

(assert_return (invoke "print_i32" (i32.const 13)))

;; Export sharing name with import
(module
  (type (;0;) (func (param i32)))
  (type (;1;) (func (param i32 i32) (result i32)))
  (type (;2;) (func (param i64)))
  (type (;3;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 2)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;1;) (type 3)))
  (import "spectest" "finite_wasm_unstack" (func $finite_wasm_unstack (;2;) (type 3)))
  (import "spectest" "print_i32" (func $imported_print (;3;) (type 0)))
  (export "print_i32" (func 4))
  (func (;4;) (type 1) (param $i i32) (param $j i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 2
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      local.get $i
      local.get $j
      i32.add
    end
    i64.const 8
    i64.const 2
    call $finite_wasm_unstack
  )
)

(assert_return (invoke "print_i32" (i32.const 5) (i32.const 11)) (i32.const 16))

(module
  (type (;0;) (func))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 2)))
  (import "test" "func" (func (;3;) (type 0)))
)

(module
  (type (;0;) (func (param i32)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 2)))
  (import "test" "func-i32" (func (;3;) (type 0)))
)

(module
  (type (;0;) (func (param f32)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 2)))
  (import "test" "func-f32" (func (;3;) (type 0)))
)

(module
  (type (;0;) (func (result i32)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 2)))
  (import "test" "func->i32" (func (;3;) (type 0)))
)

(module
  (type (;0;) (func (result f32)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 2)))
  (import "test" "func->f32" (func (;3;) (type 0)))
)

(module
  (type (;0;) (func (param i32) (result i32)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 2)))
  (import "test" "func-i32->i32" (func (;3;) (type 0)))
)

(module
  (type (;0;) (func (param i64) (result i64)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 2)))
  (import "test" "func-i64->i64" (func (;3;) (type 0)))
)

(module
  (type (;0;) (func (result i32)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 2)))
  (import "spectest" "global_i32" (global (;0;) i32))
  (import "spectest" "global_i32" (global (;1;) i32))
  (import "spectest" "global_i32" (global $x (;2;) i32))
  (import "spectest" "global_i32" (global $y (;3;) i32))
  (import "spectest" "global_i64" (global (;4;) i64))
  (import "spectest" "global_f32" (global (;5;) f32))
  (import "spectest" "global_f64" (global (;6;) f64))
  (export "get-0" (func 3))
  (export "get-1" (func 4))
  (export "get-x" (func 5))
  (export "get-y" (func 6))
  (func (;3;) (type 0) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call 1
      i64.const 1
      call 0
      global.get 0
    end
    i64.const 4
    i64.const 0
    call 2
  )
  (func (;4;) (type 0) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call 1
      i64.const 1
      call 0
      global.get 1
    end
    i64.const 4
    i64.const 0
    call 2
  )
  (func (;5;) (type 0) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call 1
      i64.const 1
      call 0
      global.get $x
    end
    i64.const 4
    i64.const 0
    call 2
  )
  (func (;6;) (type 0) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call 1
      i64.const 1
      call 0
      global.get $y
    end
    i64.const 4
    i64.const 0
    call 2
  )
)

(assert_return (invoke "get-0") (i32.const 666))
(assert_return (invoke "get-1") (i32.const 666))
(assert_return (invoke "get-x") (i32.const 666))
(assert_return (invoke "get-y") (i32.const 666))

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "test" "global-i32" (global (;0;) i32))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "test" "global-f32" (global (;0;) f32))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "test" "global-mut-i64" (global (;0;) (mut i64)))
)

(module
  (type (;0;) (func (result i32)))
  (type (;1;) (func (param i32) (result i32)))
  (type (;2;) (func (param i64)))
  (type (;3;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 2)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;1;) (type 3)))
  (import "spectest" "finite_wasm_unstack" (func $finite_wasm_unstack (;2;) (type 3)))
  (import "spectest" "table" (table $tab (;0;) 10 20 funcref))
  (export "call" (func 3))
  (elem (;0;) (table $tab) (i32.const 1) func $f $g)
  (func (;3;) (type 1) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      call_indirect (type 0)
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func $f (;4;) (type 0) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 11
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $g (;5;) (type 0) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 22
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
)

(assert_trap (invoke "call" (i32.const 0)) "uninitialized element")
(assert_return (invoke "call" (i32.const 1)) (i32.const 11))
(assert_return (invoke "call" (i32.const 2)) (i32.const 22))
(assert_trap (invoke "call" (i32.const 3)) "uninitialized element")
(assert_trap (invoke "call" (i32.const 100)) "undefined element")


(module
  (type (;0;) (func (result i32)))
  (type (;1;) (func (param i32) (result i32)))
  (type (;2;) (func (param i64)))
  (type (;3;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 2)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;1;) (type 3)))
  (import "spectest" "finite_wasm_unstack" (func $finite_wasm_unstack (;2;) (type 3)))
  (import "spectest" "table" (table $tab (;0;) 10 20 funcref))
  (export "call" (func 3))
  (elem (;0;) (table $tab) (i32.const 1) func $f $g)
  (func (;3;) (type 1) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      call_indirect (type 0)
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func $f (;4;) (type 0) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 11
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $g (;5;) (type 0) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 22
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
)

(assert_trap (invoke "call" (i32.const 0)) "uninitialized element")
(assert_return (invoke "call" (i32.const 1)) (i32.const 11))
(assert_return (invoke "call" (i32.const 2)) (i32.const 22))
(assert_trap (invoke "call" (i32.const 3)) "uninitialized element")
(assert_trap (invoke "call" (i32.const 100)) "undefined element")


(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "spectest" "table" (table (;0;) 0 funcref))
  (import "spectest" "table" (table (;1;) 0 funcref))
  (table (;2;) 10 funcref)
  (table (;3;) 10 funcref)
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "test" "table-10-inf" (table (;0;) 10 funcref))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "test" "table-10-inf" (table (;0;) 5 funcref))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "test" "table-10-inf" (table (;0;) 0 funcref))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "test" "table-10-20" (table (;0;) 10 funcref))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "test" "table-10-20" (table (;0;) 5 funcref))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "test" "table-10-20" (table (;0;) 0 funcref))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "test" "table-10-20" (table (;0;) 10 20 funcref))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "test" "table-10-20" (table (;0;) 5 20 funcref))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "test" "table-10-20" (table (;0;) 0 20 funcref))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "test" "table-10-20" (table (;0;) 10 25 funcref))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "test" "table-10-20" (table (;0;) 5 25 funcref))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "test" "table-10-20" (table (;0;) 0 25 funcref))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "spectest" "table" (table (;0;) 10 funcref))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "spectest" "table" (table (;0;) 5 funcref))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "spectest" "table" (table (;0;) 0 funcref))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "spectest" "table" (table (;0;) 10 20 funcref))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "spectest" "table" (table (;0;) 5 20 funcref))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "spectest" "table" (table (;0;) 0 20 funcref))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "spectest" "table" (table (;0;) 10 25 funcref))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "spectest" "table" (table (;0;) 5 25 funcref))
)

(module
  (type (;0;) (func (param i32) (result i32)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 2)))
  (import "spectest" "memory" (memory (;0;) 1 2))
  (export "load" (func 3))
  (func (;3;) (type 0) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 1
      i64.const 2
      call 0
      local.get 0
      i32.load
    end
    i64.const 4
    i64.const 1
    call 2
  )
  (data (;0;) (i32.const 10) "\10")
)

(assert_return (invoke "load" (i32.const 0)) (i32.const 0))
(assert_return (invoke "load" (i32.const 10)) (i32.const 16))
(assert_return (invoke "load" (i32.const 8)) (i32.const 0x100000))
(assert_trap (invoke "load" (i32.const 1000000)) "out of bounds memory access")

(module
  (type (;0;) (func (param i32) (result i32)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 2)))
  (import "spectest" "memory" (memory (;0;) 1 2))
  (export "load" (func 3))
  (func (;3;) (type 0) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 1
      i64.const 2
      call 0
      local.get 0
      i32.load
    end
    i64.const 4
    i64.const 1
    call 2
  )
  (data (;0;) (i32.const 10) "\10")
)

(assert_return (invoke "load" (i32.const 0)) (i32.const 0))
(assert_return (invoke "load" (i32.const 10)) (i32.const 16))
(assert_return (invoke "load" (i32.const 8)) (i32.const 0x100000))
(assert_trap (invoke "load" (i32.const 1000000)) "out of bounds memory access")

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "test" "memory-2-inf" (memory (;0;) 2))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "test" "memory-2-inf" (memory (;0;) 1))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "test" "memory-2-inf" (memory (;0;) 0))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "spectest" "memory" (memory (;0;) 1))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "spectest" "memory" (memory (;0;) 0))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "spectest" "memory" (memory (;0;) 1 2))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "spectest" "memory" (memory (;0;) 0 2))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "spectest" "memory" (memory (;0;) 1 3))
)

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "spectest" "memory" (memory (;0;) 0 3))
)

(module
  (type (;0;) (func (param i32) (result i32)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 2)))
  (import "spectest" "memory" (memory (;0;) 0 3))
  (export "grow" (func 3))
  (func (;3;) (type 0) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 1
      i64.const 1
      call 0
      local.get 0
      i64.const 1
      call 0
      memory.grow
    end
    i64.const 4
    i64.const 1
    call 2
  )
)

(assert_return (invoke "grow" (i32.const 0)) (i32.const 1))
(assert_return (invoke "grow" (i32.const 1)) (i32.const 1))
(assert_return (invoke "grow" (i32.const 0)) (i32.const 2))
(assert_return (invoke "grow" (i32.const 1)) (i32.const -1))
(assert_return (invoke "grow" (i32.const 0)) (i32.const 2))

(module $Mgm
  (type (;0;) (func (result i32)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 2)))
  (memory (;0;) 1)
  (export "memory" (memory 0))
  (export "grow" (func 3))
  (func (;3;) (type 0) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call 1
      i64.const 1
      call 0
      i32.const 1
      i64.const 1
      call 0
      memory.grow
    end
    i64.const 4
    i64.const 0
    call 2
  )
)

(register "grown-memory" $Mgm)
(assert_return (invoke $Mgm "grow") (i32.const 1)) ;; now size is 2
(module $Mgim1
  (type (;0;) (func (result i32)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 2)))
  (import "grown-memory" "memory" (memory (;0;) 2))
  (export "memory" (memory 0))
  (export "grow" (func 3))
  (func (;3;) (type 0) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call 1
      i64.const 1
      call 0
      i32.const 1
      i64.const 1
      call 0
      memory.grow
    end
    i64.const 4
    i64.const 0
    call 2
  )
)

(register "grown-imported-memory" $Mgim1)
(assert_return (invoke $Mgim1 "grow") (i32.const 2)) ;; now size is 3
(module $Mgim2
  (type (;0;) (func (result i32)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 1)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 2)))
  (import "grown-imported-memory" "memory" (memory (;0;) 3))
  (export "size" (func 3))
  (func (;3;) (type 0) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call 1
      i64.const 1
      call 0
      memory.size
    end
    i64.const 4
    i64.const 0
    call 2
  )
)

(assert_return (invoke $Mgim2 "size") (i32.const 3))


;; Syntax errors

(module)

(register "not wasm")
