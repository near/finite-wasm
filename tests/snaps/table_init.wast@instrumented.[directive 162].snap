(module
  (type (;0;) (func (result i32)))
  (type (;1;) (func))
  (type (;2;) (func (param i32) (result i32)))
  (type (;3;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 3)))
  (import "a" "ef0" (func (;2;) (type 0)))
  (import "a" "ef1" (func (;3;) (type 0)))
  (import "a" "ef2" (func (;4;) (type 0)))
  (import "a" "ef3" (func (;5;) (type 0)))
  (import "a" "ef4" (func (;6;) (type 0)))
  (func (;7;) (type 0) (result i32)
    i64.const 0
    call 1
    i64.const 2
    call 0
    i32.const 5
  )
  (func (;8;) (type 0) (result i32)
    i64.const 0
    call 1
    i64.const 2
    call 0
    i32.const 6
  )
  (func (;9;) (type 0) (result i32)
    i64.const 0
    call 1
    i64.const 2
    call 0
    i32.const 7
  )
  (func (;10;) (type 0) (result i32)
    i64.const 0
    call 1
    i64.const 2
    call 0
    i32.const 8
  )
  (func (;11;) (type 0) (result i32)
    i64.const 0
    call 1
    i64.const 2
    call 0
    i32.const 9
  )
  (func (;12;) (type 1)
    i64.const 1000000000004
    call 1
    i64.const 3
    call 0
    i32.const 7
    i32.const 0
    i32.const 4
    i64.const 1
    call 0
    table.init $t1 1
    i64.const 4
    call 0
    elem.drop 1
    i32.const 15
    i32.const 1
    i32.const 3
    i64.const 1
    call 0
    table.init $t1 3
    i64.const 4
    call 0
    elem.drop 3
    i32.const 20
    i32.const 15
    i32.const 5
    i64.const 1
    call 0
    table.copy $t1 $t1
    i64.const 3
    call 0
    i32.const 21
    i32.const 29
    i32.const 1
    i64.const 1
    call 0
    table.copy $t1 $t1
    i64.const 3
    call 0
    i32.const 24
    i32.const 10
    i32.const 1
    i64.const 1
    call 0
    table.copy $t1 $t1
    i64.const 3
    call 0
    i32.const 13
    i32.const 11
    i32.const 4
    i64.const 1
    call 0
    table.copy $t1 $t1
    i64.const 3
    call 0
    i32.const 19
    i32.const 20
    i32.const 5
    i64.const 1
    call 0
    table.copy $t1 $t1
    i64.const 1
    call 0
  )
  (func (;13;) (type 2) (param i32) (result i32)
    i64.const 1000000000004
    call 1
    i64.const 2
    call 0
    local.get 0
    call_indirect $t1 (type 0)
    i64.const 1
    call 0
  )
  (table $t0 (;0;) 30 30 funcref)
  (table $t1 (;1;) 30 30 funcref)
  (export "test" (func 12))
  (export "check" (func 13))
  (elem (;0;) (table $t1) (i32.const 2) func 5 3 6 3)
  (elem (;1;) funcref (ref.func 4) (ref.func 9) (ref.func 3) (ref.func 10))
  (elem (;2;) (table $t1) (i32.const 12) func 9 7 4 5 8)
  (elem (;3;) funcref (ref.func 7) (ref.func 11) (ref.func 4) (ref.func 9) (ref.func 8))
)