(module
  (type $check (;0;) (func (param i32 i32) (result i32)))
  (type (;1;) (func (result i32)))
  (type (;2;) (func (result i64)))
  (type (;3;) (func (result externref)))
  (type (;4;) (func (param i32)))
  (type (;5;) (func (param i64)))
  (type (;6;) (func (param externref)))
  (type (;7;) (func (result f32)))
  (type (;8;) (func (result f64)))
  (type (;9;) (func (param f32)))
  (type (;10;) (func (param f64)))
  (type (;11;) (func))
  (type (;12;) (func (param i32) (result i32)))
  (type (;13;) (func (param i64)))
  (type (;14;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 13)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;1;) (type 14)))
  (import "spectest" "finite_wasm_unstack" (func $finite_wasm_unstack (;2;) (type 14)))
  (import "spectest" "global_i32" (global (;0;) i32))
  (import "spectest" "global_i64" (global (;1;) i64))
  (func (;3;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      global.get $a
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;4;) (type 2) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      global.get $b
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;5;) (type 3) (result externref)
    block (result externref) ;; label = @1
      i64.const 32
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      global.get $r
    end
    i64.const 32
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;6;) (type 3) (result externref)
    block (result externref) ;; label = @1
      i64.const 32
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      global.get $mr
    end
    i64.const 32
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;7;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      global.get $x
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;8;) (type 2) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      global.get $y
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;9;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      global.get $z1
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;10;) (type 2) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      global.get $z2
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;11;) (type 4) (param i32)
    block ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      global.set $x
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;12;) (type 5) (param i64)
    block ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      global.set $y
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;13;) (type 6) (param externref)
    block ;; label = @1
      i64.const 32
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      global.set $mr
    end
    i64.const 32
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;14;) (type 7) (result f32)
    block (result f32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      global.get 3
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;15;) (type 8) (result f64)
    block (result f64) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      global.get 4
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;16;) (type 7) (result f32)
    block (result f32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      global.get 7
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;17;) (type 8) (result f64)
    block (result f64) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      global.get 8
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;18;) (type 9) (param f32)
    block ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      global.set 7
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;19;) (type 10) (param f64)
    block ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      global.set 8
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func $dummy (;20;) (type 11))
  (func (;21;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      global.get $x
      i32.const 2
      i32.const 3
      select
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;22;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      i32.const 2
      global.get $x
      i32.const 3
      select
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;23;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      i32.const 2
      i32.const 3
      global.get $x
      select
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;24;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      loop (result i32) ;; label = @2
        global.get $x
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        call $dummy
      end
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;25;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      loop (result i32) ;; label = @2
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        global.get $x
        call $dummy
      end
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;26;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      loop (result i32) ;; label = @2
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        global.get $x
      end
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;27;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      global.get $x
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const 2
      else
        i64.const 1
        call $finite_wasm_gas
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.const 3
      end
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;28;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i32.const 1
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        global.get $x
      else
        i64.const 1
        call $finite_wasm_gas
        i32.const 2
      end
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;29;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i32.const 0
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i32.const 2
      else
        i64.const 1
        call $finite_wasm_gas
        global.get $x
      end
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;30;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        global.get $x
        i32.const 2
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        i32.const 3
        i64.const 8
        i64.const 0
        call $finite_wasm_unstack
        return
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;31;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 2
        global.get $x
        br_if 0 (;@2;)
        i64.const 2
        call $finite_wasm_gas
        i32.const 3
        i64.const 8
        i64.const 0
        call $finite_wasm_unstack
        return
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;32;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        global.get $x
        i32.const 2
        br_table 0 (;@2;) 0 (;@2;)
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;33;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 2
        global.get $x
        br_table 0 (;@2;) 0 (;@2;)
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $func (;34;) (type $check) (param i32 i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 4
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;35;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 5
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        global.get $x
        i32.const 2
        i32.const 0
        call_indirect (type $check)
      end
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;36;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 5
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 2
        global.get $x
        i32.const 0
        call_indirect (type $check)
      end
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;37;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 5
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 2
        i32.const 0
        global.get $x
        call_indirect (type $check)
      end
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;38;) (type 11)
    block ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      global.get $x
      i32.const 1
      i32.store
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;39;) (type 11)
    block ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      i32.const 0
      global.get $x
      i32.store
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;40;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      global.get $x
      i32.load
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;41;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      global.get $x
      i64.const 1
      call $finite_wasm_gas
      memory.grow
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $f (;42;) (type 12) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;43;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      global.get $x
      call $f
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;44;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      global.get $x
      i64.const 4
      i64.const 0
      call $finite_wasm_unstack
      return
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;45;) (type 11)
    block ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      global.get $x
      drop
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;46;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        global.get $x
        br 0 (;@2;)
      end
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;47;) (type 12) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      global.get $x
      local.set 0
      local.get 0
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;48;) (type 12) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      global.get $x
      local.tee 0
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;49;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      global.get $x
      global.set $x
      global.get $x
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;50;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      global.get $x
      i32.eqz
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;51;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      global.get $x
      global.get $x
      i32.mul
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;52;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      global.get 0
      i32.const 1
      i32.gt_u
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (table (;0;) 1 1 funcref)
  (memory (;0;) 1)
  (global $a (;2;) i32 i32.const -2)
  (global (;3;) f32 f32.const -0x1.8p+1 (;=-3;))
  (global (;4;) f64 f64.const -0x1p+2 (;=-4;))
  (global $b (;5;) i64 i64.const -5)
  (global $x (;6;) (mut i32) i32.const -12)
  (global (;7;) (mut f32) f32.const -0x1.ap+3 (;=-13;))
  (global (;8;) (mut f64) f64.const -0x1.cp+3 (;=-14;))
  (global $y (;9;) (mut i64) i64.const -15)
  (global $z1 (;10;) i32 global.get 0)
  (global $z2 (;11;) i64 global.get 1)
  (global $r (;12;) externref ref.null extern)
  (global $mr (;13;) (mut externref) ref.null extern)
  (global (;14;) funcref ref.null func)
  (export "get-a" (func 3))
  (export "get-b" (func 4))
  (export "get-r" (func 5))
  (export "get-mr" (func 6))
  (export "get-x" (func 7))
  (export "get-y" (func 8))
  (export "get-z1" (func 9))
  (export "get-z2" (func 10))
  (export "set-x" (func 11))
  (export "set-y" (func 12))
  (export "set-mr" (func 13))
  (export "get-3" (func 14))
  (export "get-4" (func 15))
  (export "get-7" (func 16))
  (export "get-8" (func 17))
  (export "set-7" (func 18))
  (export "set-8" (func 19))
  (export "as-select-first" (func 21))
  (export "as-select-mid" (func 22))
  (export "as-select-last" (func 23))
  (export "as-loop-first" (func 24))
  (export "as-loop-mid" (func 25))
  (export "as-loop-last" (func 26))
  (export "as-if-condition" (func 27))
  (export "as-if-then" (func 28))
  (export "as-if-else" (func 29))
  (export "as-br_if-first" (func 30))
  (export "as-br_if-last" (func 31))
  (export "as-br_table-first" (func 32))
  (export "as-br_table-last" (func 33))
  (export "as-call_indirect-first" (func 35))
  (export "as-call_indirect-mid" (func 36))
  (export "as-call_indirect-last" (func 37))
  (export "as-store-first" (func 38))
  (export "as-store-last" (func 39))
  (export "as-load-operand" (func 40))
  (export "as-memory.grow-value" (func 41))
  (export "as-call-value" (func 43))
  (export "as-return-value" (func 44))
  (export "as-drop-operand" (func 45))
  (export "as-br-value" (func 46))
  (export "as-local.set-value" (func 47))
  (export "as-local.tee-value" (func 48))
  (export "as-global.set-value" (func 49))
  (export "as-unary-operand" (func 50))
  (export "as-binary-operand" (func 51))
  (export "as-compare-operand" (func 52))
  (elem (;0;) (i32.const 0) func $func)
)
(assert_return (invoke "get-a") (i32.const -2))
(assert_return (invoke "get-b") (i64.const -5))
(assert_return (invoke "get-r") (ref.null extern))
(assert_return (invoke "get-mr") (ref.null extern))
(assert_return (invoke "get-x") (i32.const -12))
(assert_return (invoke "get-y") (i64.const -15))
(assert_return (invoke "get-z1") (i32.const 666))
(assert_return (invoke "get-z2") (i64.const 666))

(assert_return (invoke "get-3") (f32.const -3))
(assert_return (invoke "get-4") (f64.const -4))
(assert_return (invoke "get-7") (f32.const -13))
(assert_return (invoke "get-8") (f64.const -14))

(assert_return (invoke "set-x" (i32.const 6)))
(assert_return (invoke "set-y" (i64.const 7)))

(assert_return (invoke "set-7" (f32.const 8)))
(assert_return (invoke "set-8" (f64.const 9)))

(assert_return (invoke "get-x") (i32.const 6))
(assert_return (invoke "get-y") (i64.const 7))
(assert_return (invoke "get-7") (f32.const 8))
(assert_return (invoke "get-8") (f64.const 9))

(assert_return (invoke "set-7" (f32.const 8)))
(assert_return (invoke "set-8" (f64.const 9)))
(assert_return (invoke "set-mr" (ref.extern 10)))

(assert_return (invoke "get-x") (i32.const 6))
(assert_return (invoke "get-y") (i64.const 7))
(assert_return (invoke "get-7") (f32.const 8))
(assert_return (invoke "get-8") (f64.const 9))
(assert_return (invoke "get-mr") (ref.extern 10))

(assert_return (invoke "as-select-first") (i32.const 6))
(assert_return (invoke "as-select-mid") (i32.const 2))
(assert_return (invoke "as-select-last") (i32.const 2))

(assert_return (invoke "as-loop-first") (i32.const 6))
(assert_return (invoke "as-loop-mid") (i32.const 6))
(assert_return (invoke "as-loop-last") (i32.const 6))

(assert_return (invoke "as-if-condition") (i32.const 2))
(assert_return (invoke "as-if-then") (i32.const 6))
(assert_return (invoke "as-if-else") (i32.const 6))

(assert_return (invoke "as-br_if-first") (i32.const 6))
(assert_return (invoke "as-br_if-last") (i32.const 2))

(assert_return (invoke "as-br_table-first") (i32.const 6))
(assert_return (invoke "as-br_table-last") (i32.const 2))

(assert_return (invoke "as-call_indirect-first") (i32.const 6))
(assert_return (invoke "as-call_indirect-mid") (i32.const 2))
(assert_trap (invoke "as-call_indirect-last") "undefined element")

(assert_return (invoke "as-store-first"))
(assert_return (invoke "as-store-last"))
(assert_return (invoke "as-load-operand") (i32.const 1))
(assert_return (invoke "as-memory.grow-value") (i32.const 1))

(assert_return (invoke "as-call-value") (i32.const 6))

(assert_return (invoke "as-return-value") (i32.const 6))
(assert_return (invoke "as-drop-operand"))
(assert_return (invoke "as-br-value") (i32.const 6))

(assert_return (invoke "as-local.set-value" (i32.const 1)) (i32.const 6))
(assert_return (invoke "as-local.tee-value" (i32.const 1)) (i32.const 6))
(assert_return (invoke "as-global.set-value") (i32.const 6))

(assert_return (invoke "as-unary-operand") (i32.const 0))
(assert_return (invoke "as-binary-operand") (i32.const 36))
(assert_return (invoke "as-compare-operand") (i32.const 1))

(module
  (global (;0;) (mut f32) f32.const 0x0p+0 (;=0;))
  (export "a" (global 0))
)
(module
  (global (;0;) (mut f32) f32.const 0x0p+0 (;=0;))
  (export "a" (global 0))
)
(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 0)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 1)))
  (import "spectest" "finite_wasm_unstack" (func (;2;) (type 1)))
  (import "spectest" "global_i32" (global (;0;) i32))
)
(module
  (global (;0;) i32 i32.const 0)
)
