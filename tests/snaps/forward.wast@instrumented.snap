(module
  (type (;0;) (func (param i32) (result i32)))
  (type (;1;) (func (param i64)))
  (type (;2;) (func (param i64 i64)))
  (type (;3;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 1)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 3)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 3)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 3)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 3)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 3)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;7;) (type 2)))
  (import "spectest" "finite_wasm_unstack" (func $finite_wasm_unstack (;8;) (type 2)))
  (export "even" (func $even))
  (export "odd" (func $odd))
  (func $even (;9;) (type 0) (param $n i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      local.get $n
      i32.const 0
      i32.eq
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i32.const 1
      else
        i64.const 4
        call $finite_wasm_gas
        local.get $n
        i32.const 1
        i32.sub
        call $odd
      end
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func $odd (;10;) (type 0) (param $n i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      local.get $n
      i32.const 0
      i32.eq
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i32.const 0
      else
        i64.const 4
        call $finite_wasm_gas
        local.get $n
        i32.const 1
        i32.sub
        call $even
      end
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
)

(assert_return (invoke "even" (i32.const 13)) (i32.const 0))
(assert_return (invoke "even" (i32.const 20)) (i32.const 1))
(assert_return (invoke "odd" (i32.const 13)) (i32.const 1))
(assert_return (invoke "odd" (i32.const 20)) (i32.const 0))
