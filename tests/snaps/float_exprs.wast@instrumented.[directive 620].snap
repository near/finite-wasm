(module
  (type (;0;) (func (param i32 i32 i32)))
  (type (;1;) (func (param i32) (result f64)))
  (type (;2;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 2)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (func (;2;) (type 0) (param $i i32) (param $j i32) (param $k i32)
    (local $x0 f64) (local $x1 f64) (local $x2 f64) (local $x3 f64) (local $y0 f64) (local $y1 f64) (local $y2 f64) (local $y3 f64)
    i64.const 1000010000020
    call 1
    i64.const 1
    call 0
    local.get $i
    i64.const 1
    call 0
    f64.load
    i64.const 2
    call 0
    local.set $x0
    local.get $i
    i64.const 1
    call 0
    f64.load offset=8
    i64.const 2
    call 0
    local.set $x1
    local.get $i
    i64.const 1
    call 0
    f64.load offset=16
    i64.const 2
    call 0
    local.set $x2
    local.get $i
    i64.const 1
    call 0
    f64.load offset=24
    i64.const 2
    call 0
    local.set $x3
    local.get $j
    i64.const 1
    call 0
    f64.load
    i64.const 2
    call 0
    local.set $y0
    local.get $j
    i64.const 1
    call 0
    f64.load offset=8
    i64.const 2
    call 0
    local.set $y1
    local.get $j
    i64.const 1
    call 0
    f64.load offset=16
    i64.const 2
    call 0
    local.set $y2
    local.get $j
    i64.const 1
    call 0
    f64.load offset=24
    i64.const 5
    call 0
    local.set $y3
    local.get $k
    local.get $x0
    local.get $y0
    f64.add
    i64.const 1
    call 0
    f64.store
    i64.const 4
    call 0
    local.get $k
    local.get $x1
    local.get $y1
    f64.add
    i64.const 1
    call 0
    f64.store offset=8
    i64.const 4
    call 0
    local.get $k
    local.get $x2
    local.get $y2
    f64.add
    i64.const 1
    call 0
    f64.store offset=16
    i64.const 4
    call 0
    local.get $k
    local.get $x3
    local.get $y3
    f64.add
    i64.const 1
    call 0
    f64.store offset=24
    i64.const 1
    call 0
  )
  (func (;3;) (type 1) (param $k i32) (result f64)
    i64.const 1000000000008
    call 1
    i64.const 1
    call 0
    local.get $k
    i64.const 1
    call 0
    f64.load
    i64.const 1
    call 0
  )
  (memory (;0;) 1 1)
  (export "f64.simple_x4_sum" (func 2))
  (export "f64.load" (func 3))
  (data (;0;) (i32.const 0) "\01\00\00\00\00\00\00\00\01\00\00\00\00\00\00\80\01\00\00\00\00\00\00\00\01\00\00\00\00\00\00\80\01\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
)