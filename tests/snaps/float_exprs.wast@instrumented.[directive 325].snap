(module
  (type (;0;) (func (param f32) (result f32)))
  (type (;1;) (func (param f64) (result f64)))
  (type (;2;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 2)))
  (import "spectest" "finite_wasm_stack" (func (;1;) (type 2)))
  (func (;2;) (type 0) (param $x f32) (result f32)
    i64.const 1000000000004
    call 1
    local.get $x
    i64.const 1
    call 0
    i32.trunc_f32_s
    i64.const 1
    call 0
    f32.convert_i32_s
    i64.const 2
    call 0
  )
  (func (;3;) (type 0) (param $x f32) (result f32)
    i64.const 1000000000004
    call 1
    local.get $x
    i64.const 1
    call 0
    i32.trunc_f32_u
    i64.const 1
    call 0
    f32.convert_i32_s
    i64.const 2
    call 0
  )
  (func (;4;) (type 0) (param $x f32) (result f32)
    i64.const 1000000000004
    call 1
    local.get $x
    i64.const 1
    call 0
    i32.trunc_f32_s
    i64.const 1
    call 0
    f32.convert_i32_u
    i64.const 2
    call 0
  )
  (func (;5;) (type 0) (param $x f32) (result f32)
    i64.const 1000000000004
    call 1
    local.get $x
    i64.const 1
    call 0
    i32.trunc_f32_u
    i64.const 1
    call 0
    f32.convert_i32_u
    i64.const 2
    call 0
  )
  (func (;6;) (type 1) (param $x f64) (result f64)
    i64.const 1000000000008
    call 1
    local.get $x
    i64.const 1
    call 0
    i32.trunc_f64_s
    i64.const 1
    call 0
    f64.convert_i32_s
    i64.const 2
    call 0
  )
  (func (;7;) (type 1) (param $x f64) (result f64)
    i64.const 1000000000008
    call 1
    local.get $x
    i64.const 1
    call 0
    i32.trunc_f64_u
    i64.const 1
    call 0
    f64.convert_i32_s
    i64.const 2
    call 0
  )
  (func (;8;) (type 1) (param $x f64) (result f64)
    i64.const 1000000000008
    call 1
    local.get $x
    i64.const 1
    call 0
    i32.trunc_f64_s
    i64.const 1
    call 0
    f64.convert_i32_u
    i64.const 2
    call 0
  )
  (func (;9;) (type 1) (param $x f64) (result f64)
    i64.const 1000000000008
    call 1
    local.get $x
    i64.const 1
    call 0
    i32.trunc_f64_u
    i64.const 1
    call 0
    f64.convert_i32_u
    i64.const 2
    call 0
  )
  (func (;10;) (type 0) (param $x f32) (result f32)
    i64.const 1000000000008
    call 1
    local.get $x
    i64.const 1
    call 0
    i64.trunc_f32_s
    i64.const 1
    call 0
    f32.convert_i64_s
    i64.const 2
    call 0
  )
  (func (;11;) (type 0) (param $x f32) (result f32)
    i64.const 1000000000008
    call 1
    local.get $x
    i64.const 1
    call 0
    i64.trunc_f32_u
    i64.const 1
    call 0
    f32.convert_i64_s
    i64.const 2
    call 0
  )
  (func (;12;) (type 0) (param $x f32) (result f32)
    i64.const 1000000000008
    call 1
    local.get $x
    i64.const 1
    call 0
    i64.trunc_f32_s
    i64.const 1
    call 0
    f32.convert_i64_u
    i64.const 2
    call 0
  )
  (func (;13;) (type 0) (param $x f32) (result f32)
    i64.const 1000000000008
    call 1
    local.get $x
    i64.const 1
    call 0
    i64.trunc_f32_u
    i64.const 1
    call 0
    f32.convert_i64_u
    i64.const 2
    call 0
  )
  (func (;14;) (type 1) (param $x f64) (result f64)
    i64.const 1000000000008
    call 1
    local.get $x
    i64.const 1
    call 0
    i64.trunc_f64_s
    i64.const 1
    call 0
    f64.convert_i64_s
    i64.const 2
    call 0
  )
  (func (;15;) (type 1) (param $x f64) (result f64)
    i64.const 1000000000008
    call 1
    local.get $x
    i64.const 1
    call 0
    i64.trunc_f64_u
    i64.const 1
    call 0
    f64.convert_i64_s
    i64.const 2
    call 0
  )
  (func (;16;) (type 1) (param $x f64) (result f64)
    i64.const 1000000000008
    call 1
    local.get $x
    i64.const 1
    call 0
    i64.trunc_f64_s
    i64.const 1
    call 0
    f64.convert_i64_u
    i64.const 2
    call 0
  )
  (func (;17;) (type 1) (param $x f64) (result f64)
    i64.const 1000000000008
    call 1
    local.get $x
    i64.const 1
    call 0
    i64.trunc_f64_u
    i64.const 1
    call 0
    f64.convert_i64_u
    i64.const 2
    call 0
  )
  (export "f32.i32.no_fold_trunc_s_convert_s" (func 2))
  (export "f32.i32.no_fold_trunc_u_convert_s" (func 3))
  (export "f32.i32.no_fold_trunc_s_convert_u" (func 4))
  (export "f32.i32.no_fold_trunc_u_convert_u" (func 5))
  (export "f64.i32.no_fold_trunc_s_convert_s" (func 6))
  (export "f64.i32.no_fold_trunc_u_convert_s" (func 7))
  (export "f64.i32.no_fold_trunc_s_convert_u" (func 8))
  (export "f64.i32.no_fold_trunc_u_convert_u" (func 9))
  (export "f32.i64.no_fold_trunc_s_convert_s" (func 10))
  (export "f32.i64.no_fold_trunc_u_convert_s" (func 11))
  (export "f32.i64.no_fold_trunc_s_convert_u" (func 12))
  (export "f32.i64.no_fold_trunc_u_convert_u" (func 13))
  (export "f64.i64.no_fold_trunc_s_convert_s" (func 14))
  (export "f64.i64.no_fold_trunc_u_convert_s" (func 15))
  (export "f64.i64.no_fold_trunc_s_convert_u" (func 16))
  (export "f64.i64.no_fold_trunc_u_convert_u" (func 17))
)