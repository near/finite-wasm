(module
  (type (;0;) (func (result i32)))
  (type (;1;) (func (param i32 i32)))
  (type (;2;) (func (param i32) (result i32)))
  (type (;3;) (func (param i64)))
  (type (;4;) (func (param i64 i64)))
  (type (;5;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 3)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 5)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 5)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 5)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 5)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 5)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 5)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;7;) (type 4)))
  (import "spectest" "finite_wasm_unstack" (func $finite_wasm_unstack (;8;) (type 4)))
  (memory (;0;) 1)
  (export "store" (func 10))
  (export "load" (func 11))
  (export "memory.grow" (func 12))
  (func $addr_limit (;9;) (type 0) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      memory.size
      i32.const 65536
      i32.mul
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;10;) (type 1) (param $i i32) (param $v i32)
    block ;; label = @1
      i64.const 8
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      call $addr_limit
      i64.const 4
      call $finite_wasm_gas
      local.get $i
      i32.add
      local.get $v
      i32.store
    end
    i64.const 8
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;11;) (type 2) (param $i i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      call $addr_limit
      i64.const 3
      call $finite_wasm_gas
      local.get $i
      i32.add
      i32.load
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;12;) (type 2) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
      i64.const 1
      call $finite_wasm_gas
      memory.grow
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
)

(assert_return (invoke "store" (i32.const -4) (i32.const 42)))
(assert_return (invoke "load" (i32.const -4)) (i32.const 42))
(assert_trap (invoke "store" (i32.const -3) (i32.const 0x12345678)) "out of bounds memory access")
(assert_trap (invoke "load" (i32.const -3)) "out of bounds memory access")
(assert_trap (invoke "store" (i32.const -2) (i32.const 13)) "out of bounds memory access")
(assert_trap (invoke "load" (i32.const -2)) "out of bounds memory access")
(assert_trap (invoke "store" (i32.const -1) (i32.const 13)) "out of bounds memory access")
(assert_trap (invoke "load" (i32.const -1)) "out of bounds memory access")
(assert_trap (invoke "store" (i32.const 0) (i32.const 13)) "out of bounds memory access")
(assert_trap (invoke "load" (i32.const 0)) "out of bounds memory access")
(assert_trap (invoke "store" (i32.const 0x80000000) (i32.const 13)) "out of bounds memory access")
(assert_trap (invoke "load" (i32.const 0x80000000)) "out of bounds memory access")
(assert_return (invoke "memory.grow" (i32.const 0x10001)) (i32.const -1))

(module
  (type (;0;) (func (param i32) (result i32)))
  (type (;1;) (func (param i32) (result i64)))
  (type (;2;) (func (param i32) (result f32)))
  (type (;3;) (func (param i32) (result f64)))
  (type (;4;) (func (param i32 i32)))
  (type (;5;) (func (param i32 i64)))
  (type (;6;) (func (param i32 f32)))
  (type (;7;) (func (param i32 f64)))
  (type (;8;) (func (param i64)))
  (type (;9;) (func (param i64 i64)))
  (type (;10;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 8)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 10)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 10)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 10)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 10)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 10)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 10)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 9)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 9)))
  (memory (;0;) 1)
  (export "i32.load" (func 9))
  (export "i64.load" (func 10))
  (export "f32.load" (func 11))
  (export "f64.load" (func 12))
  (export "i32.load8_s" (func 13))
  (export "i32.load8_u" (func 14))
  (export "i32.load16_s" (func 15))
  (export "i32.load16_u" (func 16))
  (export "i64.load8_s" (func 17))
  (export "i64.load8_u" (func 18))
  (export "i64.load16_s" (func 19))
  (export "i64.load16_u" (func 20))
  (export "i64.load32_s" (func 21))
  (export "i64.load32_u" (func 22))
  (export "i32.store" (func 23))
  (export "i64.store" (func 24))
  (export "f32.store" (func 25))
  (export "f64.store" (func 26))
  (export "i32.store8" (func 27))
  (export "i32.store16" (func 28))
  (export "i64.store8" (func 29))
  (export "i64.store16" (func 30))
  (export "i64.store32" (func 31))
  (func (;9;) (type 0) (param $a i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get $a
      i32.load
    end
    i64.const 4
    i64.const 1
    call 8
  )
  (func (;10;) (type 1) (param $a i32) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get $a
      i64.load
    end
    i64.const 8
    i64.const 1
    call 8
  )
  (func (;11;) (type 2) (param $a i32) (result f32)
    block (result f32) ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get $a
      f32.load
    end
    i64.const 4
    i64.const 1
    call 8
  )
  (func (;12;) (type 3) (param $a i32) (result f64)
    block (result f64) ;; label = @1
      i64.const 8
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get $a
      f64.load
    end
    i64.const 8
    i64.const 1
    call 8
  )
  (func (;13;) (type 0) (param $a i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get $a
      i32.load8_s
    end
    i64.const 4
    i64.const 1
    call 8
  )
  (func (;14;) (type 0) (param $a i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get $a
      i32.load8_u
    end
    i64.const 4
    i64.const 1
    call 8
  )
  (func (;15;) (type 0) (param $a i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get $a
      i32.load16_s
    end
    i64.const 4
    i64.const 1
    call 8
  )
  (func (;16;) (type 0) (param $a i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get $a
      i32.load16_u
    end
    i64.const 4
    i64.const 1
    call 8
  )
  (func (;17;) (type 1) (param $a i32) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get $a
      i64.load8_s
    end
    i64.const 8
    i64.const 1
    call 8
  )
  (func (;18;) (type 1) (param $a i32) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get $a
      i64.load8_u
    end
    i64.const 8
    i64.const 1
    call 8
  )
  (func (;19;) (type 1) (param $a i32) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get $a
      i64.load16_s
    end
    i64.const 8
    i64.const 1
    call 8
  )
  (func (;20;) (type 1) (param $a i32) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get $a
      i64.load16_u
    end
    i64.const 8
    i64.const 1
    call 8
  )
  (func (;21;) (type 1) (param $a i32) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get $a
      i64.load32_s
    end
    i64.const 8
    i64.const 1
    call 8
  )
  (func (;22;) (type 1) (param $a i32) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get $a
      i64.load32_u
    end
    i64.const 8
    i64.const 1
    call 8
  )
  (func (;23;) (type 4) (param $a i32) (param $v i32)
    block ;; label = @1
      i64.const 8
      i64.const 2
      call 7
      i64.const 3
      call 0
      local.get $a
      local.get $v
      i32.store
    end
    i64.const 8
    i64.const 2
    call 8
  )
  (func (;24;) (type 5) (param $a i32) (param $v i64)
    block ;; label = @1
      i64.const 12
      i64.const 2
      call 7
      i64.const 3
      call 0
      local.get $a
      local.get $v
      i64.store
    end
    i64.const 12
    i64.const 2
    call 8
  )
  (func (;25;) (type 6) (param $a i32) (param $v f32)
    block ;; label = @1
      i64.const 8
      i64.const 2
      call 7
      i64.const 3
      call 0
      local.get $a
      local.get $v
      f32.store
    end
    i64.const 8
    i64.const 2
    call 8
  )
  (func (;26;) (type 7) (param $a i32) (param $v f64)
    block ;; label = @1
      i64.const 12
      i64.const 2
      call 7
      i64.const 3
      call 0
      local.get $a
      local.get $v
      f64.store
    end
    i64.const 12
    i64.const 2
    call 8
  )
  (func (;27;) (type 4) (param $a i32) (param $v i32)
    block ;; label = @1
      i64.const 8
      i64.const 2
      call 7
      i64.const 3
      call 0
      local.get $a
      local.get $v
      i32.store8
    end
    i64.const 8
    i64.const 2
    call 8
  )
  (func (;28;) (type 4) (param $a i32) (param $v i32)
    block ;; label = @1
      i64.const 8
      i64.const 2
      call 7
      i64.const 3
      call 0
      local.get $a
      local.get $v
      i32.store16
    end
    i64.const 8
    i64.const 2
    call 8
  )
  (func (;29;) (type 5) (param $a i32) (param $v i64)
    block ;; label = @1
      i64.const 12
      i64.const 2
      call 7
      i64.const 3
      call 0
      local.get $a
      local.get $v
      i64.store8
    end
    i64.const 12
    i64.const 2
    call 8
  )
  (func (;30;) (type 5) (param $a i32) (param $v i64)
    block ;; label = @1
      i64.const 12
      i64.const 2
      call 7
      i64.const 3
      call 0
      local.get $a
      local.get $v
      i64.store16
    end
    i64.const 12
    i64.const 2
    call 8
  )
  (func (;31;) (type 5) (param $a i32) (param $v i64)
    block ;; label = @1
      i64.const 12
      i64.const 2
      call 7
      i64.const 3
      call 0
      local.get $a
      local.get $v
      i64.store32
    end
    i64.const 12
    i64.const 2
    call 8
  )
  (data (;0;) (i32.const 0) "abcdefgh")
  (data (;1;) (i32.const 65528) "abcdefgh")
)

(assert_trap (invoke "i32.store" (i32.const 0x10000) (i32.const 0)) "out of bounds memory access")
(assert_trap (invoke "i32.store" (i32.const 0xffff) (i32.const 0)) "out of bounds memory access")
(assert_trap (invoke "i32.store" (i32.const 0xfffe) (i32.const 0)) "out of bounds memory access")
(assert_trap (invoke "i32.store" (i32.const 0xfffd) (i32.const 0)) "out of bounds memory access")
(assert_trap (invoke "i32.store" (i32.const -1) (i32.const 0)) "out of bounds memory access")
(assert_trap (invoke "i32.store" (i32.const -2) (i32.const 0)) "out of bounds memory access")
(assert_trap (invoke "i32.store" (i32.const -3) (i32.const 0)) "out of bounds memory access")
(assert_trap (invoke "i32.store" (i32.const -4) (i32.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store" (i32.const 0x10000) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store" (i32.const 0xffff) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store" (i32.const 0xfffe) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store" (i32.const 0xfffd) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store" (i32.const 0xfffc) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store" (i32.const 0xfffb) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store" (i32.const 0xfffa) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store" (i32.const 0xfff9) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store" (i32.const -1) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store" (i32.const -2) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store" (i32.const -3) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store" (i32.const -4) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store" (i32.const -5) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store" (i32.const -6) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store" (i32.const -7) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store" (i32.const -8) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "f32.store" (i32.const 0x10000) (f32.const 0)) "out of bounds memory access")
(assert_trap (invoke "f32.store" (i32.const 0xffff) (f32.const 0)) "out of bounds memory access")
(assert_trap (invoke "f32.store" (i32.const 0xfffe) (f32.const 0)) "out of bounds memory access")
(assert_trap (invoke "f32.store" (i32.const 0xfffd) (f32.const 0)) "out of bounds memory access")
(assert_trap (invoke "f32.store" (i32.const -1) (f32.const 0)) "out of bounds memory access")
(assert_trap (invoke "f32.store" (i32.const -2) (f32.const 0)) "out of bounds memory access")
(assert_trap (invoke "f32.store" (i32.const -3) (f32.const 0)) "out of bounds memory access")
(assert_trap (invoke "f32.store" (i32.const -4) (f32.const 0)) "out of bounds memory access")
(assert_trap (invoke "f64.store" (i32.const 0x10000) (f64.const 0)) "out of bounds memory access")
(assert_trap (invoke "f64.store" (i32.const 0xffff) (f64.const 0)) "out of bounds memory access")
(assert_trap (invoke "f64.store" (i32.const 0xfffe) (f64.const 0)) "out of bounds memory access")
(assert_trap (invoke "f64.store" (i32.const 0xfffd) (f64.const 0)) "out of bounds memory access")
(assert_trap (invoke "f64.store" (i32.const 0xfffc) (f64.const 0)) "out of bounds memory access")
(assert_trap (invoke "f64.store" (i32.const 0xfffb) (f64.const 0)) "out of bounds memory access")
(assert_trap (invoke "f64.store" (i32.const 0xfffa) (f64.const 0)) "out of bounds memory access")
(assert_trap (invoke "f64.store" (i32.const 0xfff9) (f64.const 0)) "out of bounds memory access")
(assert_trap (invoke "f64.store" (i32.const -1) (f64.const 0)) "out of bounds memory access")
(assert_trap (invoke "f64.store" (i32.const -2) (f64.const 0)) "out of bounds memory access")
(assert_trap (invoke "f64.store" (i32.const -3) (f64.const 0)) "out of bounds memory access")
(assert_trap (invoke "f64.store" (i32.const -4) (f64.const 0)) "out of bounds memory access")
(assert_trap (invoke "f64.store" (i32.const -5) (f64.const 0)) "out of bounds memory access")
(assert_trap (invoke "f64.store" (i32.const -6) (f64.const 0)) "out of bounds memory access")
(assert_trap (invoke "f64.store" (i32.const -7) (f64.const 0)) "out of bounds memory access")
(assert_trap (invoke "f64.store" (i32.const -8) (f64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i32.store8" (i32.const 0x10000) (i32.const 0)) "out of bounds memory access")
(assert_trap (invoke "i32.store8" (i32.const -1) (i32.const 0)) "out of bounds memory access")
(assert_trap (invoke "i32.store16" (i32.const 0x10000) (i32.const 0)) "out of bounds memory access")
(assert_trap (invoke "i32.store16" (i32.const 0xffff) (i32.const 0)) "out of bounds memory access")
(assert_trap (invoke "i32.store16" (i32.const -1) (i32.const 0)) "out of bounds memory access")
(assert_trap (invoke "i32.store16" (i32.const -2) (i32.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store8" (i32.const 0x10000) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store8" (i32.const -1) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store16" (i32.const 0x10000) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store16" (i32.const 0xffff) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store16" (i32.const -1) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store16" (i32.const -2) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store32" (i32.const 0x10000) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store32" (i32.const 0xffff) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store32" (i32.const 0xfffe) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store32" (i32.const 0xfffd) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store32" (i32.const -1) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store32" (i32.const -2) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store32" (i32.const -3) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i64.store32" (i32.const -4) (i64.const 0)) "out of bounds memory access")
(assert_trap (invoke "i32.load" (i32.const 0x10000)) "out of bounds memory access")
(assert_trap (invoke "i32.load" (i32.const 0xffff)) "out of bounds memory access")
(assert_trap (invoke "i32.load" (i32.const 0xfffe)) "out of bounds memory access")
(assert_trap (invoke "i32.load" (i32.const 0xfffd)) "out of bounds memory access")
(assert_trap (invoke "i32.load" (i32.const -1)) "out of bounds memory access")
(assert_trap (invoke "i32.load" (i32.const -2)) "out of bounds memory access")
(assert_trap (invoke "i32.load" (i32.const -3)) "out of bounds memory access")
(assert_trap (invoke "i32.load" (i32.const -4)) "out of bounds memory access")
(assert_trap (invoke "i64.load" (i32.const 0x10000)) "out of bounds memory access")
(assert_trap (invoke "i64.load" (i32.const 0xffff)) "out of bounds memory access")
(assert_trap (invoke "i64.load" (i32.const 0xfffe)) "out of bounds memory access")
(assert_trap (invoke "i64.load" (i32.const 0xfffd)) "out of bounds memory access")
(assert_trap (invoke "i64.load" (i32.const 0xfffc)) "out of bounds memory access")
(assert_trap (invoke "i64.load" (i32.const 0xfffb)) "out of bounds memory access")
(assert_trap (invoke "i64.load" (i32.const 0xfffa)) "out of bounds memory access")
(assert_trap (invoke "i64.load" (i32.const 0xfff9)) "out of bounds memory access")
(assert_trap (invoke "i64.load" (i32.const -1)) "out of bounds memory access")
(assert_trap (invoke "i64.load" (i32.const -2)) "out of bounds memory access")
(assert_trap (invoke "i64.load" (i32.const -3)) "out of bounds memory access")
(assert_trap (invoke "i64.load" (i32.const -4)) "out of bounds memory access")
(assert_trap (invoke "i64.load" (i32.const -5)) "out of bounds memory access")
(assert_trap (invoke "i64.load" (i32.const -6)) "out of bounds memory access")
(assert_trap (invoke "i64.load" (i32.const -7)) "out of bounds memory access")
(assert_trap (invoke "i64.load" (i32.const -8)) "out of bounds memory access")
(assert_trap (invoke "f32.load" (i32.const 0x10000)) "out of bounds memory access")
(assert_trap (invoke "f32.load" (i32.const 0xffff)) "out of bounds memory access")
(assert_trap (invoke "f32.load" (i32.const 0xfffe)) "out of bounds memory access")
(assert_trap (invoke "f32.load" (i32.const 0xfffd)) "out of bounds memory access")
(assert_trap (invoke "f32.load" (i32.const -1)) "out of bounds memory access")
(assert_trap (invoke "f32.load" (i32.const -2)) "out of bounds memory access")
(assert_trap (invoke "f32.load" (i32.const -3)) "out of bounds memory access")
(assert_trap (invoke "f32.load" (i32.const -4)) "out of bounds memory access")
(assert_trap (invoke "f64.load" (i32.const 0x10000)) "out of bounds memory access")
(assert_trap (invoke "f64.load" (i32.const 0xffff)) "out of bounds memory access")
(assert_trap (invoke "f64.load" (i32.const 0xfffe)) "out of bounds memory access")
(assert_trap (invoke "f64.load" (i32.const 0xfffd)) "out of bounds memory access")
(assert_trap (invoke "f64.load" (i32.const 0xfffc)) "out of bounds memory access")
(assert_trap (invoke "f64.load" (i32.const 0xfffb)) "out of bounds memory access")
(assert_trap (invoke "f64.load" (i32.const 0xfffa)) "out of bounds memory access")
(assert_trap (invoke "f64.load" (i32.const 0xfff9)) "out of bounds memory access")
(assert_trap (invoke "f64.load" (i32.const -1)) "out of bounds memory access")
(assert_trap (invoke "f64.load" (i32.const -2)) "out of bounds memory access")
(assert_trap (invoke "f64.load" (i32.const -3)) "out of bounds memory access")
(assert_trap (invoke "f64.load" (i32.const -4)) "out of bounds memory access")
(assert_trap (invoke "f64.load" (i32.const -5)) "out of bounds memory access")
(assert_trap (invoke "f64.load" (i32.const -6)) "out of bounds memory access")
(assert_trap (invoke "f64.load" (i32.const -7)) "out of bounds memory access")
(assert_trap (invoke "f64.load" (i32.const -8)) "out of bounds memory access")
(assert_trap (invoke "i32.load8_s" (i32.const 0x10000)) "out of bounds memory access")
(assert_trap (invoke "i32.load8_s" (i32.const -1)) "out of bounds memory access")
(assert_trap (invoke "i32.load8_u" (i32.const 0x10000)) "out of bounds memory access")
(assert_trap (invoke "i32.load8_u" (i32.const -1)) "out of bounds memory access")
(assert_trap (invoke "i32.load16_s" (i32.const 0x10000)) "out of bounds memory access")
(assert_trap (invoke "i32.load16_s" (i32.const 0xffff)) "out of bounds memory access")
(assert_trap (invoke "i32.load16_s" (i32.const -1)) "out of bounds memory access")
(assert_trap (invoke "i32.load16_s" (i32.const -2)) "out of bounds memory access")
(assert_trap (invoke "i32.load16_u" (i32.const 0x10000)) "out of bounds memory access")
(assert_trap (invoke "i32.load16_u" (i32.const 0xffff)) "out of bounds memory access")
(assert_trap (invoke "i32.load16_u" (i32.const -1)) "out of bounds memory access")
(assert_trap (invoke "i32.load16_u" (i32.const -2)) "out of bounds memory access")
(assert_trap (invoke "i64.load8_s" (i32.const 0x10000)) "out of bounds memory access")
(assert_trap (invoke "i64.load8_s" (i32.const -1)) "out of bounds memory access")
(assert_trap (invoke "i64.load8_u" (i32.const 0x10000)) "out of bounds memory access")
(assert_trap (invoke "i64.load8_u" (i32.const -1)) "out of bounds memory access")
(assert_trap (invoke "i64.load16_s" (i32.const 0x10000)) "out of bounds memory access")
(assert_trap (invoke "i64.load16_s" (i32.const 0xffff)) "out of bounds memory access")
(assert_trap (invoke "i64.load16_s" (i32.const -1)) "out of bounds memory access")
(assert_trap (invoke "i64.load16_s" (i32.const -2)) "out of bounds memory access")
(assert_trap (invoke "i64.load16_u" (i32.const 0x10000)) "out of bounds memory access")
(assert_trap (invoke "i64.load16_u" (i32.const 0xffff)) "out of bounds memory access")
(assert_trap (invoke "i64.load16_u" (i32.const -1)) "out of bounds memory access")
(assert_trap (invoke "i64.load16_u" (i32.const -2)) "out of bounds memory access")
(assert_trap (invoke "i64.load32_s" (i32.const 0x10000)) "out of bounds memory access")
(assert_trap (invoke "i64.load32_s" (i32.const 0xffff)) "out of bounds memory access")
(assert_trap (invoke "i64.load32_s" (i32.const 0xfffe)) "out of bounds memory access")
(assert_trap (invoke "i64.load32_s" (i32.const 0xfffd)) "out of bounds memory access")
(assert_trap (invoke "i64.load32_s" (i32.const -1)) "out of bounds memory access")
(assert_trap (invoke "i64.load32_s" (i32.const -2)) "out of bounds memory access")
(assert_trap (invoke "i64.load32_s" (i32.const -3)) "out of bounds memory access")
(assert_trap (invoke "i64.load32_s" (i32.const -4)) "out of bounds memory access")
(assert_trap (invoke "i64.load32_u" (i32.const 0x10000)) "out of bounds memory access")
(assert_trap (invoke "i64.load32_u" (i32.const 0xffff)) "out of bounds memory access")
(assert_trap (invoke "i64.load32_u" (i32.const 0xfffe)) "out of bounds memory access")
(assert_trap (invoke "i64.load32_u" (i32.const 0xfffd)) "out of bounds memory access")
(assert_trap (invoke "i64.load32_u" (i32.const -1)) "out of bounds memory access")
(assert_trap (invoke "i64.load32_u" (i32.const -2)) "out of bounds memory access")
(assert_trap (invoke "i64.load32_u" (i32.const -3)) "out of bounds memory access")
(assert_trap (invoke "i64.load32_u" (i32.const -4)) "out of bounds memory access")

;; No memory was changed
(assert_return (invoke "i64.load" (i32.const 0xfff8)) (i64.const 0x6867666564636261))
(assert_return (invoke "i64.load" (i32.const 0)) (i64.const 0x6867666564636261))

;; Check that out of bounds store do not store partial data.
;; Zero last 8 bytes.
(assert_return (invoke "i64.store" (i32.const 0xfff8) (i64.const 0)))
(assert_trap (invoke "i32.store" (i32.const 0xfffd) (i32.const 0x12345678)) "out of bounds memory access")
(assert_return (invoke "i32.load" (i32.const 0xfffc)) (i32.const 0))
(assert_trap (invoke "i64.store" (i32.const 0xfff9) (i64.const 0x1234567890abcdef)) "out of bounds memory access")
(assert_return (invoke "i64.load" (i32.const 0xfff8)) (i64.const 0))
(assert_trap (invoke "f32.store" (i32.const 0xfffd) (f32.const 0x12345678)) "out of bounds memory access")
(assert_return (invoke "f32.load" (i32.const 0xfffc)) (f32.const 0))
(assert_trap (invoke "f64.store" (i32.const 0xfff9) (f64.const 0x1234567890abcdef)) "out of bounds memory access")
(assert_return (invoke "f64.load" (i32.const 0xfff8)) (f64.const 0))
