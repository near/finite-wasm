(module
  (type (;0;) (func (param funcref) (result i32)))
  (type (;1;) (func (param externref) (result i32)))
  (type (;2;) (func))
  (type (;3;) (func (param externref)))
  (type (;4;) (func (param i32) (result i32)))
  (type (;5;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 5)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;1;) (type 5)))
  (func $f1 (;2;) (type 0) (param $x funcref) (result i32)
    i64.const 1000000000032
    call $finite_wasm_stack
    local.get $x
    ref.is_null
  )
  (func $f2 (;3;) (type 1) (param $x externref) (result i32)
    i64.const 1000000000032
    call $finite_wasm_stack
    local.get $x
    ref.is_null
  )
  (func $dummy (;4;) (type 2)
    i64.const 1000000000000
    call $finite_wasm_stack
  )
  (func (;5;) (type 3) (param $r externref)
    i64.const 1000000000036
    call $finite_wasm_stack
    i32.const 1
    local.get $r
    table.set $t2
  )
  (func (;6;) (type 2)
    i64.const 1000000000036
    call $finite_wasm_stack
    i32.const 1
    ref.null func
    table.set $t1
    i32.const 1
    ref.null extern
    table.set $t2
  )
  (func (;7;) (type 4) (param $x i32) (result i32)
    i64.const 1000000000032
    call $finite_wasm_stack
    local.get $x
    table.get $t1
    call $f1
  )
  (func (;8;) (type 4) (param $x i32) (result i32)
    i64.const 1000000000032
    call $finite_wasm_stack
    local.get $x
    table.get $t2
    call $f2
  )
  (table $t1 (;0;) 2 funcref)
  (table $t2 (;1;) 2 externref)
  (export "funcref" (func $f1))
  (export "externref" (func $f2))
  (export "init" (func 5))
  (export "deinit" (func 6))
  (export "funcref-elem" (func 7))
  (export "externref-elem" (func 8))
  (elem (;0;) (i32.const 1) func)
)