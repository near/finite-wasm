(module
  (type (;0;) (func))
  (type $S (;1;) (func))
  (type (;2;) (func))
  (type (;3;) (func (result i32)))
  (type (;4;) (func (result i32)))
  (type $T (;5;) (func (param i32) (result i32)))
  (type $U (;6;) (func (param i32)))
  (type (;7;) (func (param i64)))
  (type (;8;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 7)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;1;) (type 8)))
  (import "spectest" "finite_wasm_unstack" (func $finite_wasm_unstack (;2;) (type 8)))
  (import "spectest" "print_i32" (func $print (;3;) (type $U)))
  (export "one" (func 6))
  (export "two" (func 7))
  (export "three" (func 8))
  (export "four" (func 9))
  (func (;4;) (type 0))
  (func (;5;) (type $S))
  (func (;6;) (type 4) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 13
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;7;) (type $T) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      local.get 0
      i32.const 1
      i32.add
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;8;) (type $T) (param $a i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      local.get $a
      i32.const 2
      i32.sub
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;9;) (type $U) (param i32)
    block ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      call $print
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
)

(assert_return (invoke "one") (i32.const 13))
(assert_return (invoke "two" (i32.const 13)) (i32.const 14))
(assert_return (invoke "three" (i32.const 13)) (i32.const 11))
(invoke "four" (i32.const 83))

(module
  (type $T (;0;) (func (result i32)))
  (type $U (;1;) (func (result i32)))
  (type (;2;) (func (param i32) (result i32)))
  (type (;3;) (func (param i64)))
  (type (;4;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 3)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;1;) (type 4)))
  (import "spectest" "finite_wasm_unstack" (func $finite_wasm_unstack (;2;) (type 4)))
  (table (;0;) 7 7 funcref)
  (export "callt" (func 8))
  (export "callu" (func 9))
  (elem (;0;) (table 0) (i32.const 0) func $t1 $t2 $t3 $u1 $u2 $t1 $t3)
  (func $t1 (;3;) (type $T) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 1
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $t2 (;4;) (type $T) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 2
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $t3 (;5;) (type $T) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 3
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $u1 (;6;) (type $U) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 4
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $u2 (;7;) (type $U) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 5
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;8;) (type 2) (param $i i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get $i
      call_indirect (type $T)
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;9;) (type 2) (param $i i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get $i
      call_indirect (type $U)
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
)

(assert_return (invoke "callt" (i32.const 0)) (i32.const 1))
(assert_return (invoke "callt" (i32.const 1)) (i32.const 2))
(assert_return (invoke "callt" (i32.const 2)) (i32.const 3))
(assert_return (invoke "callt" (i32.const 3)) (i32.const 4))
(assert_return (invoke "callt" (i32.const 4)) (i32.const 5))
(assert_return (invoke "callt" (i32.const 5)) (i32.const 1))
(assert_return (invoke "callt" (i32.const 6)) (i32.const 3))
(assert_trap (invoke "callt" (i32.const 7)) "undefined element")
(assert_trap (invoke "callt" (i32.const 100)) "undefined element")
(assert_trap (invoke "callt" (i32.const -1)) "undefined element")

(assert_return (invoke "callu" (i32.const 0)) (i32.const 1))
(assert_return (invoke "callu" (i32.const 1)) (i32.const 2))
(assert_return (invoke "callu" (i32.const 2)) (i32.const 3))
(assert_return (invoke "callu" (i32.const 3)) (i32.const 4))
(assert_return (invoke "callu" (i32.const 4)) (i32.const 5))
(assert_return (invoke "callu" (i32.const 5)) (i32.const 1))
(assert_return (invoke "callu" (i32.const 6)) (i32.const 3))
(assert_trap (invoke "callu" (i32.const 7)) "undefined element")
(assert_trap (invoke "callu" (i32.const 100)) "undefined element")
(assert_trap (invoke "callu" (i32.const -1)) "undefined element")

(module
  (type $T (;0;) (func (result i32)))
  (type (;1;) (func (param i32) (result i32)))
  (type (;2;) (func (param i64)))
  (type (;3;) (func (param i64 i64)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 2)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;1;) (type 3)))
  (import "spectest" "finite_wasm_unstack" (func $finite_wasm_unstack (;2;) (type 3)))
  (table (;0;) 2 2 funcref)
  (export "callt" (func 5))
  (elem (;0;) (table 0) (i32.const 0) func $t1 $t2)
  (func $t1 (;3;) (type $T) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 1
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $t2 (;4;) (type $T) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 2
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;5;) (type 1) (param $i i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get $i
      call_indirect (type $T)
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
)

(assert_return (invoke "callt" (i32.const 0)) (i32.const 1))
(assert_return (invoke "callt" (i32.const 1)) (i32.const 2))
