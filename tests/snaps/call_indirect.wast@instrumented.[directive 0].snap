(module
  (type $proc (;0;) (func))
  (type $out-i32 (;1;) (func (result i32)))
  (type $out-i64 (;2;) (func (result i64)))
  (type $out-f32 (;3;) (func (result f32)))
  (type $out-f64 (;4;) (func (result f64)))
  (type $out-f64-i32 (;5;) (func (result f64 i32)))
  (type $over-i32 (;6;) (func (param i32) (result i32)))
  (type $over-i64 (;7;) (func (param i64) (result i64)))
  (type $over-f32 (;8;) (func (param f32) (result f32)))
  (type $over-f64 (;9;) (func (param f64) (result f64)))
  (type $over-i32-f64 (;10;) (func (param i32 f64) (result i32 f64)))
  (type $swap-i32-i64 (;11;) (func (param i32 i64) (result i64 i32)))
  (type $f32-i32 (;12;) (func (param f32 i32) (result i32)))
  (type $i32-i64 (;13;) (func (param i32 i64) (result i64)))
  (type $f64-f32 (;14;) (func (param f64 f32) (result f32)))
  (type $i64-f64 (;15;) (func (param i64 f64) (result f64)))
  (type $over-i32-duplicate (;16;) (func (param i32) (result i32)))
  (type $over-i64-duplicate (;17;) (func (param i64) (result i64)))
  (type $over-f32-duplicate (;18;) (func (param f32) (result f32)))
  (type $over-f64-duplicate (;19;) (func (param f64) (result f64)))
  (type (;20;) (func (param i64)))
  (type (;21;) (func (param i64 f64 i32 i64)))
  (type (;22;) (func (param i64) (result i32)))
  (type (;23;) (func (param i64 f64 i32 i64) (result i32)))
  (type (;24;) (func (result i32 f64)))
  (type (;25;) (func (result i64 i32)))
  (type (;26;) (func (param i32) (result i64)))
  (type (;27;) (func (param i32) (result f32)))
  (type (;28;) (func (param i32) (result f64)))
  (type (;29;) (func (param i64)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 29)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;1;) (type 29)))
  (func $const-i32 (;2;) (type $out-i32) (result i32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    i32.const 306
  )
  (func $const-i64 (;3;) (type $out-i64) (result i64)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    i64.const 356
  )
  (func $const-f32 (;4;) (type $out-f32) (result f32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    f32.const 0x1.e64p+11 (;=3890;)
  )
  (func $const-f64 (;5;) (type $out-f64) (result f64)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    f64.const 0x1.ec8p+11 (;=3940;)
  )
  (func $const-f64-i32 (;6;) (type $out-f64-i32) (result f64 i32)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    f64.const 0x1.ec8p+11 (;=3940;)
    i32.const 32
  )
  (func $id-i32 (;7;) (type $over-i32) (param i32) (result i32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    local.get 0
  )
  (func $id-i64 (;8;) (type $over-i64) (param i64) (result i64)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    local.get 0
  )
  (func $id-f32 (;9;) (type $over-f32) (param f32) (result f32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    local.get 0
  )
  (func $id-f64 (;10;) (type $over-f64) (param f64) (result f64)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    local.get 0
  )
  (func $id-i32-f64 (;11;) (type $over-i32-f64) (param i32 f64) (result i32 f64)
    i64.const 1000001000012
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    local.get 0
    local.get 1
  )
  (func $swap-i32-i64 (;12;) (type $swap-i32-i64) (param i32 i64) (result i64 i32)
    i64.const 1000001000012
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    local.get 1
    local.get 0
  )
  (func $i32-i64 (;13;) (type $i32-i64) (param i32 i64) (result i64)
    i64.const 1000001000008
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    local.get 1
  )
  (func $i64-f64 (;14;) (type $i64-f64) (param i64 f64) (result f64)
    i64.const 1000001000008
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    local.get 1
  )
  (func $f32-i32 (;15;) (type $f32-i32) (param f32 i32) (result i32)
    i64.const 1000001000004
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    local.get 1
  )
  (func $f64-f32 (;16;) (type $f64-f32) (param f64 f32) (result f32)
    i64.const 1000001000004
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    local.get 1
  )
  (func $over-i32-duplicate (;17;) (type $over-i32-duplicate) (param i32) (result i32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    local.get 0
  )
  (func $over-i64-duplicate (;18;) (type $over-i64-duplicate) (param i64) (result i64)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    local.get 0
  )
  (func $over-f32-duplicate (;19;) (type $over-f32-duplicate) (param f32) (result f32)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    local.get 0
  )
  (func $over-f64-duplicate (;20;) (type $over-f64-duplicate) (param f64) (result f64)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    local.get 0
  )
  (func (;21;) (type $proc)
    i64.const 1000000000072
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    i32.const 0
    call_indirect (type $proc)
    i64.const 3
    call $finite_wasm_gas
    i64.const 0
    i32.const 0
    call_indirect (type 20)
    i64.const 6
    call $finite_wasm_gas
    i64.const 0
    f64.const 0x0p+0 (;=0;)
    i32.const 0
    i64.const 0
    i32.const 0
    call_indirect (type 21)
    i64.const 2
    call $finite_wasm_gas
    i32.const 0
    call_indirect (type $proc)
    i64.const 2
    call $finite_wasm_gas
    i32.const 0
    call_indirect (type $out-i32)
    i64.const 4
    call $finite_wasm_gas
    i32.eqz
    drop
    i32.const 0
    call_indirect (type $out-i32)
    i64.const 5
    call $finite_wasm_gas
    i32.eqz
    drop
    i64.const 0
    i32.const 0
    call_indirect (type 22)
    i64.const 8
    call $finite_wasm_gas
    i32.eqz
    drop
    i64.const 0
    f64.const 0x0p+0 (;=0;)
    i32.const 0
    i64.const 0
    i32.const 0
    call_indirect (type 23)
    i64.const 5
    call $finite_wasm_gas
    i32.eqz
    drop
    i64.const 0
    i32.const 0
    call_indirect (type $over-i64)
    i64.const 3
    call $finite_wasm_gas
    i64.eqz
    drop
  )
  (func (;22;) (type $out-i32) (result i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    i32.const 0
    call_indirect (type $out-i32)
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;23;) (type $out-i64) (result i64)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    i32.const 1
    call_indirect (type $out-i64)
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;24;) (type $out-f32) (result f32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    i32.const 2
    call_indirect (type $out-f32)
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;25;) (type $out-f64) (result f64)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    i32.const 3
    call_indirect (type $out-f64)
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;26;) (type $out-f64-i32) (result f64 i32)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    i32.const 29
    call_indirect (type $out-f64-i32)
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;27;) (type $out-i64) (result i64)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    i64.const 100
    i32.const 5
    call_indirect (type $over-i64)
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;28;) (type $out-i32) (result i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    i32.const 32
    i32.const 4
    call_indirect (type $over-i32)
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;29;) (type $out-i64) (result i64)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    i64.const 64
    i32.const 5
    call_indirect (type $over-i64)
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;30;) (type $out-f32) (result f32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    f32.const 0x1.51eb86p+0 (;=1.32;)
    i32.const 6
    call_indirect (type $over-f32)
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;31;) (type $out-f64) (result f64)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    f64.const 0x1.a3d70a3d70a3dp+0 (;=1.64;)
    i32.const 7
    call_indirect (type $over-f64)
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;32;) (type $out-i32) (result i32)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    f32.const 0x1.00ccccp+5 (;=32.1;)
    i32.const 32
    i32.const 8
    call_indirect (type $f32-i32)
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;33;) (type $out-i64) (result i64)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    i32.const 32
    i64.const 64
    i32.const 9
    call_indirect (type $i32-i64)
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;34;) (type $out-f32) (result f32)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    f64.const 0x1p+6 (;=64;)
    f32.const 0x1p+5 (;=32;)
    i32.const 10
    call_indirect (type $f64-f32)
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;35;) (type $out-f64) (result f64)
    i64.const 1000000000020
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    i64.const 64
    f64.const 0x1.0066666666666p+6 (;=64.1;)
    i32.const 11
    call_indirect (type $i64-f64)
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;36;) (type $out-f64-i32) (result f64 i32)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    i32.const 29
    call_indirect (type $out-f64-i32)
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;37;) (type 24) (result i32 f64)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    i32.const 1
    f64.const 0x1p+1 (;=2;)
    i32.const 30
    call_indirect (type $over-i32-f64)
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;38;) (type 25) (result i64 i32)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    i32.const 1
    i64.const 2
    i32.const 31
    call_indirect (type $swap-i32-i64)
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;39;) (type $i32-i64) (param i32 i64) (result i64)
    i64.const 1000001000016
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    local.get 1
    local.get 0
    call_indirect (type $over-i64)
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;40;) (type 26) (param i32) (result i64)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    i64.const 9
    local.get 0
    call_indirect (type $over-i64-duplicate)
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;41;) (type $over-i32) (param i32) (result i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    i32.const 9
    local.get 0
    call_indirect (type $over-i32-duplicate)
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;42;) (type 27) (param i32) (result f32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    f32.const 0x1.2p+3 (;=9;)
    local.get 0
    call_indirect (type $over-f32-duplicate)
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;43;) (type 28) (param i32) (result f64)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    f64.const 0x1.2p+3 (;=9;)
    local.get 0
    call_indirect (type $over-f64-duplicate)
    i64.const 1
    call $finite_wasm_gas
  )
  (func $fac-i64 (;44;) (type $over-i64) (param i64) (result i64)
    i64.const 1000000000024
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    local.get 0
    i64.eqz
    if (result i64) ;; label = @1
      i64.const 2
      call $finite_wasm_gas
      i64.const 1
    else
      i64.const 6
      call $finite_wasm_gas
      local.get 0
      local.get 0
      i64.const 1
      i64.sub
      i32.const 12
      call_indirect (type $over-i64)
      i64.const 2
      call $finite_wasm_gas
      i64.mul
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func $fib-i64 (;45;) (type $over-i64) (param i64) (result i64)
    i64.const 1000000000032
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    local.get 0
    i64.const 1
    i64.le_u
    if (result i64) ;; label = @1
      i64.const 2
      call $finite_wasm_gas
      i64.const 1
    else
      i64.const 5
      call $finite_wasm_gas
      local.get 0
      i64.const 2
      i64.sub
      i32.const 13
      call_indirect (type $over-i64)
      i64.const 5
      call $finite_wasm_gas
      local.get 0
      i64.const 1
      i64.sub
      i32.const 13
      call_indirect (type $over-i64)
      i64.const 2
      call $finite_wasm_gas
      i64.add
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func $fac-i32 (;46;) (type $over-i32) (param i32) (result i32)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    local.get 0
    i32.eqz
    if (result i32) ;; label = @1
      i64.const 2
      call $finite_wasm_gas
      i32.const 1
    else
      i64.const 6
      call $finite_wasm_gas
      local.get 0
      local.get 0
      i32.const 1
      i32.sub
      i32.const 23
      call_indirect (type $over-i32)
      i64.const 2
      call $finite_wasm_gas
      i32.mul
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func $fac-f32 (;47;) (type $over-f32) (param f32) (result f32)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    local.get 0
    f32.const 0x0p+0 (;=0;)
    f32.eq
    if (result f32) ;; label = @1
      i64.const 2
      call $finite_wasm_gas
      f32.const 0x1p+0 (;=1;)
    else
      i64.const 6
      call $finite_wasm_gas
      local.get 0
      local.get 0
      f32.const 0x1p+0 (;=1;)
      f32.sub
      i32.const 24
      call_indirect (type $over-f32)
      i64.const 2
      call $finite_wasm_gas
      f32.mul
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func $fac-f64 (;48;) (type $over-f64) (param f64) (result f64)
    i64.const 1000000000024
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    local.get 0
    f64.const 0x0p+0 (;=0;)
    f64.eq
    if (result f64) ;; label = @1
      i64.const 2
      call $finite_wasm_gas
      f64.const 0x1p+0 (;=1;)
    else
      i64.const 6
      call $finite_wasm_gas
      local.get 0
      local.get 0
      f64.const 0x1p+0 (;=1;)
      f64.sub
      i32.const 25
      call_indirect (type $over-f64)
      i64.const 2
      call $finite_wasm_gas
      f64.mul
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func $fib-i32 (;49;) (type $over-i32) (param i32) (result i32)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    local.get 0
    i32.const 1
    i32.le_u
    if (result i32) ;; label = @1
      i64.const 2
      call $finite_wasm_gas
      i32.const 1
    else
      i64.const 5
      call $finite_wasm_gas
      local.get 0
      i32.const 2
      i32.sub
      i32.const 26
      call_indirect (type $over-i32)
      i64.const 5
      call $finite_wasm_gas
      local.get 0
      i32.const 1
      i32.sub
      i32.const 26
      call_indirect (type $over-i32)
      i64.const 2
      call $finite_wasm_gas
      i32.add
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func $fib-f32 (;50;) (type $over-f32) (param f32) (result f32)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    local.get 0
    f32.const 0x1p+0 (;=1;)
    f32.le
    if (result f32) ;; label = @1
      i64.const 2
      call $finite_wasm_gas
      f32.const 0x1p+0 (;=1;)
    else
      i64.const 5
      call $finite_wasm_gas
      local.get 0
      f32.const 0x1p+1 (;=2;)
      f32.sub
      i32.const 27
      call_indirect (type $over-f32)
      i64.const 5
      call $finite_wasm_gas
      local.get 0
      f32.const 0x1p+0 (;=1;)
      f32.sub
      i32.const 27
      call_indirect (type $over-f32)
      i64.const 2
      call $finite_wasm_gas
      f32.add
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func $fib-f64 (;51;) (type $over-f64) (param f64) (result f64)
    i64.const 1000000000032
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    local.get 0
    f64.const 0x1p+0 (;=1;)
    f64.le
    if (result f64) ;; label = @1
      i64.const 2
      call $finite_wasm_gas
      f64.const 0x1p+0 (;=1;)
    else
      i64.const 5
      call $finite_wasm_gas
      local.get 0
      f64.const 0x1p+1 (;=2;)
      f64.sub
      i32.const 28
      call_indirect (type $over-f64)
      i64.const 5
      call $finite_wasm_gas
      local.get 0
      f64.const 0x1p+0 (;=1;)
      f64.sub
      i32.const 28
      call_indirect (type $over-f64)
      i64.const 2
      call $finite_wasm_gas
      f64.add
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func $even (;52;) (type $over-i32) (param i32) (result i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    local.get 0
    i32.eqz
    if (result i32) ;; label = @1
      i64.const 2
      call $finite_wasm_gas
      i32.const 44
    else
      i64.const 5
      call $finite_wasm_gas
      local.get 0
      i32.const 1
      i32.sub
      i32.const 15
      call_indirect (type $over-i32)
      i64.const 1
      call $finite_wasm_gas
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func $odd (;53;) (type $over-i32) (param i32) (result i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    local.get 0
    i32.eqz
    if (result i32) ;; label = @1
      i64.const 2
      call $finite_wasm_gas
      i32.const 99
    else
      i64.const 5
      call $finite_wasm_gas
      local.get 0
      i32.const 1
      i32.sub
      i32.const 14
      call_indirect (type $over-i32)
      i64.const 1
      call $finite_wasm_gas
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func $runaway (;54;) (type $proc)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    i32.const 16
    call_indirect (type $proc)
    i64.const 1
    call $finite_wasm_gas
  )
  (func $mutual-runaway1 (;55;) (type $proc)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    i32.const 18
    call_indirect (type $proc)
    i64.const 1
    call $finite_wasm_gas
  )
  (func $mutual-runaway2 (;56;) (type $proc)
    i64.const 1000000000004
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    i32.const 17
    call_indirect (type $proc)
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;57;) (type $out-i32) (result i32)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    i32.const 0
    call_indirect (type $out-i32)
    i64.const 4
    call $finite_wasm_gas
    i32.const 2
    i32.const 3
    select
  )
  (func (;58;) (type $out-i32) (result i32)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    i32.const 2
    i32.const 0
    call_indirect (type $out-i32)
    i64.const 3
    call $finite_wasm_gas
    i32.const 3
    select
  )
  (func (;59;) (type $out-i32) (result i32)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    i32.const 2
    i32.const 3
    i32.const 0
    call_indirect (type $out-i32)
    i64.const 2
    call $finite_wasm_gas
    select
  )
  (func (;60;) (type $out-i32) (result i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    i32.const 0
    call_indirect (type $out-i32)
    i64.const 1
    call $finite_wasm_gas
    if (result i32) ;; label = @1
      i64.const 2
      call $finite_wasm_gas
      i32.const 1
    else
      i64.const 2
      call $finite_wasm_gas
      i32.const 2
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;61;) (type $out-i64) (result i64)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    block (result i64) ;; label = @1
      i32.const 1
      call_indirect (type $out-i64)
      i64.const 2
      call $finite_wasm_gas
      i32.const 2
      br_if 0 (;@1;)
      i64.const 1
      call $finite_wasm_gas
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;62;) (type $out-i32) (result i32)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    block (result i32) ;; label = @1
      i32.const 2
      i32.const 0
      call_indirect (type $out-i32)
      i64.const 1
      call $finite_wasm_gas
      br_if 0 (;@1;)
      i64.const 1
      call $finite_wasm_gas
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;63;) (type $out-f32) (result f32)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    block (result f32) ;; label = @1
      i32.const 2
      call_indirect (type $out-f32)
      i64.const 2
      call $finite_wasm_gas
      i32.const 2
      br_table 0 (;@1;) 0 (;@1;)
      i64.const 1
      call $finite_wasm_gas
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;64;) (type $out-i32) (result i32)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    block (result i32) ;; label = @1
      i32.const 2
      i32.const 0
      call_indirect (type $out-i32)
      i64.const 1
      call $finite_wasm_gas
      br_table 0 (;@1;) 0 (;@1;)
      i64.const 1
      call $finite_wasm_gas
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;65;) (type $proc)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    i32.const 0
    call_indirect (type $out-i32)
    i64.const 2
    call $finite_wasm_gas
    i32.const 1
    i32.store
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;66;) (type $proc)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    i32.const 10
    i32.const 3
    call_indirect (type $out-f64)
    i64.const 1
    call $finite_wasm_gas
    f64.store
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;67;) (type $out-i32) (result i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    i32.const 0
    call_indirect (type $out-i32)
    i64.const 1
    call $finite_wasm_gas
    memory.grow
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;68;) (type $out-i32) (result i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    i32.const 1
    i32.const 4
    call_indirect (type $over-i32)
    i64.const 1
    call $finite_wasm_gas
    return
  )
  (func (;69;) (type $proc)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    i64.const 1
    i32.const 5
    call_indirect (type $over-i64)
    i64.const 2
    call $finite_wasm_gas
    drop
  )
  (func (;70;) (type $out-f32) (result f32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    block (result f32) ;; label = @1
      f32.const 0x1p+0 (;=1;)
      i32.const 6
      call_indirect (type $over-f32)
      i64.const 1
      call $finite_wasm_gas
      br 0 (;@1;)
      i64.const 1
      call $finite_wasm_gas
    end
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;71;) (type $out-f64) (result f64)
    (local f64)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    f64.const 0x1p+0 (;=1;)
    i32.const 7
    call_indirect (type $over-f64)
    i64.const 3
    call $finite_wasm_gas
    local.set 0
    local.get 0
  )
  (func (;72;) (type $out-f64) (result f64)
    (local f64)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    f64.const 0x1p+0 (;=1;)
    i32.const 7
    call_indirect (type $over-f64)
    i64.const 2
    call $finite_wasm_gas
    local.tee 0
  )
  (func (;73;) (type $out-f64) (result f64)
    i64.const 1000000000016
    call $finite_wasm_stack
    i64.const 3
    call $finite_wasm_gas
    f64.const 0x1p+0 (;=1;)
    i32.const 7
    call_indirect (type $over-f64)
    i64.const 3
    call $finite_wasm_gas
    global.set $a
    global.get $a
  )
  (func (;74;) (type $out-i32) (result i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 2
    call $finite_wasm_gas
    i32.const 0
    call_indirect (type $out-i32)
    i64.const 1
    call $finite_wasm_gas
    i32.load
    i64.const 1
    call $finite_wasm_gas
  )
  (func (;75;) (type $out-f32) (result f32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    block (result f32) ;; label = @1
      f32.const 0x0p+0 (;=0;)
      i32.const 6
      call_indirect (type $over-f32)
      i64.const 3
      call $finite_wasm_gas
      f32.sqrt
    end
  )
  (func (;76;) (type $out-i32) (result i32)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    block (result i32) ;; label = @1
      i32.const 1
      i32.const 4
      call_indirect (type $over-i32)
      i64.const 4
      call $finite_wasm_gas
      i32.const 10
      i32.add
    end
  )
  (func (;77;) (type $out-i32) (result i32)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 5
    call $finite_wasm_gas
    block (result i32) ;; label = @1
      i32.const 10
      i32.const 1
      i32.const 4
      call_indirect (type $over-i32)
      i64.const 3
      call $finite_wasm_gas
      i32.sub
    end
  )
  (func (;78;) (type $out-i32) (result i32)
    i64.const 1000000000008
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    block (result i32) ;; label = @1
      i32.const 1
      i32.const 4
      call_indirect (type $over-i32)
      i64.const 3
      call $finite_wasm_gas
      i32.eqz
    end
  )
  (func (;79;) (type $out-i32) (result i32)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    block (result i32) ;; label = @1
      i32.const 1
      i32.const 4
      call_indirect (type $over-i32)
      i64.const 4
      call $finite_wasm_gas
      i32.const 10
      i32.le_u
    end
  )
  (func (;80;) (type $out-i32) (result i32)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 5
    call $finite_wasm_gas
    block (result i32) ;; label = @1
      i32.const 10
      i32.const 1
      i32.const 4
      call_indirect (type $over-i32)
      i64.const 3
      call $finite_wasm_gas
      i32.ne
    end
  )
  (func (;81;) (type $out-i64) (result i64)
    i64.const 1000000000012
    call $finite_wasm_stack
    i64.const 4
    call $finite_wasm_gas
    block (result i64) ;; label = @1
      i32.const 1
      i32.const 4
      call_indirect (type $over-i32)
      i64.const 3
      call $finite_wasm_gas
      i64.extend_i32_s
    end
  )
  (table (;0;) 32 32 funcref)
  (memory (;0;) 1)
  (global $a (;0;) (mut f64) f64.const 0x1.4p+3 (;=10;))
  (export "type-i32" (func 22))
  (export "type-i64" (func 23))
  (export "type-f32" (func 24))
  (export "type-f64" (func 25))
  (export "type-f64-i32" (func 26))
  (export "type-index" (func 27))
  (export "type-first-i32" (func 28))
  (export "type-first-i64" (func 29))
  (export "type-first-f32" (func 30))
  (export "type-first-f64" (func 31))
  (export "type-second-i32" (func 32))
  (export "type-second-i64" (func 33))
  (export "type-second-f32" (func 34))
  (export "type-second-f64" (func 35))
  (export "type-all-f64-i32" (func 36))
  (export "type-all-i32-f64" (func 37))
  (export "type-all-i32-i64" (func 38))
  (export "dispatch" (func 39))
  (export "dispatch-structural-i64" (func 40))
  (export "dispatch-structural-i32" (func 41))
  (export "dispatch-structural-f32" (func 42))
  (export "dispatch-structural-f64" (func 43))
  (export "fac-i64" (func $fac-i64))
  (export "fib-i64" (func $fib-i64))
  (export "fac-i32" (func $fac-i32))
  (export "fac-f32" (func $fac-f32))
  (export "fac-f64" (func $fac-f64))
  (export "fib-i32" (func $fib-i32))
  (export "fib-f32" (func $fib-f32))
  (export "fib-f64" (func $fib-f64))
  (export "even" (func $even))
  (export "odd" (func $odd))
  (export "runaway" (func $runaway))
  (export "mutual-runaway" (func $mutual-runaway1))
  (export "as-select-first" (func 57))
  (export "as-select-mid" (func 58))
  (export "as-select-last" (func 59))
  (export "as-if-condition" (func 60))
  (export "as-br_if-first" (func 61))
  (export "as-br_if-last" (func 62))
  (export "as-br_table-first" (func 63))
  (export "as-br_table-last" (func 64))
  (export "as-store-first" (func 65))
  (export "as-store-last" (func 66))
  (export "as-memory.grow-value" (func 67))
  (export "as-return-value" (func 68))
  (export "as-drop-operand" (func 69))
  (export "as-br-value" (func 70))
  (export "as-local.set-value" (func 71))
  (export "as-local.tee-value" (func 72))
  (export "as-global.set-value" (func 73))
  (export "as-load-operand" (func 74))
  (export "as-unary-operand" (func 75))
  (export "as-binary-left" (func 76))
  (export "as-binary-right" (func 77))
  (export "as-test-operand" (func 78))
  (export "as-compare-left" (func 79))
  (export "as-compare-right" (func 80))
  (export "as-convert-operand" (func 81))
  (elem (;0;) (i32.const 0) func)
)