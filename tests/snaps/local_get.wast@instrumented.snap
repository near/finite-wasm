(module
  (type (;0;) (func (result i32)))
  (type (;1;) (func (result i64)))
  (type (;2;) (func (result f32)))
  (type (;3;) (func (result f64)))
  (type (;4;) (func (param i32) (result i32)))
  (type (;5;) (func (param i64) (result i64)))
  (type (;6;) (func (param f32) (result f32)))
  (type (;7;) (func (param f64) (result f64)))
  (type (;8;) (func (param i64 f32 f64 i32 i32)))
  (type (;9;) (func (param i64 f32 f64 i32 i32) (result f64)))
  (type (;10;) (func (param i64)))
  (type (;11;) (func (param i64 i64)))
  (type (;12;) (func (param i32 i64 i64) (result i32)))
  (import "spectest" "finite_wasm_gas" (func (;0;) (type 10)))
  (import "spectest" "finite_wasm_memory_copy" (func (;1;) (type 12)))
  (import "spectest" "finite_wasm_memory_fill" (func (;2;) (type 12)))
  (import "spectest" "finite_wasm_memory_init" (func (;3;) (type 12)))
  (import "spectest" "finite_wasm_table_copy" (func (;4;) (type 12)))
  (import "spectest" "finite_wasm_table_fill" (func (;5;) (type 12)))
  (import "spectest" "finite_wasm_table_init" (func (;6;) (type 12)))
  (import "spectest" "finite_wasm_stack" (func (;7;) (type 11)))
  (import "spectest" "finite_wasm_unstack" (func (;8;) (type 11)))
  (export "type-local-i32" (func 9))
  (export "type-local-i64" (func 10))
  (export "type-local-f32" (func 11))
  (export "type-local-f64" (func 12))
  (export "type-param-i32" (func 13))
  (export "type-param-i64" (func 14))
  (export "type-param-f32" (func 15))
  (export "type-param-f64" (func 16))
  (export "type-mixed" (func 17))
  (export "read" (func 18))
  (export "as-block-value" (func 19))
  (export "as-loop-value" (func 20))
  (export "as-br-value" (func 21))
  (export "as-br_if-value" (func 22))
  (export "as-br_if-value-cond" (func 23))
  (export "as-br_table-value" (func 24))
  (export "as-return-value" (func 25))
  (export "as-if-then" (func 26))
  (export "as-if-else" (func 27))
  (func (;9;) (type 0) (result i32)
    (local i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 1
      call 0
      local.get 0
    end
    i64.const 4
    i64.const 1
    call 8
  )
  (func (;10;) (type 1) (result i64)
    (local i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 1
      call 7
      i64.const 1
      call 0
      local.get 0
    end
    i64.const 8
    i64.const 1
    call 8
  )
  (func (;11;) (type 2) (result f32)
    (local f32)
    block (result f32) ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 1
      call 0
      local.get 0
    end
    i64.const 4
    i64.const 1
    call 8
  )
  (func (;12;) (type 3) (result f64)
    (local f64)
    block (result f64) ;; label = @1
      i64.const 8
      i64.const 1
      call 7
      i64.const 1
      call 0
      local.get 0
    end
    i64.const 8
    i64.const 1
    call 8
  )
  (func (;13;) (type 4) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 1
      call 0
      local.get 0
    end
    i64.const 4
    i64.const 1
    call 8
  )
  (func (;14;) (type 5) (param i64) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 1
      call 7
      i64.const 1
      call 0
      local.get 0
    end
    i64.const 8
    i64.const 1
    call 8
  )
  (func (;15;) (type 6) (param f32) (result f32)
    block (result f32) ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 1
      call 0
      local.get 0
    end
    i64.const 4
    i64.const 1
    call 8
  )
  (func (;16;) (type 7) (param f64) (result f64)
    block (result f64) ;; label = @1
      i64.const 8
      i64.const 1
      call 7
      i64.const 1
      call 0
      local.get 0
    end
    i64.const 8
    i64.const 1
    call 8
  )
  (func (;17;) (type 8) (param i64 f32 f64 i32 i32)
    (local f32 i64 i64 f64)
    block ;; label = @1
      i64.const 8
      i64.const 9
      call 7
      i64.const 27
      call 0
      local.get 0
      i64.eqz
      drop
      local.get 1
      f32.neg
      drop
      local.get 2
      f64.neg
      drop
      local.get 3
      i32.eqz
      drop
      local.get 4
      i32.eqz
      drop
      local.get 5
      f32.neg
      drop
      local.get 6
      i64.eqz
      drop
      local.get 7
      i64.eqz
      drop
      local.get 8
      f64.neg
      drop
    end
    i64.const 8
    i64.const 9
    call 8
  )
  (func (;18;) (type 9) (param i64 f32 f64 i32 i32) (result f64)
    (local f32 i64 i64 f64)
    block (result f64) ;; label = @1
      i64.const 72
      i64.const 9
      call 7
      i64.const 30
      call 0
      f32.const 0x1.6p+2 (;=5.5;)
      local.set 5
      i64.const 6
      local.set 6
      f64.const 0x1p+3 (;=8;)
      local.set 8
      local.get 0
      f64.convert_i64_u
      local.get 1
      f64.promote_f32
      local.get 2
      local.get 3
      f64.convert_i32_u
      local.get 4
      f64.convert_i32_s
      local.get 5
      f64.promote_f32
      local.get 6
      f64.convert_i64_u
      local.get 7
      f64.convert_i64_u
      local.get 8
      f64.add
      f64.add
      f64.add
      f64.add
      f64.add
      f64.add
      f64.add
      f64.add
    end
    i64.const 72
    i64.const 9
    call 8
  )
  (func (;19;) (type 4) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 2
      call 0
      block (result i32) ;; label = @2
        local.get 0
      end
    end
    i64.const 4
    i64.const 1
    call 8
  )
  (func (;20;) (type 4) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 2
      call 0
      loop (result i32) ;; label = @2
        local.get 0
      end
    end
    i64.const 4
    i64.const 1
    call 8
  )
  (func (;21;) (type 4) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 3
      call 0
      block (result i32) ;; label = @2
        local.get 0
        br 0 (;@2;)
      end
    end
    i64.const 4
    i64.const 1
    call 8
  )
  (func (;22;) (type 4) (param i32) (result i32)
    block $l0 (result i32)
      i64.const 8
      i64.const 1
      call 7
      i64.const 4
      call 0
      block (result i32) ;; label = @2
        local.get 0
        i32.const 1
        br_if 0 (;@2;)
      end
    end
    i64.const 8
    i64.const 1
    call 8
  )
  (func (;23;) (type 4) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 1
      call 7
      i64.const 4
      call 0
      block (result i32) ;; label = @2
        local.get 0
        local.get 0
        br_if 0 (;@2;)
      end
    end
    i64.const 8
    i64.const 1
    call 8
  )
  (func (;24;) (type 4) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 5
      call 0
      block ;; label = @2
        block ;; label = @3
          block ;; label = @4
            local.get 0
            br_table 0 (;@4;) 1 (;@3;) 2 (;@2;)
            i32.const 0
            i64.const 4
            i64.const 1
            call 8
            return
          end
          i64.const 2
          call 0
          i32.const 1
          i64.const 4
          i64.const 1
          call 8
          return
        end
        i64.const 2
        call 0
        i32.const 2
        i64.const 4
        i64.const 1
        call 8
        return
      end
      i64.const 1
      call 0
      i32.const 3
    end
    i64.const 4
    i64.const 1
    call 8
  )
  (func (;25;) (type 4) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get 0
      i64.const 4
      i64.const 1
      call 8
      return
    end
    i64.const 4
    i64.const 1
    call 8
  )
  (func (;26;) (type 4) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get 0
      if (result i32) ;; label = @2
        i64.const 1
        call 0
        local.get 0
      else
        i64.const 1
        call 0
        i32.const 0
      end
    end
    i64.const 4
    i64.const 1
    call 8
  )
  (func (;27;) (type 4) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call 7
      i64.const 2
      call 0
      local.get 0
      if (result i32) ;; label = @2
        i64.const 1
        call 0
        i32.const 1
      else
        i64.const 1
        call 0
        local.get 0
      end
    end
    i64.const 4
    i64.const 1
    call 8
  )
)

(assert_return (invoke "type-local-i32") (i32.const 0))
(assert_return (invoke "type-local-i64") (i64.const 0))
(assert_return (invoke "type-local-f32") (f32.const 0))
(assert_return (invoke "type-local-f64") (f64.const 0))

(assert_return (invoke "type-param-i32" (i32.const 2)) (i32.const 2))
(assert_return (invoke "type-param-i64" (i64.const 3)) (i64.const 3))
(assert_return (invoke "type-param-f32" (f32.const 4.4)) (f32.const 4.4))
(assert_return (invoke "type-param-f64" (f64.const 5.5)) (f64.const 5.5))

(assert_return (invoke "as-block-value" (i32.const 6)) (i32.const 6))
(assert_return (invoke "as-loop-value" (i32.const 7)) (i32.const 7))

(assert_return (invoke "as-br-value" (i32.const 8)) (i32.const 8))
(assert_return (invoke "as-br_if-value" (i32.const 9)) (i32.const 9))
(assert_return (invoke "as-br_if-value-cond" (i32.const 10)) (i32.const 10))
(assert_return (invoke "as-br_table-value" (i32.const 1)) (i32.const 2))

(assert_return (invoke "as-return-value" (i32.const 0)) (i32.const 0))

(assert_return (invoke "as-if-then" (i32.const 1)) (i32.const 1))
(assert_return (invoke "as-if-else" (i32.const 0)) (i32.const 0))

(assert_return
  (invoke "type-mixed"
    (i64.const 1) (f32.const 2.2) (f64.const 3.3) (i32.const 4) (i32.const 5)
  )
)

(assert_return
  (invoke "read"
    (i64.const 1) (f32.const 2) (f64.const 3.3) (i32.const 4) (i32.const 5)
  )
  (f64.const 34.8)
)


;; Invalid typing of access to locals

