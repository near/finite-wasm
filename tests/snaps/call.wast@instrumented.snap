(module
  (type $check (;0;) (func (param i32 i32) (result i32)))
  (type (;1;) (func (result i32)))
  (type (;2;) (func (result i64)))
  (type (;3;) (func (result f32)))
  (type (;4;) (func (result f64)))
  (type (;5;) (func (result i32 i64)))
  (type (;6;) (func (param i32) (result i32)))
  (type (;7;) (func (param i64) (result i64)))
  (type (;8;) (func (param f32) (result f32)))
  (type (;9;) (func (param f64) (result f64)))
  (type (;10;) (func (param i32 f64) (result i32 f64)))
  (type (;11;) (func (param i32 i32) (result i32 i32)))
  (type (;12;) (func (param f32 f64) (result f64 f32)))
  (type (;13;) (func (param f64 i32) (result i32 f64)))
  (type (;14;) (func (param f32 i32) (result i32)))
  (type (;15;) (func (param i32 i64) (result i64)))
  (type (;16;) (func (param f64 f32) (result f32)))
  (type (;17;) (func (param i64 f64) (result f64)))
  (type (;18;) (func (result i32 f64)))
  (type (;19;) (func (result i32 i32)))
  (type (;20;) (func (result f64 f32)))
  (type (;21;) (func (param i64 i64) (result i64)))
  (type (;22;) (func (param i64) (result i32)))
  (type (;23;) (func))
  (type (;24;) (func (param f32 i32 i32 f64 f32 f32 f32 f64 f32 i32 i32 f32 f64 i64 i64 i32 i64 i64 f32 i64 i64 i64 i32 f32 f32 f32 f64 f32 i32 i64 f32 f64 f64 f32 i32 f32 f32 f64 i64 f64 i32 i64 f32 f64 i32 i32 i32 i64 f64 i32 i64 i64 f64 f64 f64 f64 f64 f64 i32 f32 f64 f64 i32 i64 f32 f32 f32 i32 f64 f64 f64 f64 f64 f32 i64 i64 i32 i32 i32 f32 f64 i32 i64 f32 f32 f32 i32 i32 f32 f64 i64 f32 f64 f32 f32 f32 i32 f32 i64 i32) (result i32)))
  (type (;25;) (func (param i64)))
  (type (;26;) (func (param i64 i64)))
  (type (;27;) (func (result i32 f64)))
  (type (;28;) (func (result i32 i32)))
  (type (;29;) (func (result f64 f32)))
  (type (;30;) (func (result i32 f64)))
  (import "spectest" "finite_wasm_gas" (func $finite_wasm_gas (;0;) (type 25)))
  (import "spectest" "finite_wasm_stack" (func $finite_wasm_stack (;1;) (type 26)))
  (import "spectest" "finite_wasm_unstack" (func $finite_wasm_unstack (;2;) (type 26)))
  (table (;0;) 1 1 funcref)
  (memory (;0;) 1)
  (global $a (;0;) (mut i32) i32.const 10)
  (export "type-i32" (func 20))
  (export "type-i64" (func 21))
  (export "type-f32" (func 22))
  (export "type-f64" (func 23))
  (export "type-i32-i64" (func 24))
  (export "type-first-i32" (func 25))
  (export "type-first-i64" (func 26))
  (export "type-first-f32" (func 27))
  (export "type-first-f64" (func 28))
  (export "type-second-i32" (func 29))
  (export "type-second-i64" (func 30))
  (export "type-second-f32" (func 31))
  (export "type-second-f64" (func 32))
  (export "type-all-i32-f64" (func 33))
  (export "type-all-i32-i32" (func 34))
  (export "type-all-f32-f64" (func 35))
  (export "type-all-f64-i32" (func 36))
  (export "as-binary-all-operands" (func 37))
  (export "as-mixed-operands" (func 38))
  (export "as-call-all-operands" (func 39))
  (export "fac" (func $fac))
  (export "fac-acc" (func $fac-acc))
  (export "fib" (func $fib))
  (export "even" (func $even))
  (export "odd" (func $odd))
  (export "runaway" (func $runaway))
  (export "mutual-runaway" (func $mutual-runaway1))
  (export "as-select-first" (func 48))
  (export "as-select-mid" (func 49))
  (export "as-select-last" (func 50))
  (export "as-if-condition" (func 51))
  (export "as-br_if-first" (func 52))
  (export "as-br_if-last" (func 53))
  (export "as-br_table-first" (func 54))
  (export "as-br_table-last" (func 55))
  (export "as-call_indirect-first" (func 57))
  (export "as-call_indirect-mid" (func 58))
  (export "as-call_indirect-last" (func 59))
  (export "as-store-first" (func 60))
  (export "as-store-last" (func 61))
  (export "as-memory.grow-value" (func 62))
  (export "as-return-value" (func 63))
  (export "as-drop-operand" (func 64))
  (export "as-br-value" (func 65))
  (export "as-local.set-value" (func 66))
  (export "as-local.tee-value" (func 67))
  (export "as-global.set-value" (func 68))
  (export "as-load-operand" (func 69))
  (export "as-unary-operand" (func 72))
  (export "as-binary-left" (func 73))
  (export "as-binary-right" (func 74))
  (export "as-test-operand" (func 75))
  (export "as-compare-left" (func 76))
  (export "as-compare-right" (func 77))
  (export "as-convert-operand" (func 78))
  (export "return-from-long-argument-list" (func 80))
  (elem (;0;) (table 0) (i32.const 0) func $func)
  (func $const-i32 (;3;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i32.const 306
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $const-i64 (;4;) (type 2) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      i64.const 356
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $const-f32 (;5;) (type 3) (result f32)
    block (result f32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      f32.const 0x1.e64p+11 (;=3890;)
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $const-f64 (;6;) (type 4) (result f64)
    block (result f64) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      f64.const 0x1.ec8p+11 (;=3940;)
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $const-i32-i64 (;7;) (type 5) (result i32 i64)
    block (type 5) (result i32 i64) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i32.const 306
      i64.const 356
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $id-i32 (;8;) (type 6) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func $id-i64 (;9;) (type 7) (param i64) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func $id-f32 (;10;) (type 8) (param f32) (result f32)
    block (result f32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func $id-f64 (;11;) (type 9) (param f64) (result f64)
    block (result f64) ;; label = @1
      i64.const 8
      i64.const 1
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 8
    i64.const 1
    call $finite_wasm_unstack
  )
  (func $id-i32-f64 (;12;) (type 10) (param i32 f64) (result i32 f64)
    block (type 27) (result i32 f64) ;; label = @1
      i64.const 12
      i64.const 2
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 0
      local.get 1
    end
    i64.const 12
    i64.const 2
    call $finite_wasm_unstack
  )
  (func $swap-i32-i32 (;13;) (type 11) (param i32 i32) (result i32 i32)
    block (type 28) (result i32 i32) ;; label = @1
      i64.const 8
      i64.const 2
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 1
      local.get 0
    end
    i64.const 8
    i64.const 2
    call $finite_wasm_unstack
  )
  (func $swap-f32-f64 (;14;) (type 12) (param f32 f64) (result f64 f32)
    block (type 29) (result f64 f32) ;; label = @1
      i64.const 12
      i64.const 2
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 1
      local.get 0
    end
    i64.const 12
    i64.const 2
    call $finite_wasm_unstack
  )
  (func $swap-f64-i32 (;15;) (type 13) (param f64 i32) (result i32 f64)
    block (type 30) (result i32 f64) ;; label = @1
      i64.const 12
      i64.const 2
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      local.get 1
      local.get 0
    end
    i64.const 12
    i64.const 2
    call $finite_wasm_unstack
  )
  (func $f32-i32 (;16;) (type 14) (param f32 i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 1
    end
    i64.const 4
    i64.const 2
    call $finite_wasm_unstack
  )
  (func $i32-i64 (;17;) (type 15) (param i32 i64) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 1
    end
    i64.const 8
    i64.const 2
    call $finite_wasm_unstack
  )
  (func $f64-f32 (;18;) (type 16) (param f64 f32) (result f32)
    block (result f32) ;; label = @1
      i64.const 4
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 1
    end
    i64.const 4
    i64.const 2
    call $finite_wasm_unstack
  )
  (func $i64-f64 (;19;) (type 17) (param i64 f64) (result f64)
    block (result f64) ;; label = @1
      i64.const 8
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 1
    end
    i64.const 8
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;20;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      call $const-i32
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;21;) (type 2) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      call $const-i64
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;22;) (type 3) (result f32)
    block (result f32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      call $const-f32
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;23;) (type 4) (result f64)
    block (result f64) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      call $const-f64
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;24;) (type 5) (result i32 i64)
    block (type 5) (result i32 i64) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      call $const-i32-i64
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;25;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i32.const 32
      call $id-i32
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;26;) (type 2) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i64.const 64
      call $id-i64
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;27;) (type 3) (result f32)
    block (result f32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      f32.const 0x1.51eb86p+0 (;=1.32;)
      call $id-f32
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;28;) (type 4) (result f64)
    block (result f64) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      f64.const 0x1.a3d70a3d70a3dp+0 (;=1.64;)
      call $id-f64
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;29;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      f32.const 0x1.00ccccp+5 (;=32.1;)
      i32.const 32
      call $f32-i32
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;30;) (type 2) (result i64)
    block (result i64) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      i32.const 32
      i64.const 64
      call $i32-i64
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;31;) (type 3) (result f32)
    block (result f32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      f64.const 0x1p+6 (;=64;)
      f32.const 0x1p+5 (;=32;)
      call $f64-f32
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;32;) (type 4) (result f64)
    block (result f64) ;; label = @1
      i64.const 16
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      i64.const 64
      f64.const 0x1.0066666666666p+6 (;=64.1;)
      call $i64-f64
    end
    i64.const 16
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;33;) (type 18) (result i32 f64)
    block (type 18) (result i32 f64) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      i32.const 32
      f64.const 0x1.a3d70a3d70a3dp+0 (;=1.64;)
      call $id-i32-f64
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;34;) (type 19) (result i32 i32)
    block (type 19) (result i32 i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      i32.const 1
      i32.const 2
      call $swap-i32-i32
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;35;) (type 20) (result f64 f32)
    block (type 20) (result f64 f32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      f32.const 0x1p+0 (;=1;)
      f64.const 0x1p+1 (;=2;)
      call $swap-f32-f64
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;36;) (type 18) (result i32 f64)
    block (type 18) (result i32 f64) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      f64.const 0x1p+0 (;=1;)
      i32.const 2
      call $swap-f64-i32
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;37;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      i32.const 3
      i32.const 4
      call $swap-i32-i32
      i64.const 1
      call $finite_wasm_gas
      i32.add
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;38;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      i32.const 3
      i32.const 4
      call $swap-i32-i32
      i64.const 3
      call $finite_wasm_gas
      i32.const 5
      i32.add
      i32.mul
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;39;) (type 19) (result i32 i32)
    block (type 19) (result i32 i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      i32.const 3
      i32.const 4
      call $swap-i32-i32
      i64.const 1
      call $finite_wasm_gas
      call $swap-i32-i32
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $fac (;40;) (type 7) (param i64) (result i64)
    block (result i64) ;; label = @1
      i64.const 24
      i64.const 1
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      local.get 0
      i64.eqz
      if (result i64) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i64.const 1
      else
        i64.const 5
        call $finite_wasm_gas
        local.get 0
        local.get 0
        i64.const 1
        i64.sub
        call $fac
        i64.const 1
        call $finite_wasm_gas
        i64.mul
      end
    end
    i64.const 24
    i64.const 1
    call $finite_wasm_unstack
  )
  (func $fac-acc (;41;) (type 21) (param i64 i64) (result i64)
    block (result i64) ;; label = @1
      i64.const 24
      i64.const 2
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      local.get 0
      i64.eqz
      if (result i64) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        local.get 1
      else
        i64.const 7
        call $finite_wasm_gas
        local.get 0
        i64.const 1
        i64.sub
        local.get 0
        local.get 1
        i64.mul
        call $fac-acc
      end
    end
    i64.const 24
    i64.const 2
    call $finite_wasm_unstack
  )
  (func $fib (;42;) (type 7) (param i64) (result i64)
    block (result i64) ;; label = @1
      i64.const 24
      i64.const 1
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      local.get 0
      i64.const 1
      i64.le_u
      if (result i64) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i64.const 1
      else
        i64.const 4
        call $finite_wasm_gas
        local.get 0
        i64.const 2
        i64.sub
        call $fib
        i64.const 4
        call $finite_wasm_gas
        local.get 0
        i64.const 1
        i64.sub
        call $fib
        i64.const 1
        call $finite_wasm_gas
        i64.add
      end
    end
    i64.const 24
    i64.const 1
    call $finite_wasm_unstack
  )
  (func $even (;43;) (type 22) (param i64) (result i32)
    block (result i32) ;; label = @1
      i64.const 16
      i64.const 1
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      local.get 0
      i64.eqz
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i32.const 44
      else
        i64.const 4
        call $finite_wasm_gas
        local.get 0
        i64.const 1
        i64.sub
        call $odd
      end
    end
    i64.const 16
    i64.const 1
    call $finite_wasm_unstack
  )
  (func $odd (;44;) (type 22) (param i64) (result i32)
    block (result i32) ;; label = @1
      i64.const 16
      i64.const 1
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      local.get 0
      i64.eqz
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i32.const 99
      else
        i64.const 4
        call $finite_wasm_gas
        local.get 0
        i64.const 1
        i64.sub
        call $even
      end
    end
    i64.const 16
    i64.const 1
    call $finite_wasm_unstack
  )
  (func $runaway (;45;) (type 23)
    i64.const 1
    call $finite_wasm_gas
    call $runaway
  )
  (func $mutual-runaway1 (;46;) (type 23)
    i64.const 1
    call $finite_wasm_gas
    call $mutual-runaway2
  )
  (func $mutual-runaway2 (;47;) (type 23)
    i64.const 1
    call $finite_wasm_gas
    call $mutual-runaway1
  )
  (func (;48;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      call $const-i32
      i64.const 3
      call $finite_wasm_gas
      i32.const 2
      i32.const 3
      select
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;49;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i32.const 2
      call $const-i32
      i64.const 2
      call $finite_wasm_gas
      i32.const 3
      select
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;50;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      i32.const 2
      i32.const 3
      call $const-i32
      i64.const 1
      call $finite_wasm_gas
      select
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;51;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      call $const-i32
      i64.const 1
      call $finite_wasm_gas
      if (result i32) ;; label = @2
        i64.const 1
        call $finite_wasm_gas
        i32.const 1
      else
        i64.const 1
        call $finite_wasm_gas
        i32.const 2
      end
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;52;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        call $const-i32
        i64.const 2
        call $finite_wasm_gas
        i32.const 2
        br_if 0 (;@2;)
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;53;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 2
        call $const-i32
        i64.const 1
        call $finite_wasm_gas
        br_if 0 (;@2;)
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;54;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        call $const-i32
        i64.const 2
        call $finite_wasm_gas
        i32.const 2
        br_table 0 (;@2;) 0 (;@2;)
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;55;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 2
        call $const-i32
        i64.const 1
        call $finite_wasm_gas
        br_table 0 (;@2;) 0 (;@2;)
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $func (;56;) (type $check) (param i32 i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 2
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 4
    i64.const 2
    call $finite_wasm_unstack
  )
  (func (;57;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        call $const-i32
        i64.const 3
        call $finite_wasm_gas
        i32.const 2
        i32.const 0
        call_indirect (type $check)
      end
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;58;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 2
        call $const-i32
        i64.const 2
        call $finite_wasm_gas
        i32.const 0
        call_indirect (type $check)
      end
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;59;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 12
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        i32.const 2
        call $const-i32
        i64.const 1
        call $finite_wasm_gas
        call_indirect (type $check)
      end
    end
    i64.const 12
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;60;) (type 23)
    block ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      call $const-i32
      i64.const 2
      call $finite_wasm_gas
      i32.const 1
      i32.store
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;61;) (type 23)
    block ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      i32.const 10
      call $const-i32
      i64.const 1
      call $finite_wasm_gas
      i32.store
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;62;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      call $const-i32
      i64.const 1
      call $finite_wasm_gas
      memory.grow
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;63;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      call $const-i32
      i64.const 1
      call $finite_wasm_gas
      i64.const 4
      i64.const 0
      call $finite_wasm_unstack
      return
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;64;) (type 23)
    block ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      call $const-i32
      i64.const 1
      call $finite_wasm_gas
      drop
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;65;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 2
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        call $const-i32
        i64.const 1
        call $finite_wasm_gas
        br 0 (;@2;)
      end
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;66;) (type 1) (result i32)
    (local i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      call $const-i32
      i64.const 2
      call $finite_wasm_gas
      local.set 0
      local.get 0
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;67;) (type 1) (result i32)
    (local i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      call $const-i32
      i64.const 1
      call $finite_wasm_gas
      local.tee 0
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;68;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      call $const-i32
      i64.const 2
      call $finite_wasm_gas
      global.set $a
      global.get $a
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;69;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      call $const-i32
      i64.const 1
      call $finite_wasm_gas
      i32.load
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $dummy (;70;) (type 6) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func $du (;71;) (type 8) (param f32) (result f32)
    block (result f32) ;; label = @1
      i64.const 4
      i64.const 1
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 0
    end
    i64.const 4
    i64.const 1
    call $finite_wasm_unstack
  )
  (func (;72;) (type 3) (result f32)
    block (result f32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      block (result f32) ;; label = @2
        f32.const 0x0p+0 (;=0;)
        call $du
        i64.const 1
        call $finite_wasm_gas
        f32.sqrt
      end
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;73;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        i32.const 10
        i32.add
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;74;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 10
        i32.const 1
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.sub
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;75;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.eqz
      end
    end
    i64.const 4
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;76;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 1
        call $dummy
        i64.const 2
        call $finite_wasm_gas
        i32.const 10
        i32.le_u
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;77;) (type 1) (result i32)
    block (result i32) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 4
      call $finite_wasm_gas
      block (result i32) ;; label = @2
        i32.const 10
        i32.const 1
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i32.ne
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func (;78;) (type 2) (result i64)
    block (result i64) ;; label = @1
      i64.const 8
      i64.const 0
      call $finite_wasm_stack
      i64.const 3
      call $finite_wasm_gas
      block (result i64) ;; label = @2
        i32.const 1
        call $dummy
        i64.const 1
        call $finite_wasm_gas
        i64.extend_i32_s
      end
    end
    i64.const 8
    i64.const 0
    call $finite_wasm_unstack
  )
  (func $return-from-long-argument-list-helper (;79;) (type 24) (param f32 i32 i32 f64 f32 f32 f32 f64 f32 i32 i32 f32 f64 i64 i64 i32 i64 i64 f32 i64 i64 i64 i32 f32 f32 f32 f64 f32 i32 i64 f32 f64 f64 f32 i32 f32 f32 f64 i64 f64 i32 i64 f32 f64 i32 i32 i32 i64 f64 i32 i64 i64 f64 f64 f64 f64 f64 f64 i32 f32 f64 f64 i32 i64 f32 f32 f32 i32 f64 f64 f64 f64 f64 f32 i64 i64 i32 i32 i32 f32 f64 i32 i64 f32 f32 f32 i32 i32 f32 f64 i64 f32 f64 f32 f32 f32 i32 f32 i64 i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 4
      i64.const 100
      call $finite_wasm_stack
      i64.const 1
      call $finite_wasm_gas
      local.get 99
    end
    i64.const 4
    i64.const 100
    call $finite_wasm_unstack
  )
  (func (;80;) (type 6) (param i32) (result i32)
    block (result i32) ;; label = @1
      i64.const 580
      i64.const 1
      call $finite_wasm_stack
      i64.const 101
      call $finite_wasm_gas
      f32.const 0x0p+0 (;=0;)
      i32.const 0
      i32.const 0
      f64.const 0x0p+0 (;=0;)
      f32.const 0x0p+0 (;=0;)
      f32.const 0x0p+0 (;=0;)
      f32.const 0x0p+0 (;=0;)
      f64.const 0x0p+0 (;=0;)
      f32.const 0x0p+0 (;=0;)
      i32.const 0
      i32.const 0
      f32.const 0x0p+0 (;=0;)
      f64.const 0x0p+0 (;=0;)
      i64.const 0
      i64.const 0
      i32.const 0
      i64.const 0
      i64.const 0
      f32.const 0x0p+0 (;=0;)
      i64.const 0
      i64.const 0
      i64.const 0
      i32.const 0
      f32.const 0x0p+0 (;=0;)
      f32.const 0x0p+0 (;=0;)
      f32.const 0x0p+0 (;=0;)
      f64.const 0x0p+0 (;=0;)
      f32.const 0x0p+0 (;=0;)
      i32.const 0
      i64.const 0
      f32.const 0x0p+0 (;=0;)
      f64.const 0x0p+0 (;=0;)
      f64.const 0x0p+0 (;=0;)
      f32.const 0x0p+0 (;=0;)
      i32.const 0
      f32.const 0x0p+0 (;=0;)
      f32.const 0x0p+0 (;=0;)
      f64.const 0x0p+0 (;=0;)
      i64.const 0
      f64.const 0x0p+0 (;=0;)
      i32.const 0
      i64.const 0
      f32.const 0x0p+0 (;=0;)
      f64.const 0x0p+0 (;=0;)
      i32.const 0
      i32.const 0
      i32.const 0
      i64.const 0
      f64.const 0x0p+0 (;=0;)
      i32.const 0
      i64.const 0
      i64.const 0
      f64.const 0x0p+0 (;=0;)
      f64.const 0x0p+0 (;=0;)
      f64.const 0x0p+0 (;=0;)
      f64.const 0x0p+0 (;=0;)
      f64.const 0x0p+0 (;=0;)
      f64.const 0x0p+0 (;=0;)
      i32.const 0
      f32.const 0x0p+0 (;=0;)
      f64.const 0x0p+0 (;=0;)
      f64.const 0x0p+0 (;=0;)
      i32.const 0
      i64.const 0
      f32.const 0x0p+0 (;=0;)
      f32.const 0x0p+0 (;=0;)
      f32.const 0x0p+0 (;=0;)
      i32.const 0
      f64.const 0x0p+0 (;=0;)
      f64.const 0x0p+0 (;=0;)
      f64.const 0x0p+0 (;=0;)
      f64.const 0x0p+0 (;=0;)
      f64.const 0x0p+0 (;=0;)
      f32.const 0x0p+0 (;=0;)
      i64.const 0
      i64.const 0
      i32.const 0
      i32.const 0
      i32.const 0
      f32.const 0x0p+0 (;=0;)
      f64.const 0x0p+0 (;=0;)
      i32.const 0
      i64.const 0
      f32.const 0x0p+0 (;=0;)
      f32.const 0x0p+0 (;=0;)
      f32.const 0x0p+0 (;=0;)
      i32.const 0
      i32.const 0
      f32.const 0x0p+0 (;=0;)
      f64.const 0x0p+0 (;=0;)
      i64.const 0
      f32.const 0x0p+0 (;=0;)
      f64.const 0x0p+0 (;=0;)
      f32.const 0x0p+0 (;=0;)
      f32.const 0x0p+0 (;=0;)
      f32.const 0x0p+0 (;=0;)
      i32.const 0
      f32.const 0x0p+0 (;=0;)
      i64.const 0
      local.get 0
      call $return-from-long-argument-list-helper
    end
    i64.const 580
    i64.const 1
    call $finite_wasm_unstack
  )
)

(assert_return (invoke "type-i32") (i32.const 0x132))
(assert_return (invoke "type-i64") (i64.const 0x164))
(assert_return (invoke "type-f32") (f32.const 0xf32))
(assert_return (invoke "type-f64") (f64.const 0xf64))
(assert_return (invoke "type-i32-i64") (i32.const 0x132) (i64.const 0x164))

(assert_return (invoke "type-first-i32") (i32.const 32))
(assert_return (invoke "type-first-i64") (i64.const 64))
(assert_return (invoke "type-first-f32") (f32.const 1.32))
(assert_return (invoke "type-first-f64") (f64.const 1.64))

(assert_return (invoke "type-second-i32") (i32.const 32))
(assert_return (invoke "type-second-i64") (i64.const 64))
(assert_return (invoke "type-second-f32") (f32.const 32))
(assert_return (invoke "type-second-f64") (f64.const 64.1))

(assert_return (invoke "type-all-i32-f64") (i32.const 32) (f64.const 1.64))
(assert_return (invoke "type-all-i32-i32") (i32.const 2) (i32.const 1))
(assert_return (invoke "type-all-f32-f64") (f64.const 2) (f32.const 1))
(assert_return (invoke "type-all-f64-i32") (i32.const 2) (f64.const 1))

(assert_return (invoke "as-binary-all-operands") (i32.const 7))
(assert_return (invoke "as-mixed-operands") (i32.const 32))
(assert_return (invoke "as-call-all-operands") (i32.const 3) (i32.const 4))

(assert_return (invoke "fac" (i64.const 0)) (i64.const 1))
(assert_return (invoke "fac" (i64.const 1)) (i64.const 1))
(assert_return (invoke "fac" (i64.const 5)) (i64.const 120))
(assert_return (invoke "fac" (i64.const 25)) (i64.const 7034535277573963776))
(assert_return (invoke "fac-acc" (i64.const 0) (i64.const 1)) (i64.const 1))
(assert_return (invoke "fac-acc" (i64.const 1) (i64.const 1)) (i64.const 1))
(assert_return (invoke "fac-acc" (i64.const 5) (i64.const 1)) (i64.const 120))
(assert_return
  (invoke "fac-acc" (i64.const 25) (i64.const 1))
  (i64.const 7034535277573963776)
)

(assert_return (invoke "fib" (i64.const 0)) (i64.const 1))
(assert_return (invoke "fib" (i64.const 1)) (i64.const 1))
(assert_return (invoke "fib" (i64.const 2)) (i64.const 2))
(assert_return (invoke "fib" (i64.const 5)) (i64.const 8))
(assert_return (invoke "fib" (i64.const 20)) (i64.const 10946))

(assert_return (invoke "even" (i64.const 0)) (i32.const 44))
(assert_return (invoke "even" (i64.const 1)) (i32.const 99))
(assert_return (invoke "even" (i64.const 100)) (i32.const 44))
(assert_return (invoke "even" (i64.const 77)) (i32.const 99))
(assert_return (invoke "odd" (i64.const 0)) (i32.const 99))
(assert_return (invoke "odd" (i64.const 1)) (i32.const 44))
(assert_return (invoke "odd" (i64.const 200)) (i32.const 99))
(assert_return (invoke "odd" (i64.const 77)) (i32.const 44))

(assert_return (invoke "as-select-first") (i32.const 0x132))
(assert_return (invoke "as-select-mid") (i32.const 2))
(assert_return (invoke "as-select-last") (i32.const 2))

(assert_return (invoke "as-if-condition") (i32.const 1))

(assert_return (invoke "as-br_if-first") (i32.const 0x132))
(assert_return (invoke "as-br_if-last") (i32.const 2))

(assert_return (invoke "as-br_table-first") (i32.const 0x132))
(assert_return (invoke "as-br_table-last") (i32.const 2))

(assert_return (invoke "as-call_indirect-first") (i32.const 0x132))
(assert_return (invoke "as-call_indirect-mid") (i32.const 2))
(assert_trap (invoke "as-call_indirect-last") "undefined element")

(assert_return (invoke "as-store-first"))
(assert_return (invoke "as-store-last"))

(assert_return (invoke "as-memory.grow-value") (i32.const 1))
(assert_return (invoke "as-return-value") (i32.const 0x132))
(assert_return (invoke "as-drop-operand"))
(assert_return (invoke "as-br-value") (i32.const 0x132))
(assert_return (invoke "as-local.set-value") (i32.const 0x132))
(assert_return (invoke "as-local.tee-value") (i32.const 0x132))
(assert_return (invoke "as-global.set-value") (i32.const 0x132))
(assert_return (invoke "as-load-operand") (i32.const 1))

(assert_return (invoke "as-unary-operand") (f32.const 0x0p+0))
(assert_return (invoke "as-binary-left") (i32.const 11))
(assert_return (invoke "as-binary-right") (i32.const 9))
(assert_return (invoke "as-test-operand") (i32.const 0))
(assert_return (invoke "as-compare-left") (i32.const 1))
(assert_return (invoke "as-compare-right") (i32.const 1))
(assert_return (invoke "as-convert-operand") (i64.const 1))

(assert_return (invoke "return-from-long-argument-list" (i32.const 42)) (i32.const 42))

;; Invalid typing

