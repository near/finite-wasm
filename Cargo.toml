[package]
name = "finite-wasm"
version = "0.6.0"
edition = "2021"
authors = ["Simonas Kazlauskas <finite-wasm@kazlauskas.me>"]
license = "MIT OR Apache-2.0"
readme = "README.mkd"
repository = "https://github.com/near/finite-wasm"
homepage = "https://github.com/near/finite-wasm"
documentation = "https://docs.rs/finite-wasm"
description = """
Guarantee deterministic limits on execution time and space resources made available to the
WebAssembly programs in a runtime-agnostic way.
"""
exclude = ["/tests/snaps"]

[[test]]
name = "wast"
path = "src/wast_tests/runner.rs"
harness = false
required-features = ["wast-tests"]

[[bench]]
name = "instrument_all"
path = "benches/instrument_all.rs"
harness = false
required-features = ["instrument"]

[dependencies]
atoi = { version = "2.0", optional = true }
bitvec = "1.0.1"
dissimilar = "1"
lazy_static = { version = "1.4", optional = true }
libc = { version = "0.2.144", optional = true }
wasmparser = { version = "0.228.0", features = ["simd"] }
# Ensure that we depend on a single version of wasmparser only (patch versions bump wasmparser dep)
thiserror = "1"
num-traits = "0.2.15"
prefix-sum-vec = "0.1.2"
tempfile = { version = "3.5", optional = true }
wasm-encoder = { version = "0.228.0", optional = true, features = ["wasmparser"] }
wasmprinter = { version = "0.228", optional = true }
wast = { version = "228", optional = true }

[dev-dependencies]
arbitrary = { version = "1.3", features = ["derive"] }
bolero = { version = "0.10.0", features = ["arbitrary"] }
criterion = "0.5.0"
rayon = "1.6.1"
tempfile = "3.7"
walkdir = "2.3.0"
wasm-instrument = "0.4"
wasm-smith = "0.228"
wasmparser = "0.228.0"

[features]
instrument = ["wasm-encoder"]
wast-tests = ["atoi", "instrument", "lazy_static", "libc", "tempfile", "wast", "wasmprinter"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "finite_wasm_docs"]

[profile.fuzz]
inherits = "dev"
opt-level = 3
incremental = false
codegen-units = 1

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(finite_wasm_docs)'] }
